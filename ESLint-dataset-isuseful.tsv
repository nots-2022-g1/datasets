GitCommitMessage	IsUseful	MatchedOnKeyword
2.0.0-rc.0	False	
sponsors: sync readme with website	True	
8.2.0	False	
sponsors: sync readme with website	True	
1.4.1	False	
sponsors: sync readme with website	True	
sponsors: sync readme with website	True	
new: no-continue rule (fixes #1945)	False	
chore: update github actions (#12984)	False	
sponsors: sync readme with website	True	
upgrade: devdependencies (#8303)	False	
rule: no assignment in return statement	False	
add travis ci hookup	False	
docs: update broken link (#7490)	False	
8.12.0	False	
build: changelog update for 4.7.2	True	
build: remove flaky perf test from travis	False	
add try-catch scoping with tests	False	
build: changelog update for 7.11.0	True	
7.23.0	False	
docs: typo, add missing quotation mark	False	
update: fix indentation of comment	False	
migrate variables array to map	True	
ensure estraverse version 1.2.0 or later	False	
5.0.0-alpha.2	False	
rule: do not use 'new' for side effects	True	
upgrade: debug@4 (fixes #10854) (#10887)	False	
docs: add chatroom to faq	True	
chore: cleanup issue templates (#15039)	False	
3.17.0	False	
7.2.0	False	
sponsors: sync readme with website	True	
sponsors: sync readme with website	True	
new: add config validator (refs #2179)	True	
docs: remove references to esprima	True	
update: support numeric separators (refs #13568) (#13581)* update astutils.isdecimalinteger and astutils.isdecimalintegernumerictoken* add tests and comment for prefer-numeric-literals* add tests for quote-props	True	
sponsors: sync readme with website	True	
docs: fix example for sort-imports ignoredeclarationsort (#11242)	True	
fix: keyword "else" must not be followed by a newline (fixes #3226)	False	
docs: add deprecated note to `working-with-rules-deprecated` page (#14344)	True	
build: add ???chore??? to commit tags (fixes #5880) (#5929)	True	
docs: fix no-restricted-globals wrong config. (#9305)	False	
docs: added double quotes for json keys for comma-spacing and key-spacing rule	True	
update: `allownamedfunctions` in `prefer-arrow-callback` (fixes #5675)	False	
update: rename id-blacklist to id-denylist (fixes #13407) (#13408)* update: rename id-blacklist to id-denylist (fixes #13407)* update index.js	True	
update: add --fix to no-debugger (#8660)	True	
docs: fix outdated description of `baseconfig` option (#10657)the documentation for `baseconfig` implied the existence of a "default" configuration for normal linting runs, because the documentation hadn't been updated since we stopped enabling rules by default.	True	
docs: document default for operator assignment (fixes #4835)	True	
update: pass file path to parse function (fixes #5344) (#7024)	True	
fix: corrects configs merging into base config (fixes #838)	True	
breaking: correct links between variables and references (fixes #4615)	False	
docs: corrected class extension example (#12176)	False	
chore: enable array-bracket-spacing on eslint codebase (#7830)there were about 900 existing violations with the `never` option, and about 20000 existing violations with the `always` option enabled, so i used the default `never` option.the changes were all made using eslint's autofixer.	True	
fix: windows path parsing for junit (fixes #12507) (#12509)* fix: windows path parsing for junit (fixes #12507)this commit aims to fix the issues described in #12507 by removing theassumption that posix style filepaths are supplied by messages.the tests for this are also updated to run on both windows and posixbased systems. the results can be seen by running eslint with the junitformatter on a windows system.full details can be seen in the issue mentioned above.* fix: use const instead of functionaddresses some comments.	True	
upgrade: inquirer (fixes #5265)	False	
updating no-undef patch (see pull request #164)* simplify parseboolean()* make knowledge of```/*jshint*/``` and ```/*global */``` internal to eslint object* put user-declared globals in program scope	True	
update: return to accept `undefined` type (fixes #3382)	True	
upgrade: doctrine to 0.5.2	True	
2.1.0	False	
fix: no-var fixed to incorrect code (fixes #11441) (#11443)	True	
fix: yoda treats negative numbers as literals (fixes #1571)negative numbers like `-1` are represented in the ast as anumeric `literal` node with positive one as the value, wrapped ina `unaryexpression` node with `-` as the prefix operator to negatethe literal. this pr treats both positive and negative numbers asnormal literals.because the range test exception validates ranges to ensure thatthe left end of the range <= the right end of the range, it wasnecessary to combine the negating wrapper and literal into asingle negative literal node rather than simply checking for thepresence of the negating wrapper so that the actual negative valueis available.this brings test coverage of `lib/rules/yoda.js` back up to 100%.it also fixes a spelling error in the docs pointed out by @ljharb.	True	
sponsors: sync readme with website	True	
update: allow empty arrow body (fixes #4411)	False	
docs: fixing typos (refs #5446)(#6494)these typos were picked up in earlier pr but due to me making a mess ofgithub i've had to put them in a separate pr. see #6453 for original pr.	True	
build: fix bundling script (fixes #5680)	False	
docs: add tsc meeting quorum requirement (#8086)adding a note about tsc meetings requiring a quorum of more than half of the tsc being present at meetings in order to vote on any agenda items.	True	
fix: env-specified ecmafeatures had been wrong (fixes #3735)env-specified globals and ecmafeatures had been handled after allhierarchy configs merged. so it could not overwrite the parent configwith child's env-specified configs correctly.this commit moves the process for env-specified config to the loadconfigfunction. as the result, it can handle child's env-specified configs inthe regular overwriting process.	True	
add support for pre-defined environment globals (re: #228)	True	
sponsors: sync readme with website	True	
fix: line number for duplicate object keys error (fixes #3573)	True	
upgrade: espree to 0.12.3 (fixes #2195)	True	
docs: remove tdz scope from the scope manager interface documentation (#12054)	False	
fix: eqeqeq rule reports incorrect locations (#12265)	False	
1.10.1	False	
added further instructions for multiline test cases.	True	
docs: add more info to migration guide (fixes #3439)	True	
fix: display pipe character correctly in test output (#12771)	False	
added .eslintignore to load from parents folders (fixes #681)	True	
fix: `indent` rule does not indent when doing multi-line chain calls (fixes #3279)	False	
docs: add meteor to avaiable environments list	True	
clarify issue requirement for doc pull requests	True	
update: enforceforsequenceexpressions to no-extra-parens (fixes #11916) (#12142)	True	
7.9.0	False	
0.13.0	False	
fix: camelcase false positive with computed property (fixes #13022) (#13023)	False	
chore: delete duplicated test. (#8527)	False	
split eslint.define into eslint.definerule and eslint.definerules	True	
fixes #454: escape values for xml in checkstyle formatter	True	
chore: remove dead code from prefer-const (#8683)this code was added to work around a bug in acorn (https://github.com/ternjs/acorn/issues/487), which has since been fixed.	True	
build: changelog update for 8.0.0-beta.0	True	
docs: reorganized to avoid misunderstandings. (#9434)original headings made it seem that sections after step 5 could be additional steps. and summary of workflowwithout a link to the full workflow could make a reader think that the summary is the whole workflow.	True	
fix: catch self-assignment operators in `no-magic-number` (fixes #4400)	True	
rule to detect constructors that don't begin with capital letters (fixes #4)	True	
docs: clean up getting started guide (#12544)	False	
new: allow other file extensions (fixes #801)	False	
docs: clarify `eslint:recommended` semver policy (#12429)	False	
3.7.0	False	
docs: clarify rule details for no-template-curly-in-string (#6900)	True	
upgrade: handlebars to >= 4.0.5 for security reasons (fixes #4642)nsp has a reported security vulnerability with old versions of uglify, which is used by handlebars < 4.0.5.https://nodesecurity.io/advisories/48this update changes eslint's minimum handlebars version up from 4.0.0 to 4.0.5.	True	
sponsors: sync readme with website	True	
fix: ignoring empty comments. (fixes #1488)	False	
chore: remove cla check from bot	False	
docs: update docs/rules/no-plusplus.mdfix minor grammatical issue - use correct "its" instead of "it's".	False	
fix: correctly consume ruletester statics (#15507)	False	
6.1.0	False	
docs: fix anchor in 'docs/developer-guide/working-with-rules.md' (#14332)fixes the `getsourcecode()` anchor ref.	True	
breaking: remove tdz scopes (fixes #10245) (#10270)* breaking: remove tdz scopes (fixes #10245)* switch to v4.0.0-alpha.0	True	
chore: upgrade deps (#10339)	False	
fix: do not fail on nested unknown operators (#10561)	True	
docs: add soda0289 to development team (#8367)	True	
docs: improve sort-keys (#12791)* docs: improve sort-keys wording* docs: diff sort-keys??? to help sell the feature	True	
update: overrides for space-unary-ops (fixes #5060)	True	
new: add rule default-param-last (fixes #11361) (#12188)* new: add rule default-param-last (fixes #11361)* chore: fix typos* chore: add test cases* apply suggestion: add column for a test case* update: change error message* docs: add example in opening section* add test cases about parameter destructuring	True	
2.13.1	False	
update: return type error in `valid-jsdoc` rule (fixes #4443)	False	
chore: improve comment explanation of `indent` internal functions (#8800)	False	
docs: replace link to deprecated rule with newer ruleno-space-before-semi is deprecated and replaced with semi-spacing, so link to that instead.	True	
feat: normalize ecmaversion to eslint-scope when using custom parser (#15268)* feat: normalize ecmaversion to eslint-scope when using custom parser* test: add testcase	True	
docs: move gitter badge	False	
fix: no-invalid-meta crashes for non object values (fixes #10750) (#10753)	True	
breaking: convert cliengine to es6 class (refs #8231) (#8262)this converts cliengine to an es6 class. this will not break clients that were using cliengine as documented, but it could break clients that are relying on undocumented behavior in cliengine (e.g. enumerable methods).	True	
upgrade: eslint-tester to 0.7.0	True	
fix: block-scoped-var to work with classes (fixes #2280)	True	
chore: adding debug logs on successful plugin loads (#10100)* chore: adding debug logs on successful plugin loads* chore: adding resolved plugin path to debug logging	True	
sponsors: sync readme with website	True	
re-add lines that were accidentally deleted from config	False	
fixing no use before define issues	True	
docs: remove old markdown issue template (#15556)* chore: remove old markdown issue templatethis template in markdown format has been superseded by the forms in the`.github./issue_template` directory. when viewing this file in thegithub ui, it shows a warning:> you are using an old version of issue templates. please update to the> new issue template workflow. [learn more][1][1]: https://docs.github.com/articles/about-issue-and-pull-request-templates* docs: link to new issue template chooserall of these direct links to our old markdown-based issue templates arebroken and just lead to an empty form. i could link directly to therelevant new yml template, but standardizing on `/issues/new/choose`seems safer as it'll continue working even if we change the availabletemplates.	True	
chore: test on node.js 15 (#13844)running `npm install` in the repository with node.js 15 currentlyrequires the `--legacy-peer-deps` requirement because npm is resolving`eslint-plugin-eslint-plugin`'s `eslint` peer dependency version as`undefined`. we can figure out later if that's an issue on our end ornpm's, but in the meantime this will let us run ci on node.js 15. i'mhoping this is a temporary situation so didn't update the contributingdocumentation to mention the flag.	True	
docs: grammar fix in no-sync	False	
update: check template literal in no-proto, no-iterator (fixes #12801) (#12806)* fix: check template literal prop in no-proto (#12801)* fix: check template literal prop in no-iterator (#12801)* add test cases	True	
fix: don't crash on empty array pattern item (fixes #2111)	False	
fix: prevent false positives with no-constant-condition (#15486)fixes #15467 by defining `isconstant` with `inbooleanposition` set to `false` as meaning:> for both string and number, if coerced to that type, the value will be constant.	True	
docs: forgotten parentheses in code snippet	True	
fix: `no-useless-rename` false positives (fixes #6266) (#6267)	False	
6.0.0-alpha.2	False	
fix: `prefer-template` had not been handling templateliteral as literal node (fixes #3507)	False	
fix: newline-before-return: bug with comment (fixes #5480)	True	
add no-undef (fixes #6)references to an undeclared variable will be flagged:```jsfoo = 1;   // 'foo' is not defined.```... unless it is explicitly mentioned in a /*global */ block:```js/*global foo:true*/foo = 1;```	True	
update: allow distinct alignment groups in key-spacing (fixes #1439)	False	
fix: bugfix for eqeqeq autofix (fixes #4540)finding range for ==/!= instead of assuming it is next token	True	
docs: fix v0.10.0 changelog	False	
docs: add note about typeof check for isnan (fixes #3985)`isnan` gives surprising results unless you also check the `typeof` the variable is `number`. explicitly calling this out in the documentation so people don't end up writing broken checks:```isnan('derp') // trueisnan({}); // trueisnan(undefined) // true```	True	
docs: fix js syntax and doc url in working-with-custom-formatters.md (#13828)* docs: fix js syntax in working-with-custom-formatters.md code samplemissing parenthesis on ruleurl causing syntax error in detailed formatter* docs: fix ruleurl in working-with-custom-formatters.md code sampleruleurl needs to get url from the docs object	True	
docs: clarify process for adding committers (#11272)* docs: clarify process for adding committers* update instructions to not include emailing twice.	True	
sponsors: sync readme with website	True	
docs: add details about "--fix" option for "sort-imports" rule (#8077)* docs: remove "fixable" statement for "sort-imports" rule* docs: add details about "--fix" option for "sort-imports" rule	True	
docs: describe options in rules under possible errors part 2 (#6063)	False	
update: check template literal in no-constant-condition (fixes #12815) (#12816)* fix: check template literal in no-constant-condition (fixes #12815)* add test cases* add tagged template test cases* treats truthy cases* check template literal truthy cases* fix typo, add test cases for cooked	True	
docs: update shell code fences for new website (#15522)fixes #15518	True	
adding eslint to jake	True	
chore: use precalculated counts in codeframe formatter (#8296)	True	
update: remove shebang workaround in spaced-line-comment (fixes #1433)credit to @ilovejary for the original pr (#1435) (https://github.com/ilovejary/eslint/commit/27fc2f617b2ed6b29dba0cb7c8612ec0dd8be8c0).	True	
update: added exceptions to `lines-around-comment` rule. (fixes #2965)added the following exceptions to the `lines-around-comment` rule:* `allowobjectstart`* `allowobjectend`* `allowarraystart`* `allowarrayend`see #2965	True	
chore: enable eslint-plugin-jsdoc (refs #11146) (#12332)* chore: enable eslint-plugin-jsdoc (refs #11146)* chore: enable jsdoc/check-types* chore: enable jsdoc/check-param-names* chore: enable jsdoc/check-alignment* chore: enable jsdoc/check-tag-names* chore: enable jsdoc/check-syntax* chore: enable jsdoc/implements-on-classes* chore: enable jsdoc/require-param-descriptions* chore: enable jsdoc/require-param-name* chore: enable jsdoc/require-param-type* chore: enable jsdoc/require-param* chore: enable jsdoc/require-returns-description* chore: enable jsdoc/require-returns-type* chore: enable jsdoc/require-returns* fix: eslint-plugin-jsdoc uses function by default* chore: fix test* fix: remove out of date comment	False	
new: disallow use of object.prototype methods on objects (fixes #2693) (#6107)	True	
refactoring plus added some tests	True	
update: fix && vs || short-circuiting false negatives (fixes #13634) (#13769)* update: fix && vs || short-circuiting false negatives (fixes #13634)when `constructor-super`, `no-throw-literal`, and`prefer-promise-reject-errors` are looking for plausible constructor orerror values, they fail to consider the short-circuiting behaviordifferences between the `&&` and `||` operators. this results in a falsenegative where these rules allow `foo && 42` when that expression cannotbe a constructor or error. if the left side is falsy, the expressionshort-circuits with the falsy value. if the left side is truthy, theresult of the expression is the right side value. all three rulesalready report the right side value in isolation but currentlyincorrectly allow it when on the right side of an `&&` expression.when @mdjermanovic added support for logical assignment operators, wedecided to ship with the corrected behavior for `&&=` by only checkingthe right side of the expression, accepting that treatment of `&&=`would be inconsistent with existing treatment of `&&`. this pr thenfixes the `&&` treatment in what we believe can be a semver-minor bugfix.a future improvement could detect statically falsy values on the leftside of `&&` expressions and report those as well. such a change couldalso update the `||` treatment to ignore plausibly-(constructor|error)values on the right side if the left side is statically truthy but notplausibly a constructor or error, so `42 || foo` should fail.* use correct short-circuit termco-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>co-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>	True	
update: check identifier in array pattern in id-length (fixes #12832) (#12839)* update: check identifier in array pattern in id-length (fixes #12832)* fix wrong test case* update documentation	False	
fix: strict rule supports classes (fixes #2977)	False	
sponsors: sync readme with website	True	
docs: remove or rewrite references to former ecmafeatures	True	
docs: suggest deleting branches after merging prs (#9449)this updates the maintainer guide to recommend deleting the git branchafter merging a pr. (it seems like we usually already do this, but ithink we should document it to make the recommendation more official.)	True	
fix: add parens for yield statement (fixes #10432) (#10468)	True	
docs: remove claim about semicolons from docs (#12944)the documentation claimed that js is unique amongc-like languages in having optional semicolons atthe end of statements. this is not true, as go (golang)also has optional semicolons and is c-like.this didn't seem terribly important, so rather thango on a tangent about what languages do or don't requiresemicolons, i just removed the claim.	True	
update: added 'allowsuper' option to `no-underscore-dangle` (fixes #6355) (#6662)* update: added 'allowsuper' option to no-underscore-dangle rule* added tests for allowaftersuper option for no-underscore-dangle* fixed tests for no-underscore-dangle* added extra allowaftersuper test for rule no-underscore-dangles	True	
fix: no-implicit-coercion invalid autofix with consecutive identifiers (#8340)previously, the no-implicit-coercion rule would convert code like `typeof+foo` to `typeofnumber(foo)`, combining the `typeof` keyword with the following identifier and changing the semantics. this commit updates the no-implicit-coercion autofixer to prevent that from happening.	True	
update: replace getlast() with lodash.last() (fixes #5456)`getlast()` is the only function in `lib/util.js` and it is essentiallyidentical to `lodash.last()`.the only difference is that `lodash.last()` returns `undefined` for emptyarrays instead of `null`. this minute difference does not seem to cause anytests to fail.it would allow us to remove the `lib/util.js` and `tests/lib/util.js` filesaltogether. it would also allow us to remove the duplicate implementation thatlives in `lib/rules/comma-dangle.js`.finally, it would provide a nice opportunity to clean up the docs in`docs/developer-guide/code-path-analysis.md` which erroneously point to thisfunction living in `lib/ast-utils.js`.for reference, this is lodash's implementation:function last(array) {var length = array ? array.length : 0;return length ? array[length - 1] : undefined;}	True	
fix: error when there's a \r in .eslintrc (#1172)	False	
rule: no-lonely-if (fixes #790)adds a new rule, no-lonely-if, which warns whenever an if statementis the only statement inside the else block of another if statement.the rule is off by default.	False	
fix: rest args should work in no-undef and block-scoped-var (fixes #1543)	False	
fix: `no-dupe-keys` type errors (fixes #6886) (#6889)	False	
new: report output to a file (fixes #1027)	True	
chore: fix typo in complexity.js (#12864)	False	
chore: add missing newlines to test cases (fixes #5947)chore: add missing newlines to test cases (fixes #5947)	True	
fix: improve diagnostics for shareable-config-missing errors (#11880)	True	
build: changelog update for 4.0.0-alpha.0	True	
update: module overrides all 'strict' rule options (fixes #4936)	False	
breaking: made eol-last less strict (fixes #1460)	False	
rule: no wrap func	False	
update: code path analysis for class fields (fixes #14343) (#14886)* fix: code path analysis for class fields (fixes #14343)* propertydefinition code paths* add test and comments* reverse order of code path closing* added codepath#origin* update tests/lib/linter/code-path-analysis/code-path.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update lib/linter/code-path-analysis/code-path.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
chore: document target global in makefile.js (#15084)	False	
update: add `except-parens` option to `no-return-assign` rule (fixes #2809)	True	
new: no-chained-assignments rule (fixes #6424) (#7904)	False	
update: add suggestions for no-unsafe-negation (fixes #12591) (#12609)	True	
update: improve suggestion testing experience (#12602)previously you had to explicitly pass the exact same value (undefined), which meant either explicitly set `suggestions: undefined`, or omit the property.i hate writing `undefined`, but i prefer to be explicit in my tests and say "i expect no suggestions".now you can pass any falsey, or an empty array, and the rule tester will perform as expected.	True	
new: no-duplicate-case rule to disallow a duplicate case label (fixes #2015)	True	
relaxed enforcement of camelcase rulethe `camelcase` rule now allows reading underscored properties:var foo = bar.baz_boom;fixes #672	True	
update: switch to using estraverse-fb (fixes #1712)	True	
fix: correctly handle commented code in `indent` autofixer (fixes #7604) (#7606)	True	
build: makefile - check for rule ids in docs titles (fixes #969)	True	
update: add autofix to rule multiline-ternary (#13958)* update: added auto-fix to multiline-ternaryi noticed unfixed warnings from this eslint rule and wanted to auto-fix them. while it may seem like doing `'\n? '` is opinionated, i did have changed to make this take a new option and either put the `?` on the previous line or next line. this is actually unnecessary because `operator-linebreak` handles it for you.* chore: fix linting* chore: review suggestions* chore: review suggestionsrefs: https://github.com/eslint/eslint/pull/12982/files#r409035292* chore: add a test incluing comments* chore: review suggestions* chore: fixer.replacetextrange() => removerange()* chore: review suggestions* chore: fix typoco-authored-by: kevin ghadyani <3948069+sawtaytoes@users.noreply.github.com>	True	
update: improve report location in arrow-body-style (refs #12334) (#13424)	False	
update: camelcase rule ignorelist added (#10783)* new: camelcase rule now accept ignore list* docs: documentation updated for camelcase rule ignore list	True	
fix: --init indent setting (fixes #2493)	False	
fix: replace `assert.deepequal` by `lodash.isequal` (fixes #6111) (#6112)	False	
sponsors: sync readme with website	True	
rule: the function constructor is eval	True	
fix: account for comments in implicit-arrow-linebreak (#10545)* add and pass for a test case for when a comment exists between an arrow and expression body in implicit-arrow-linebreak* fix formatting* add and pass test case for when arrow expression is set to variable* add test cases for when comments exist within parens enwrapped arrow function bodies, pass cases* add test cases for block comments, multiple comments within an arrow expression, pass test cases, create helper for formatting comments* add a test case to ensure filtering of comments between start of arrow expression and parens* change condition to check for length of comment text length* condense logic for comments filtering* reword documentation for helper function* account for multi arrow function test case with comments for implicit-arrow-linebreak, begin implementation for condition* add test case for when some arrow function bodies are wrapped with parens, add logic to account for test case* export fixer logic for besides to autofixbesides function, account for test cases with nested arrow functions, specify astutil functions in implicit arrow linebreak* remove extra semicolon from top* add test cases for async arrow functions, method chains, object literals, add parameter and documentation for column for formatcomments, add findfirsttoken helper* fix lines for cherry-pick* remove line* rename fixertarget to arrowbody for autofixbesides and addparentheses functions* add valid test cases* account for promise constructor and callback test cases* add test cases for multiline comments* remove dangling commas, add comments and extra details to jsdocs for clarity* update branch, fix import statement for ast-utils* apply requested change to string template for tests on lines 258 and 269* add and pass test cases for variable declarations with multiple declarations	True	
docs: fix duplicate entries in changelog (#9530)	False	
sponsors: sync readme with website	True	
change gettokens 2nd/3rd arguments to count tokens, not characters	True	
build: filter and sort versions in gensite (fixes #1430)	True	
fix: rewrite no-unused-vars rule (refs #1212)	False	
fix: add meta element with charset attribute. (#9365)open html output file used firefox and output the following error message in console.'the character encoding of the html document was not declared. the document will render with garbled text in some browser configurations if the document contains characters from outside the us-ascii range. the character encoding of the page must be declared in the document or in the transfer protocol.'so add meta element with charset(utf-8) attribute.	True	
build: use split instead of slice/indexof for commit check (fixes #6109) (#6110)	True	
build: update ci testing configuration (#11500)	False	
sponsors: sync readme with website	True	
docs: add missing quote mark (+=" ??? "+=") (#7613)	False	
8.0.0-rc.0	False	
fix: don't flag for-of statement (fixes #1852)	True	
improve no-negated-in-lhs descriptionafter @michaelficarra's suggestion at https://github.com/eslint/eslint/pull/544#discussion_r8993133	False	
update: add an option to `prefer-const` (fixes #5692) (#6040)	True	
docs: polish for max-classes-per-file rule (#10377)	True	
docs: add `visualstudio` to formatter list (#11480)	True	
fix: find jsxidentifier refs in no-unused-vars (fixes #1534)	False	
chore: update to use es6 classes (refs #7849) (#7891)* chore: update to es6 classes (refs #7849)* chore: refactor rulefixer to be plain object (refs #7849)* chore: make suggested changes (refs #7849)	True	
docs: add actionable fix to no-irregular-whitespace (#10558)this change make it explicit that rewriting the line could be asufficient fix for the no-irregular-whitespace rule.	True	
updated readme	False	
docs: no-process-exit: recommend process.exitcode (#10478)* docs: no-process-exit: recommend process.exitcode* docs: added node.js version info for process.exitcode	True	
chore: remove identical tests (#8851)this removes rule tests that were identical to other tests in the same file, making them completely redundant.these cases were detected by the new [`no-identical-tests`](https://github.com/not-an-aardvark/eslint-plugin-eslint-plugin/blob/8c19ab5eb8942e35f102ca300a83ac73f67ce26f/docs/rules/no-identical-tests.md) rule in `eslint-plugin-eslint-plugin`. i'm planning to enable that rule on the codebase in a follow-up pr.	True	
new: add getsourcelines() to core and rule context (fixed #1005)new: add getsourcelines() to core and rule context (fixed #1005)	True	
0.6.2	False	
chore: remove extraneous command from lint-staged config (#14314)	False	
add code coverage checks to npm test and update rule tests to have better coverage	True	
chore: add github organization to sponsor button (#12562)	True	
rule: no script url	False	
update: add ignorepattern to no-inline-comments (#13029)	True	
sponsors: sync readme with website	True	
fix: context report message to handle more scenarios (fixes #2746)	True	
docs: fix typo for arrow-spacing	True	
chore: fix invalid super() calls in tests (#11054)acorn now reports parsing errors for invalid uses of the `super` keyword, and some tests are failing on master as a result. this commit updates the affected tests as necessary (or removes them if they're no longer applicable).	True	
added contributing.md	False	
update: support globalthis in no-implied-eval (fixes #12670) (#13105)	False	
docs: alphabetize the "stylistic issues" section	False	
docs: update semantic versioning policy (#13563)* docs: update semantic versioning policy* update readme.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>co-authored-by: brandon mills <btmills@users.noreply.github.com>	False	
3.10.2	False	
build: package.json and changelog update for 2.6.0	True	
docs: fix the messageid example (fixes #9889) (#9892)	False	
docs: including for(;;) as valid case in no-constant-condition	True	
update: add new `multi-or-nest` option for the `curly` rule (fixes #1806)	True	
fix: no-cond-assign with `always` option reports switch case clauses (#12470)	False	
#580 remove eslint.getallcomments(), related docs, related tests	False	
update: consider env in no-implied-eval (fixes #12733) (#12757)* fix: consider env in no-implied-eval (fixes #12733)* fix typo, refactor to chaining* change to check only callexpression, refactoring* check defs* checks callee* check static string value* check falsy - first argument* check empty arg* fix typo	True	
update: .eslintrc to check more things	True	
fix: handle nested disable directive correctly (fixes #9318) (#9322)* fix: handle nested disable directive correctly (fixes #9318)* add unit test for enabled scenarios* add more test and identifier for all rules* chore: simply line-comment handling in fix for #9318 (#9323)* chore: handle disable-line comments in a separate pass (#9324)	True	
chore: add more test cases for `no-sequences` (#14579)	True	
docs: add config comments for rule examples 'accessor-pairs' to 'no-extra-semi' (refs #2271)	True	
new: `unicode-bom` rule to allow or disallow bom (fixes #5502) (#6230)	True	
fix: update doctrine to allow hyphens in jsdoc names (fixes #5612)	True	
docs: document the "correct" way to build an array with values (#13246)* document the "correct" way to build an array with values* merge example code blocks	True	
added documentation about configuration files	False	
docs: fix a wrong rule name in an example	False	
docs: fix typos,wrong path,backticks (#6663)	False	
build: add nodejs 6 to travis (fixes #5971) (#5973)	True	
breaking: removed comma spacing check from space-infix-ops (fixes #1361)	False	
fix: no-misleading-character-class crash on invalid regex (fixes #12169) (#12347)	False	
new: implement cachestrategy (refs eslint/rfcs#63) (#14119)* update: implement https://github.com/eslint/rfcs/pull/63* fix: correct tests* fix: isvalidcachestrategy now directly takes the cache strategy as string instead of confighelper object* fix: pass directly cachestratgey as string instead of confighelper objectupdated file-entry-cache to ^6.0.1also add tests outside of the cli-engine* style: define possible values for cachestrategy* test: remove only* fix: remove now useless option object* fix: correct jsdoc type* update docs/developer-guide/nodejs-api.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update lib/cli-engine/lint-result-cache.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update lib/cli-engine/lint-result-cache.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update lib/cli-engine/lint-result-cache.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update docs/user-guide/command-line-interface.mdco-authored-by: bryan mishkin <698306+bmish@users.noreply.github.com>co-authored-by: william hilton <wmhilton@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: bryan mishkin <698306+bmish@users.noreply.github.com>	True	
updated changelog	False	
add: warn on missing rule definition or deprecation (fixes #1549)to replace a rule, the old rule and its test should be deleted, and`conf/replacements.json` should be updated in the format:```{"rules": {"old-rule": ["new-rule", "another-new-rule"]}}```	True	
upgrade: @eslint/eslintrc to fix rule schema validation (fixes #13793) (#13794)* chore: repro missing built-in rule validation (refs #13793)the bulk of our tests for rule schemas are isolated unit tests of`configvalidator`. this is a single test to be sure we actually run ruleschema validation end-to-end and prevent cases like #13793.after i run a patch release of `@eslint/eslintrc`, i'll push a secondcommit on this branch to bump the dependency version and fix the test.* upgrade: @eslint/eslintrc for rule validation (fixes #13793)	True	
update: fix false negative of `arrow-spacing` (fixes #7079) (#7080)	False	
breaking: switch to 1-based columns (fixes #2284)	True	
upgrade: espree@7.3.0 (refs #13568) (#13609)* upgrade: espree@7.3.0* update docs* update types.js	False	
chore: remove internal linter#getdeclaredvariables method (refs #9161) (#9264)this updates `linter` to remove the `linter#getdeclaredvariables` method. the `context.getdeclaredvariables` method is still available to rules -- this just removes the version of the method on `linter`.	True	
fix: add end location to reports in object-curly-newline (refs #12334) (#13460)	True	
new: `template-tag-spacing` rule (fixes #7631) (#7913)* new: `template-tag-spacing` rule (fixes #7631)* check template tags wrapped in parens* change rule category to "stylistic issues"* rephrase rule documentation introrewrote the intro do be more descriptive about tagged template literals.also includes a "further reading" section.* update docs to better explain the rule concept* add tests for tags with comments* documentation nits* adjust template tag autofixing behaviour when there's comments present	True	
fix: comma-dangle always-multiline: no comma right before the last brace (fixes #2091)	True	
docs: remove es2016 from experimental section of readmealso added a section indicating criteria for when we will consider those features for eslint rules (i.e., when it has been added to the ecmascript standard).	True	
docs: use string severity	False	
cli: -f now accepts a file paththe -f option for the cli will now accept a path to a formatter, as well as the name of a formatter in the eslint core package. this will allow the end-user to plug in a custom formatter that may not be appropriate for the eslint core package.in addition, a bug was fixed in which a failure to find a formatter would incorrectly exit with a 0 (no errors) code.	True	
breaking: treat package.json like the rest of configs (fixes #4451)	True	
docs: fix minor typo in brace-style.md (#12749)add missing brace	False	
docs: distinguish examples in rules under stylistic issues part 4 (#6136)	False	
new: added option int32hint for space-infix-ops (fixes #1295)	True	
fixes #655: add iife exception to no-extra-parens	True	
update: max-lines reporting loc improvement (refs #12334) (#13318)* update: max-lines reporting loc refactore (refs #12334)* update: changed loc position* update: updated startline logic and end loc* chore: refactor* chore: tests error property ordering* chore: tests re-ordering	True	
build: do not stub console in testing (fixes #1328)	True	
ensure that 'use strict' isn't flagged as an unused expression (fixes #361)	False	
breaking: new object-curly-newline/no-self-assign default (fixes #10215) (#10337)* breaking: new object-curly-newline/no-self-assign default (fixes #10215)* use semicolons consistently in examples	False	
chore: fix spelling error. (#9003)	False	
update: include `ruleid` in error logs (fixes #15037) (#15053)	False	
fix: allow \u2028 and \u2029 as string escapes in no-useless-escape (#7672)	False	
build: changelog update for 7.5.0	True	
docs: update ecmaversion instructions (#7195)	False	
upgrade: espree@5.0.1 (#11401)	False	
fix: false positive of no-extra-parens about spread and sequense (#8275)* fix: false positive of no-extra-parens about spread and sequense* fix: fix for double parens	True	
sponsors: sync readme with website	True	
new: allow globals to be disabled/configured with strings (fixes #9940) (#11338)* new: allow globals to be disabled/configured with strings (fixes #9940)as described in https://github.com/eslint/eslint/issues/9940, this allows globals in a config file to be specified with the strings `readable` and `writeable` rather than `false` and `true`, respectively. it also adds a new value, `off`, which turns off a previously-enabled global.* update lib/linter.jsco-authored-by: not-an-aardvark <teddy.katz@gmail.com>* update docs/user-guide/configuring.mdco-authored-by: not-an-aardvark <teddy.katz@gmail.com>* add test for "writable"* remove unnecessary map/destructuring* adjust confusing variable name* move note about legacy booleans down	True	
docs: fix no-multiple-empty-lines examples (fixes #13432) (#13433)	False	
docs: change "code conventions" link in pull-requests.md (#12401)	False	
update: add support for plugin default configuration (fixes #1358)	True	
fix: `comma-dangle` false positive (fixes #4200)	False	
update: 'implied strict mode' ecmafeature (fixes #4832)	False	
docs: fix reference to wrong rule name	True	
chore: quote enable avoidescape option in eslint-config-eslint (#10626)	False	
update: add fixer for prefer-const (fixes #6448) (#6486)also improve grammar in prefer-const error message.	True	
chore: improve perf test (#11756)it removed something in created config for perf test:a. rule config for deprecated rulesb. index, utils. the result of ls() includes index.js and utils/* while they are not rules, that's say, it's not a 'valid' config	True	
fix: max-len doesn't allow comments longer than code (#8532)* fix: max-len doesn't allow comments longer than code- allow comments longer than non-comment lines- add tests for this- if comment length unspecified, fallback to code length* fix: max-len tests included misleading comment* fix: remove commented line (this is embarrassing)* fix: previous commit broke test- needed sufficiently long comment without confusing the issue	True	
chore: refactor code (#12113)* chore: refactor code* fix: minor tweak* minor tweak* fix: lint* fix: minor tweakhave deps as a set rather than an array* fix: tweak* fix: typo	True	
fix: `indent` regression with function calls (fixes #7732, fixes #7733) (#7734)	False	
new: add no-restricted-imports rule (fixes #3196)	False	
sponsors: sync readme with website	True	
fix: check envs for true/false (fixes #1059)	True	
update: add allowseparatedgroups option to sort-imports (fixes #12951) (#13455)	True	
chore: upgrade to a patched version of mock-fs (fixes #8177) (#8188)a few features of the `mock-fs` module are broken in node 7.7.0+. since our tests rely on these features, our build is currently broken. this commit temporarily updates to a patched version of mock-fs from github in order to fix our build. (i've also made a pull request with the patch to the main mock-fs repo.) this is intended to be a temporary fix until a new version of mock-fs with the patch included gets released to npm.	True	
fix: invalid autofix in function-call-argument-newline (fixes #12454) (#12539)* fix: invalid autofix in function-call-argument-newline (fixes #12454)* add test case for multi line comments* fix typo	True	
fix: loc obj in report fn expects column (fixes #2481)	False	
fix: ignore parser option if set to default parser (fixes #5241)	True	
update: improve report location for array-callback-return (refs #12334) (#13109)	True	
fix: `brace-style` doesn't report some closing brace errors (fixes #3486)	True	
remove "function invalid(){ return d }" from some tests	True	
docs: specify default for func-style (fixes #4834)	True	
fix: .eslintignore paths should be absolute (fixes #5362)	True	
docs: correct default for `one-var-declaration-per-line` (fixes #6017) (#6022)	True	
new: include xo style guide in `eslint --init` (#14193)	False	
fix: column location of key-spacing with additional tokens (fixes #1458)	True	
update: add tests to assert that the preprocessor is running (fixes #2651)	True	
5.11.0	False	
chore: enable prefer-template (fixes #6407) (#7357)	False	
chore: ensure tests for internal rules get run (#9453)	True	
chore: fix update-readme to avoid multiple consecutive blank lines (#15375)	True	
fix: make no-implied-eval match more types of strings (fixes #2898)- templateliterals are strings- concatinating with a literal string implies a string. eg.`setinterval("helper(" + foo + ", " + bar + ")", 50);`	False	
fixed documentation for func-style	True	
new: add --debug flag to cli (fixes #2692)	True	
fix: make rule-tester strictly check messageid. (ref #9890) (#9908)this change makes rule-tester check messageid directly by value provided insteadof the current behavior, which is to check the messageid's message value againstthe message returned from the rule at runtime.	True	
fix: check assignment property target in camelcase (fixes #13025) (#13027)* fix: check assignment property target in camelcase (fixes #13025)* check camelcase* remove useless check* fix is isassignmenttargetpropertyindestructuring	False	
update: add `arrowfunctionexpression` support to `require-jsdoc` rule (#7518)	True	
docs: clarify new indent behavior with memberexpressions (#8432)unlike `indent-legacy`, the rewritten `indent` rule does not have a special case for `memberexpression` nodes that have `variabledeclarator` parents. this commit removes that note from the docs.	True	
fix: indent rule uses wrong node for class indent level (fixes #5764)	True	
chore: ignore `pnpm-lock.yaml` (#14303)	False	
add support for pre-defined environment globals (re: #228)	True	
update: simplify comma-spacing logic (fixes #1562)	False	
update: add no-cond-assign option to disallow nested assignments in conditionals (fixes #1444)	True	
new: added "table" formatter (fixes #4037)new formatter uses "table" package to format eslint output in a ansi/ascii table.	True	
update: allow autofixing when using processors (fixes #7510) (#9090)this implements the proposal from https://github.com/eslint/eslint/issues/7510#issuecomment-275947091 to allow autofixes to be applied when using processors.the processor api basically remains the same. the only changes are:* processors can now export a `supportsautofix: true` property, which opts a processor into autofixing.* if a processor supports autofixing, the `postprocess` method is expected to also transform autofix ranges as necessary when it transforms the locations of reported problems. afterwards, the transformed fixes are applied to the original, unprocessed text.multipass autofixing works by calling `preprocess` and `postprocess` for each pass.	True	
fix: jsx-quotes exception for attributes without value (fixes #3793)	True	
chore: replace old syntax for array flat/flatmap (#14614)	True	
update: add `beforeall` and `afterall` to the jasmine globals (fixes #1478)	True	
docs: distinguish examples for space-before-blocks (#7132)	True	
update: add yoda exception for range tests (fixes #1561)	True	
document new iife exception for no-extra parens added as part of #655	True	
chore: rename shadowed global (#12862)	False	
chore: replace some function application with spread operators (#10645)	True	
7.14.0	False	
docs: remove configuring.md (#14036)	False	
build: changelog update for 5.14.0	True	
1.8.0	False	
update: add importnames option to no-restricted-imports (#9506)	True	
chore: fix object-shorthand errors (fixes #6958) (#6959)	False	
fixing assignment during initialization issue	False	
fix: avoid crashing when using baseconfig with extends (fixes #8791) (#8797)due to a bug, an invalid config instance was getting used when applying extensions to a `baseconfig` object. this updates the `config` constructor to use the correct context, and to make sure the config cache exists when the `baseconfig` is evaluated.	True	
build: changelog update for 4.7.1	True	
docs: add missing `symbol` type into valid list* update `valid-typeof.md`	True	
new: `symbol-description` rule (fixes #6778) (#6825)	False	
update: valid-jsdoc now allows you to optionally turn off parameter description checks (fixes #822)	True	
feat: move `eslint --init` to @eslint/create-config (#15150)* feat: move eslint --init to @eslint/create-configfixes #14768, fixes #15159update: rm eslint auto configrefs: https://github.com/aladdin-add/rfcs/blob/bdc12aa062750d837e5a3bbbf2f6e5e3a98da388/designs/2021-init-command-eslint-cli/readme.md#1-remove-eslint-auto-configupdate: mv eslint --init to another packagemoved `lib/init/config-rule` to tools, as it is also used by some othersrefs: https://github.com/aladdin-add/rfcs/blob/bdc12aa062750d837e5a3bbbf2f6e5e3a98da388/designs/2021-init-command-eslint-cli/readme.md#2-move-eslint---init-related-files-to-a-separate-repochore: fix imports to make test passingtodo: use the new eslint apifix: use the new eslint api (async)fix: remove espree from depschore: fix a failing testfix: a failing testchore: cleanup todosfix: allow to use local-installed eslintwip: fix one-varchore: lib => esmchore: tests => esmtodo: proxyquire => tdchore: update deps to latestfix: should write a file through fs when a ${filetype} path is passedreplaced proxyquire & sinon => tdfix: should include a newline character at eofchore: add testdouble--wip-- [skip ci]chore: remove package @eslint/create-eslintfeat: update npm --init to run `npm init @eslint/config`docs: update getting-startedupdate readme.mdupdate getting-started.mdchore: rm init fixturesfix: `npm init @eslint/config` outputchore: rm unused fileschore: rm unused depsupdate bin/eslint.jsco-authored-by: brandon mills <btmills@users.noreply.github.com>chore: fix typo* docs: rm mentioned `--init`* chore: fixtures/autoconfig/** chore: add config-rule unit tests* docs: update some `eslint --init` usage	True	
docs: add ruletester parseroptions migration steps	False	
chore: avoid mutating report descriptors in report-translator (#9189)	True	
docs: fix typo in no-magic-numbers (#12345)	False	
new: added html formatter (fixes #3505)	True	
docs: elaborate on `guard-for-in` best practice (fixes #7071) (#7094)explains why a naive `foo.hasownproperty(key)` call is a bad idea in the `guard-for-in` page.hopefully prevents future users from being as confused as i was :) (or, maybe worse, ignoring the obscure `{}.hasownproperty.call(foo, key)` syntax)	True	
chore: reduce lodash usage (#14178)* chore: replace lodash.find with array.prototype.find* chore: replace lodash.foreach with array.prototype.foreach* chore: replace lodash.map with array.prototype.map* chore: replace lodash.isnil with boolean negation* chore: replace lodash.endswith with string.prototype.endswith* chore: replace lodash.includes with array.prototype.includes* chore: replace lodash.some(o, fn) with object.values(o).some(fn)* chore: replace lodash.isempty(o) with object.keys(o).length === 0	True	
fix: curly rule doesn't account for leading comment (fixes #7538) (#7539)* fix: curly rule doesn't account for leading comment (fixes #7538)* pr feedback* simplify check* check .length > 0	True	
docs: update header in max-lines (#14273)	False	
update: allow var declaration at end of block (fixes #5246)	False	
docs: fixed typo	False	
docs: clarify eslint-disable comments only affect rules (fixes #5005)	False	
fix: improve report location for computed-property-spacing (#12795)	True	
7.7.0	False	
update: add sort-imports ignoredeclarationsort (fixes #11019) (#11040)* update: add sort-imports ignoredeclarationsort (fixes #11019)this allows users to enforce sorting import members, without having to enforcesorting of import declarations.* docs: fix typo in documentation for sort-imports	True	
4.4.1	False	
docs: update about page description (fixes #936)	False	
sponsors: sync readme with website	True	
chore: run prefer-template autofixer on test files (refs #6407) (#7354)	True	
update: implement auto fix for `eol-last` rule (fixes #3725)	True	
add docs for no-exc-assign	True	
docs: removed correct code from incorrect eg (#13060)	False	
chore: add node 7 to travis ci build (#7506)	True	
docs: fixing broken links in documentation	False	
fix: add end location to report in no-eval (#12960)	True	
added docs for eqeqeq and no-with (fixes #262)	True	
new: function-paren-newline rule (fixes #6074) (#8102)* new: function-paren-newline rule (fixes #6074)* add "consistent" option to function-paren-newline* enable function-paren-newline on eslint codebase* remove unnecessary "fixable" line in documentation	True	
upgrade: espree@^6.1.1 (#12158)	False	
breaking: remove `ecmafeatures` from `eslint:recommended` (#8239)* breaking: remove `ecmafeatures` from `eslint:recommended`* remove old unused config from tests.	False	
new: `no-mixed-operators` rule (fixes #6023) (#6241)	True	
docs: fix sorting of rules within each section	True	
new: expose cliengine (fixes #1083)	False	
update: fix indent bug with binary operators/ignorednodes (fixes #9882) (#9951)	True	
2.11.0	False	
fix: no-extra-bind autofix removes comments (#12293)	True	
add rule for missing radix argument to parseint	True	
update eslint.json configuration file for literal rules	True	
docs: fix rest-spread-spacing's name (#6365)	False	
sponsors: sync readme with website	True	
update: improve checkstyle format (fixes #3183)	True	
docs: fixing broken cyclomatic complexity link (fixes #8396) (#8937)also added a few more useful links.	True	
fix: `es6` env had been missing `spread` and `newtarget` (fixes #3281)	False	
update: improve the error messages for `no-unused-vars` (fixes #7282) (#7315)	True	
breaking: added bower_components to default ignore (fixes #3550)	True	
upgrade: file-entry-cache@6.0.0 (#13877)	False	
build: clarify commit-check messages (fixes #4256)	False	
upgrade: update lodash in package.json to v 4.17.21 (#14159)	True	
new: for-direction rule (fixes #8387) (#8519)	True	
update: check member expressions with `this` in operator-assignment (#12495)	True	
feat: update semi rule for class static blocks (#15286)updates `omitlastinonelineblock` option to apply to class static blocks.refs #15016	True	
docs: add security policy link to readme (#13403)	True	
fix: skip jsdoc from newexpression (fixes #3744)	False	
fix: jsdoc for function expression on object property (fixes #4900)	True	
docs: fixing grammar: then -> than	False	
chore: make config validator params more consistent (#11435)	True	
upgrade: escope@3.3.0 (refs #4485)	False	
fix: cliengine#addplugin reset lastconfigarrays (fixes #12425) (#12468)	False	
docs: unquote booleans in lines-between-class-members docs (#9497)	False	
update: add react plugin config for eslint init (#12446)this add the recommended config for eslint-plugin-react when using `eslint --init`doc: https://github.com/yannickcr/eslint-plugin-react#configuration	True	
fix: refactor no-multi-spaces to avoid regex backtracking (fixes #9001) (#9008)	True	
chore: simplify helper method in linter tests (#10580)	False	
docs: remove `instanceof` from keyword-spacing docs (#15180)	False	
breaking: interpret rule options as unicode regexes (fixes #11423) (#11516)this updates the core rules that interpret user-provided options as regular expressions. those rules now interpret the options as unicode regexes, which avoids some cases of unexpected behavior with astral symbols.	True	
added mocha global variables for tdd style. fixes #793.	True	
fix: adapt new-paren rule so it handles typescript (fixes #7817) (#7820)* chore: extracted fixture parser* fix: adapted new-paren rule so it can handle ts (fixes #7817)	True	
breaking: eslint:recommended changes (fixes #10768) (#11518)	False	
new: rule indent (fixes #1022)	False	
3.0.1	False	
update: fix `quotes` rule's false negative (fixes #7084) (#7141)	False	
new: added max-lines-per-function rule (fixes #9842) (#10188)* new: added max-lines-per-function rule (fixes #9842)* docs: added max-statements-per-line to related rules* docs: added example of how max-lines-per-function differs to other complexity rules.* chore: changed default to 50 loc. removed unnecessary hasownproperty calls.* update: "methoddefinition" and "property" nodes are now analysed too, so static methods and class properties are counted from the root of their statements instead of just the functionexpression.added ignoreiifes option* update: refactor so property and methoddefinition are no longer required as entrypoints. better property / method detection as per pr feedback* update: changed boolean option defaults to true. renamed ignorecomments to skipcomments to keep consistent with other rules. updated doc with new iifes option. made detecting "property" function definitions more robust as per pr feedback.* update: don't confuse iife with callback, so check parent callee is same as functionexpression node* update: fix trailing whitespace on multi line comments processing when detecting full line comments.updated old code comments.parseroptions in tests passed through to ruletester constructor.* docs: clarify that "max" option can be used instead of an object* docs: clarify options* docs: typo in documentation. added comments for each test; and a couple of extra tests	True	
docs: update cla information (#15630)* docs: udpate cla information* docs: update cla info* docs: suggestionco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* update docs/developer-guide/contributing/readme.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>	True	
docs: add a note for no-unused-expressions (fixes #11169) (#11192)* docs: add a note for no-unused-expressions (fixes #11169)* docs: polish no-unused-expressions	True	
docs: fix example for curly "multi-or-nest" option (#7597)	True	
docs: add note about release issues to readme (#10572)	True	
build: changelog update for 5.12.1	True	
fix: add end location to reports in keyword-spacing (refs #12334) (#13461)	True	
docs: add plugin example to disabling with comments guide (fixes #6742) (#6747)	True	
update: add `matchdescription` option to `valid-jsdoc` (fixes #2449)	True	
fix: support es6 shorthand in key-spacing (fixes #3678)	False	
docs: update governance doc with reviewers status (#11399)	False	
update: improve use-isnan rule to detect `number.nan` (fixes #14715) (#14718)* update: improve `isnanidentifier` to detect `number.isnan` (fixes #14715)* chore: add test cases for `number.nan`* docs: add more examples for `use-isnan`* chore: improve logic and add more test cases* docs: update docs/rules/use-isnan.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
update: improve report location for no-unneeded-ternary (refs #12334) (#13456)	True	
update: report operator location in operator-linebreak (refs #12334) (#13102)	True	
docs: no-unused-expressions - class static blocks don't have directives (#15283)refs #15016	False	
docs: update docs for object-curly-spacing (fixes #11634) (#12009)	True	
upgrade: devdeps and deps to latest (#10622)	True	
fix: correct grammar in object-curly-newline reports (fixes #6725) (#6728)	False	
added rule disallowing reserved words being used as keys(fixes #1144)created testscreate documentation and added to indexadded to config, disabled by default	True	
new:  adding 'vars-on-top' rule (fixes #1148)	True	
build: remove shelljs-nodecli (refs #9533) (#9588)this removes the `shelljs-nodecli` module from the build process.`shelljs-nodecli` relies on a very old version of the `shelljs` module,which might be causing a flaky build on appveyor (seehttps://github.com/eslint/eslint/issues/9533 for details). in any case,removing `shelljs-cli` seem to make `npm test` run 40% faster anyway, soit should be an improvement even if it doesn't fix the appveyor build.	True	
fix: don???t ignore config if cwd is the home dir (fixes #3846)	False	
fixes #494: allow shebangs in processed js files	False	
docs: improve comma-dangle documentationfix a minor misspelling (an -> a). also, reading paragraphs is pretty hardin order to figure out options, so i refactored the options to be on a bullet list.	True	
chore: do not use cache when testing (#8464)	False	
chore: adopt `eslint-plugin/require-meta-docs-description` internally (#12762)* upgrade: eslint-plugin-eslint-plugin to 2.2.1https://github.com/not-an-aardvark/eslint-plugin-eslint-plugin/blob/master/changelog.md#v221-2020-01-17* chore: enable `eslint-plugin/require-meta-docs-description` rule internallyhttps://github.com/not-an-aardvark/eslint-plugin-eslint-plugin/blob/master/docs/rules/require-meta-docs-description.md* chore: delete `internal-rules/consistent-docs-description`replaced by `eslint-plugin/require-meta-docs-description`:https://github.com/not-an-aardvark/eslint-plugin-eslint-plugin/blob/master/docs/rules/require-meta-docs-description.md	True	
strip leading underscores in camelcase rule - fixes #94	False	
fix: optimize no-irregular-whitespace for the common case (fixes #6116) (#6117)	True	
adds test and fix for no-octal on 0 literal	True	
build: changelog update for 7.24.0	True	
update: add space after function keyword check (fixes #1276)	False	
chore: fix misleading `indent` test (#8925)this fixes an `indent` test that was intended to contain a `jsxexpressioncontainer`, but actually contained a `blockstatement`.	True	
docs: remove reference from 3.0.0 migration guide (refs #6605) (#6618)	False	
fix: counting of variables statements in one-var (fixes #2570)	False	
update no-empty-class.md	False	
update: fix option for comma-spacing (fixes #4232)	True	
breaking: remove deprecated rules (fixes #1898)	False	
docs: fix a broken link in working-with-rules.md (#13875)	False	
fix: ignore marker-only comments in spaced-comment (fixes #12036) (#12558)	False	
docs: fix typo in blog post template	False	
breaking: runtime-deprecation on '~/.eslintrc' (refs eslint/rfcs#32) (#12678)co-authored-by: kai cataldo <kai@kaicataldo.com>	False	
fix: `no-dupe-keys` false negative (fixes #6801) (#6863)this commit fixes a false negative between a normal property and agetter/setter.in addition, i upgrade code by es2015.	False	
fix: `max-statements-per-line` false positive at exports (fixes #6264) (#6268)	False	
docs: rephrase in about section (#8609)under philosophy section, every rule subsection	True	
docs: clarify option defaults in max-lines-per-function docs (#10569)	False	
docs: draft of jscs migration guide (refs #5859) (#6942)	False	
feat: `--debug` prints time it takes to parse a file (#15609)* feat: --debug prints time it takes to parse a file* update lib/linter/linter.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* add separate logs for parsing and scope analysis* lintco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
update: add allowelseif option to no-else-return (fixes #9228) (#9229)	True	
fix: indent rule doesn't handle constructor instantiation (fixes #5384)	True	
docs: remove incorrect "constructor" statement from `no-new-symbol` docs (#6830)	True	
fix broken test	False	
docs: minor readme clarificationsfixable rules are mostly limited to whitespace fixes; indicate no-reserved-keys replacement as quote-props	True	
7.0.0-alpha.3	False	
docs: distinguish examples in rules under variables	False	
rule: variables should not be deleted	False	
docs: broken jscs.info urls (fixes #10732) (#10770)	False	
update: fix call, new and member expressions in no-extra-parens (#12302)	False	
build: changelog update for 7.23.0	True	
docs: do not recommend global-installed usage (#12016)	False	
chore: read `eslint_mocha_timeout` env var in makefile.js (#15626)closes #15582	False	
fixed json formatting and highlightingit really looks broken	True	
build: changelog update for 5.3.0	True	
fix: no-regex-spaces rule incorrectly fixes quantified spaces (#8773)	False	
fix: block-scoped-var to work with classes (fixes #2048)	True	
upgrade: @eslint/eslintrc to 0.4.2 (#14672)	True	
chore: rewrite parselistconfig for a small perf gain. (#9300)	True	
docs: add feedback needed triage description (#14670)	False	
build: add additional linebreak to docs (fixes #5464)	True	
docs: pull request template (#6568)	False	
chore: remove fixable key from multiline-ternary metadata (fixes #6683) (#6688)	False	
build: changelog update for 5.0.1	True	
build: changelog update for 5.0.0-alpha.2	True	
feat: false negative with `property` option in `id-match` (#15474)fixes #15443	False	
fix: crash when loading empty eslintrc file (fixes #1164)	False	
update: prefer-numeric-literals warns number.parseint (fixes #8913) (#8929)	False	
update: add default limit to `complexity` (fixes #4808)	True	
fix: valid-jsdoc crash w/ field & array type (fixes #5745) (fixes #5746)introduces deep and more robust `prefertype` checks to `valid-jsdoc`.	True	
update: `no-unused-vars` ignores read it modifies itself (fixes #6348) (#6535)* update: `no-unused-vars` ignores read it modifies itself (fixes #6348)`no-unused-vars` comes to ignore a read of a modification of itself.- a read in rhs of an assignment to itself (e.g. `a = a + 1`)- a read in lhs of an assignment (e.g. `a += 1`)- increments/decrements (e.g. `a++`)those are ignored only if those exist at the direct child of anexpressionstatement node. this is in order to avoid false positive such`foo(a = a + 1)`* fix: remove unused variables which were found by this fix.* chore: add some tests	True	
build: package.json and changelog update for 3.14.1	True	
update: acorn version (#13016)	False	
docs: remove brace expansion from configuring.md (refs #5314)remove mention of brace expansion after conversation in #5314	False	
docs: fix typo in `working-with-rules.md` (#15233)	False	
update: add class option to `no-use-before-define` (fixes #3944)	True	
breaking: no-confusing-arrow enable allowparens: true (fixes #11503) (#11520)	False	
breaking: supports unicode bom (fixes #4878)- `eslint.verify()` api came to strip bom before parsing.- `sourcecode` constructor came to strip bom of `text` argument.- `hasbom` property was added into `sourcecode` object.- `sourcecodefixer.applyfixes()` came to insert bom to the head of output if `sourcecode.hasbom` is `true`.	True	
revert "build: fix test failure on node 11 (#11100)" (#11375)this reverts commit 709190f8c5d7559b1e0915e25af60b50a94ba1c7.	False	
new: rest-spread-spacing rule (fixes #5391) (#6278)	False	
update: add `never` option for `func-names` (fixes #6059) (#6392)	True	
update: fix indent behavior on template literal arguments (fixes #9061) (#9820)	False	
fix: func-name-matching crash on destructuring assignment to functions (#8247)the func-name-matching rule checks for assignments to function expressions so that it can determine whether names match. however, due to a missing type-check, the rule would crash when run on a destructuring assignment to a function expression. this commit updates the rule to ignore destructuring assignments to function expressions.	True	
revert "update: adds nestedbinaryexpressions for no-extra-parens rule (fixes #3065)"	True	
fix: `no-invalid-this` had been missing globals in node (fixes #3961)	False	
chore: use eslintrc overrides (#10677)* chore: use eslintrc overrides* chore: rm tools/internal-rules/eslintrc* chore: revert eslint-config-eslint* chore: simplify eslintrc	True	
docs: add table of contents in readme (#11765)	False	
fix: speed up tokens api (refs #1212)	True	
0.4.2	False	
build: autogenerate release blog post (fixes #3562)	True	
remove redundant jshint directivesthis are all covered by the existing .jshintrc file	False	
chore: unskip test for scope analysis (#10336)this updates a test that was previously skipped due to https://github.com/eslint/eslint/issues/10245. since that issue is solved, this test can be unskipped.	True	
update: curly should check consequent `if` statements (#12947)	False	
upgrade: espree to v0.12.0 (refs #1968)	True	
chore: add markdownlint-cli (#11653)	False	
docs: formatting inconsistencies (fixes #4912)	True	
fix: wrong count for 'no-multiple-empty-lines' on last line (fixes #4228)	True	
fix: removing curly quotes in no-eq-null report message (#9852)	False	
fix: check literal type explicitly in dot-notation (#12095)	False	
update: exclude es5 constructors from consistent-return (fixes #5379)this commit makes the change requested in #5379 using the implementationoutlined by @mysticatea.[1]  it disables consistent-return checking forconstructors, which implicitly return a value even if they onlyexplicitly return one in some cases.  an example of this is the 'simple"class" instantiation' pattern popularized by john resig.this commit makes the exclusion of constructors unconditional, as it isfor no-invalid-this.  an option could easily be added if there arecommon cases where consistent-return checking of constructors isdesired.note: this commit also exposes ises5constructor from ast-utils so thatit can be used by consistent-return.1.  https://github.com/eslint/eslint/issues/5379#issuecomment-187997133signed-off-by: kevin locke <kevin@kevinlocke.name>	True	
fix: `no-eval` come to catch indirect eval (fixes #4399, fixes #4441)- functions to detect `this` binding is default were extracted to astutils from `no-invalid-this`. and `no-eval` is using this utility.- `allowindirect` option was added to `no-eval` in order to keep oldbehavior.	True	
fix: logicalexpression checks for short circuit (fixes #5693)	True	
upgrade: ignore@4.0.2 (#10619)	False	
build: changelog update for 5.10.0	True	
fix: sort-vars crash on mixed destructuring declarations (#8245)by design, sort-vars ignores destructuring assignments. however, the rule previously didn't account for the case where the first declarator of a variable declaration was a destructuring assignment -- this led to a crash. this commit updates the rule to handle this case properly.	True	
new: add `--parser-options` to cli (fixes #5495)	True	
fix: improve error message on --print-config (fixes #11874) (#11885)	False	
update: add `maxeof` to no-multiple-empty-lines (fixes #4235)currently there is no way to specify a rule for having one (and onlyone) ending newline. using eol-last only checks if there is at leastone newline.this patch adds an optional `maxeof` option to no-multiple-empty-linesrule. when set, blank lines at the end are treated differently fromlines within the file. when `maxeof` is omitted, the rule's originalbehaviour does not change.for instance, requiring one and only one newline at the end of file canbe achieved using:{eol-last: 2,no-multiple-empty-lines: [ 2, { max: 2, maxeof: 1 } ]}	True	
fix: ignore template literals in no-mixed-tabs-and-spaces (fixes #4054)	False	
fix: don't require semicolons before `++`/`--` (#7252)	True	
fix: no-control-regex literal handling fixed. (fixes #5737) (#5943)regex'es defined with literal syntax were not handled as expected.during the check we get the the regex from node and turn it to string,then check if it contains control characters as in it. butregex.tostring() produces different outputs for literals and regexpobjects. added another check, now it works as expected.new checks added, moved it to the functions. also i added check for ifthe regex is escaped.	True	
docs: update no-unused-var docs	False	
update: adjust grammar of error/warnings fixable (#10546)changes grammar of stylish to read more intuitively.	True	
chore: switch issues to use forms (#15024)* docs: switch issues to use forms* make title unique* add bug report template* fix bug report template* add rule change template* new rule template* clean up templates* update .github/issue_template/bug-report.ymlco-authored-by: brandon mills <btmills@users.noreply.github.com>* update .github/issue_template/change.ymlco-authored-by: brandon mills <btmills@users.noreply.github.com>* update .github/issue_template/new-rule.ymlco-authored-by: brandon mills <btmills@users.noreply.github.com>co-authored-by: brandon mills <btmills@users.noreply.github.com>	True	
chore: update blogpost.md.ejs (#15468)	False	
breaking: default to --reset behavior (fixes #2100)	True	
docs: fix broken links in node.js api docs (#13771)	False	
7.16.0	False	
improve assertion on wrong number of errors	False	
docs: fix `repro:needed` label in bug report template (#14285)	False	
docs: typo in nodejs-api (#6025)	False	
update: run rules after `node.parent` is already set (fixes #9122) (#9283)	False	
chore: specify node 14.x for verify files ci job (#14896)	True	
upgrade: mock-fs to v4.2.0 (fixes #8194) (#8243)mock-fs merged the fs.stat patch described in 0af90578 and created a new release, so now we can depend on the module from npm again instead of the version from github.	True	
update: `no-new-func` rule catching eval case of `memberexpression` (#14860)* fix: no-new-fuc should catch calls to function.apply* chore: adjust es6 syntax in no-new-func* docs: examples for incorrect no-new-func rule* chore: tests for invalid no-new-func cases* docs: example and test for incorrect no-new-func rule* docs: enhance documentation for no-new-func rule* docs: improve no-new-func descriptionco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* fix: revise no-new-func logicco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* chore: additional test for function.bind* docs: note regarding function.bind without immediate call* fix: report callexpression node instead of memberexpression node* docs: modify no-new-func docsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* docs: add no-new-func exampleco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* fix: use maybecallee instead of parent in no-new-funcco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* add tests* check method nameco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
fix: newline-after-var declare and export (fixes #2325)	False	
build: remove unnecessary phantomjs devdependency (fixes #3021)	True	
update: fix counting jsx comment len in max-len (fixes #12213) (#12661)* update: fix counting jsx comment len in max-len (fixes #12213)* add test cases* map comments with desired nodes* push a unique node only* fix checking node, add more test cases* add more test cases	False	
build: changelog update for 8.1.0	True	
chore: improve arrow-body-style error message (refs #5498) (#9718)https://github.com/eslint/eslint/issues/5498 gets more than twice asmuch traffic as any of our other issues. my interpretation of this factis that people are often confused by errors from the `arrow-body-style`rule, and end up searching and finding that issue. this commit updatesthe error message for `arrow-body-style` to be more specific about howto fix the problem.	True	
fix: `comma-dangle` wrong autofix (fixes #6233) (#6235)	True	
update: add missing environments and fix sorting/grouping of rules (fixes #1307, fixes #1308)	True	
fix: improve code coverage (fixes #2590)	False	
docs: clarify --ext only works with directories (fixes #7939) (#8095)	True	
fix: spaces trigger wrong in `no-useless-call` and `prefer-spread` (fixes #3054)	False	
docs: use linter instead of linter in nodejs api page (#10864)	False	
docs: fix grammar in object-curly-spacing docs (#11389)changed ???this rule enforce??? to ???this rule enforces???.	True	
rename rule to context-var and add documentation	True	
breaking: change no-space-before-semi to semi-spacing and add "after" option (fixes #1671)	True	
docs: updated integrations page	False	
breaking: freeze context object (fixes #4495)this reverts commit bec6c9b0e2edca5f5bc99a7abc13b6f62a9a5411.	False	
fix: ignore empty path in patterns (fixes #8362) (#8364)	False	
update: `no-loop-func` allows block-scoped variables (fixes #2517)	False	
update: add support for ecmaversion 20xx (fixes #6750) (#6907)	True	
update: adds default 'that' for consistent-this (fixes #4833)	True	
fix: improve around function/class names of `no-shadow` (fixes #2556, #2552)	False	
new: allow modifying base config (fixes #2143)	False	
build: package.json and changelog update for 2.10.1	True	
docs: fix typos for operator-linebreak	True	
docs: fix broken links (fixes eslint/eslint-jp#6) (#10658)	False	
feat: update eslint-scope for class static blocks (#15321)updates `eslint-scope` dependency to v7.0.0, which supports class static blocks.refs #15016	True	
chore: eslint-config-eslint require node >= 8 (#11718)	False	
breaking: implement configuration hierarchy (fixes #963)	False	
0.16.0	False	
update: allow $schema in config (#12612)	False	
docs: fix fixable example (#15107)the example should be:```jsmodule.exports = {meta: {fixable: "code" // or "whitespace"},create(context) {// your rule}};```instead of```jsmodule.exports = function(context) {meta: {fixable: "code" // or "whitespace"},create(context) {// your rule}};```	False	
chore: add autofix npm script (#12330)	True	
fix: remove `console.dir` (fixes #5770)	True	
chore: avoid cloning comments array in tokenstore (#8436)previously, the tokenstore constructor cloned the list of comments because core would sometimes mutate it afterwards in order to remove shebangs. core no longer removes shebangs from the comment list, so it's no longer necessary for tokenstore to clone it.	True	
fix: no-extra-boolean-cast incorrect boolean() autofixing (fixes #7977) (#8037)	True	
fix: return statement spacing. fix for indent rule. (fixes #7164) (#7197)* fix: return statement spacing. fix for indent rule. (fixes #7164)call checklastreturnstatementlineindent only when return statement is wrapped in ()* having a paren after the statement is valid indentation.* simplify report condition	True	
docs: asi causes problem whether semicolons are used or not	True	
docs: `lines-around-comment` doesn't disallow empty lines (#8151)	False	
docs: better jsdoc for indent rule	True	
docs: update migrating to 2.0.0 (fixes #5232)i added [new rules in `"eslint:recommended"`] section.	True	
cleaned up relationship between bin/eslint, lib/cli.js, and lib/eslint.js	False	
update: add "as-needed" option to quote-props rule (fixes #1279)	True	
docs: add note about only-whitespace rule for `--fix` (fixes #4774)	True	
docs: move custom parsers docs into a page (fixes #9919) (#10431)	True	
upgrade: eslint-plugin-eslint-plugin@2.0.1 (#11220)* upgrade: eslint-plugin-eslint-plugin@2.0.1* update no-invalid-meta.js	False	
fix: `brace-style` erroneously ignoring certain errors (fixes #5197)`brace-style` was ignoring almost all `allman` checks when`allowsingleline` option was set. it was also ignoring closing braceerrors when there was a body error with a single-line body.	True	
chore: remove unuseable profile command (#11854)	False	
update: add jsx exceptions to no-extra-parens (fixes #4229)	True	
fix: prefer-object-spread false positives with accessors (fixes #12086) (#12784)	True	
fix: update the chatroom link to go directly to help channel (#13536)	True	
update: expose `getformatter` as a static method on `cliengine` (fixes #3239)	True	
update: ensure `arrow-parens` handles async arrow functions correctly (#7176)(refs #7101)	False	
docs: updating cli overview with latest changes (#7335)	False	
build: tag docs, publish release notes (fixes #6892) (#6934)	False	
fix: don't check concise methods in quote-props (fixes #2251)	False	
merge pull request #6088 from eslint/docs-one-var-per-linedocs: improve showcase example in `one-var-declaration-per-line`	False	
build: changelog update for 4.19.0	True	
fix: no-new-symbol false positive with symbol as an argument (#13337)	False	
new: add no-error-on-unmatched-pattern flag (fixes #10587) (#12377)add flag to prevent errors when a pattern or --ext is not matched	True	
chore: remove internal linter#getancestors helper (refs #9161) (#9222)	True	
adapt code formatting	True	
docs: fixing typos in plugin processor section. (fixes #3648)	True	
chore: fix name of internal-no-invalid-meta test file (#7142)	False	
docs: clarify ecmaversion doesn't imply globals (refs #9812) (#11364)before this change users can mistakenly assume that settingparseroptions.ecmaversion automatically implies the globals from thatecmaversion are available, in fact globals are controlled by a separateenvironment setting that is not affected by ecmaversion.this pr implements the suggestion fromhttps://github.com/eslint/eslint/issues/9812	True	
fix: operator-assignment removes and duplicates comments (#12485)	True	
update: "error type should be" assertion in rule-tester (fixes 6106) (#7550)	False	
build: changelog update for 4.0.0-rc.0	True	
update: add quotes around the label in  `no-empty-label` error reports (fixes #3526)	False	
fix: --init crash on question to upgrade/downgrade eslint (fixes #13978) (#13995)	True	
new: add no-dupe-else-if rule (fixes #12469) (#12504)* new: add no-dupe-else-if rule (fixes #12469)* add || and && logic* rename variables* update lib/rules/no-dupe-else-if.jsco-authored-by: kai cataldo <kaicataldo@gmail.com>	False	
fix: `strict` rule reports a syntax error for es2016 (fixes #6405) (#6464)* fix: `strict` rule reports a syntax error for es2016 (fixes #6405)* followes suggestions	True	
docs: clarify correct example in no-return-await (fixes #13656) (#13657)* docs: clarify correct example in no-return-await (fixes #13656)* revert order of examples	False	
update: add "safe" mode to strict (fixes #3306)	True	
chore: add test case for no-func-assign (refs #13705) (#13783)* chore: add test case for no-func-assign (refs #13705)* chore: update tests/lib/rules/no-func-assign.js	True	
update: improve error message for fatal fixer errors (#13120)	True	
rewrite configuration documentation to include information about globals (fixes #555)	True	
recognise callexpression variant of regexp ctor in no-control-regex rule	True	
update: add checkloops option to no-constant-condition (fixes #5477) (#6202)	True	
build: remove support for node v5 (fixes #6743) (#6744)	True	
build: changelog update for 4.4.0	True	
update: add fixer for `lines-around-directive` (#7217)	True	
chore: enable `prefer-arrow-callback` on eslint codebase (fixes #6407) (#7503)* chore: enable `prefer-arrow-callback` on eslint codebase (fixes #6407)* move some complex expressions onto multiple lines* use `.returns(value)` instead of `() => value` with sinon	True	
fix: make rules work with for-of statements (fixes #1859)	True	
docs: suggest linting plugins for eslint plugin developers (#14754)	True	
breaking: `space-before-blocks` ignores after keywords (fixes #1338)	True	
fix: yoda exceptrange false positives on empty string property names (#12071)	False	
fix: avoid breaking eslint-plugin-eslint-comments (fixes #9193) (#9196)	False	
update: support globalthis (refs #12670) (#12774)* support globalthis in no-alert (ref #12670)* support globalthis in no-eval (ref #12670)* bump eslint-utils to ^2.0.0 (ref #12670)* add globalthis test cases in require-unicode-regexp (ref #12670)* add globalthis test cases in prefer-regex-literals (ref #12670)* add globalthis test cases in prefer-object-spread (ref #12670)* add globalthis test cases in prefer-named-capture-group (ref #12670)* add globalthis test cases in prefer-exponentiation-operator (ref #12670)* add globalthis test cases in no-misleading-character-class (ref #12670)* edit test cases in no-eval* support globalthis in no-obj-calls (ref #12670)* add globalthis test cases in no-redeclare (#12670)* change to use getpropertyname* fix tpo* add messageid - unexpectedrefcall	True	
move filefinder to separate file	True	
breaking: improve plugin resolving (refs eslint/rfcs#47) (#12922)* breaking: change relative paths with --config (refs eslint/rfcs#37)* update docs* breaking: improve plugin resolving (refs eslint/rfcs#47)* replace getrules by getrulesforfile (refs eslint/rfcs#47)* replace rulesmeta by getrulemeta (refs eslint/rfcs#47)* replace report.useddeprecatedrules by report.results[].useddeprecatedrules* revert "replace report.useddeprecatedrules by report.results[].useddeprecatedrules"this reverts commit f3cc32f5c07579aecfc4566201f19918545aca6d.* revert "replace rulesmeta by getrulemeta (refs eslint/rfcs#47)"this reverts commit 0d6afaf6a40792c05659796ec4c26258e5143494.* revert "replace getrules by getrulesforfile (refs eslint/rfcs#47)"this reverts commit d29f613c9d8a8106ca0d68bb324415807dca4a20.* update docs* update docs/user-guide/configuring.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* fix markdownlint errorco-authored-by: kai cataldo <kai@kaicataldo.com>	True	
docs: fix typos for camelcase	True	
docs: correct the function-call-argument-newline 'default' descriptions (#13866)	False	
fix: false negative of `no-useless-rename` (fixes #6502) (#6506)	False	
1.5.0	False	
update: ignore camelcase in object destructuring (fixes #3185)	False	
build: changelog update for 5.0.0-alpha.1	True	
docs: improve grammar and style in padded-blocks.mdfix a few minor grammar errors and shorten a few sentences.	False	
docs: mention double-byte character limitation in max-len (fixes #2370)	False	
update: improve report location for no-space-in-parens (#12364)* update: improve report location for no-space-in-parens* add test cases with multiple spaces	True	
update: let ruletester cases assert that no autofix occurs (fixes #8157) (#8163)	True	
fixes #651: disable no-catch-shadow rule in node environment	False	
3.5.0	False	
7.27.0	False	
fix: false positive on switch 'no duplicate case',(fixes #3408)	False	
chore: avoid useless catch clauses that just rethrow errors (#10010)	False	
chore: padding-line-between-statements remove useless `additionalitems` (#15706)	False	
#595 remove needless 'function foo() {}' in tests	False	
chore: use ast-utils helper functions in no-multiple-empty-lines (#7842)	False	
chore: simplify eslint process exit code (fixes #6368) (#6371)	False	
fix: object-shorthand rule should not warn for nfes (fixes #2748)	True	
chore: enable `no-useless-escape` (#7403)* chore: enable `no-useless-escape`* chore: fix linting issues* chore: clean up eslint-disable comments	False	
chore: add twitter and open collective badge (#12877)* chore: add open collective badge* add twitter badge* split open collective badges into backers and sponsors* update readme.md* reorder once more* fix typo	True	
build: changelog update for 5.0.0-alpha.3	True	
chore: add tests to cover default object options in comma-dangle (#12627)	True	
fix: make `overrides[].files` matching dotfiles (fixes #11201) (#11225)	False	
fix: actual messageid and expected messageid are switched in rule tester (#11928)	False	
rule: no-restricted-modules (fixes #791)	False	
feat: update the complexity rule for class static blocks (#15328)updates the `complexity` rule to apply to class static blocks.refs #15016	True	
update: add ast node exceptions to comma-style. (fixes #1932)update: add ast node exceptions to comma-style. (fixes #1932)update config options for comma-style rule.sign copywrite and add docs.	True	
rule is off by default. updated documentation	False	
formatter: jslint xmlcreated the jslint xml formatter. because jslint xml has the `evidence` attribute which contains the erroring source code, i've added the source of the erroring node to the message objects created in `api.report` in `lib/eslint.js`.fixes #15	True	
fix: valid-jsdoc should allow optional returns for async (fixes #10386) (#10480)change valid-jsdoc to allow returns to be optional for async functions in the requirereturn:false case.	True	
fix: func-name-matching crash on descriptor-like arguments (#12100)	True	
docs: document string option for `no-unused-vars`.	True	
feat: no-restricted-imports support casing (#15439)* fix: no-restricted-imports support casingpath matching in `.gitignore` can be case-sensitive, andignore@5.2.0 supports this as well as maintains support forrelative paths, whose support was dropped after 4.0.6 butrestored in 5.2.0 (this was a blocker for past upgrades).by default, this rule remains case-insensitive to maintainbackwards compatibility with earlier versions. only by explicitlyspecifying it in a custom pattern object can it be triggered.* set allowrelativepaths directly in filesper member feedback, the allowing of relative pathswas not entirely intentional for rules using the`ignore` library. this commit also reverts theutility for creating `ignore` instances.* update word in docs for allowrelativepathsper reviewer feedback	True	
docs: typo in no-unexpected-multiline (fixes #4756)	False	
fix: one-var shouldn't split declaration if it isn't in a statement list (#13959)	False	
fix: id-match bug incorrectly errors on `newexpression` (fixes #4042)	False	
relax eqeqeq null check (fixes #669)when the "smart" option is enabled, eqeqeq will now allow double-equals comparisons to null to check for null or undefined in asingle expression.	True	
docs: updated documentation for several rules	True	
docs: relax permission for merging prs (refs eslint/tsc-meetings#20) (#7360)	True	
update: add metadata to existing rules - batch 1 (refs #5417)add metadata to the existing rules. batch 1.	True	
fix: edge cases for no-wrap-func (fixes #2466)	True	
added rule for no global strict mode (fixes #322)	True	
update: autofixing does multiple passes (refs #5329)	True	
docs: update technology sponsors in readme (#13478)	True	
update: check ternary `:` even if `?` was reported in space-infix-ops (#13963)	False	
feat: update one-var for class static blocks (#15317)fixes false positives of the `one-var` rule with option `"always"` where the rule suggests combining declarations from a class static block with declarations from the upper scope.also enables autofixing declarations at the top level of class static blocks with option `"never"`.refs #15016	True	
add mailing list link	False	
new: new rule no-constructor-return (fixes #12481) (#12529)* new: new rule no-constructor-return (fixes #12481)* docs: polish example* docs: polish* fix: fix `fixable` property* update: update rule type* fix: inner functions* chore: refactor* docs: polish* docs: polish* docs: polish* docs: polish* fix: rule type* chore: add more cases	True	
docs: consistent example headings & text pt4 (refs #5446) (#6493)* docs: consistent example headings & text pt4 #5446final batch of es6 docs for this sweep!1. ensure each doc has "examples" heading, and that eachoption-specific example pair also has a suitable heading.2. ensure text above examples is consistent as per #5446this pr does not attempt to address issues other thanthose stated above; such issues will be dealt with onsubsequent sweeps of the docs detailed in #6444..* docs: fixed lint errors in docdocs/rules/sort-imports.md: 161: md004 unordered list styledocs/rules/sort-imports.md: 162: md004 unordered list styledocs/rules/sort-imports.md: 163: md004 unordered list styledocs/rules/sort-imports.md: 164: md004 unordered list styledocs/rules/sort-imports.md: 37: md007 unordered list indentationdocs/rules/sort-imports.md: 37: md010 hard tabsdocs/rules/sort-imports.md: 38: md010 hard tabsdocs/rules/sort-imports.md: 39: md010 hard tabsdocs/rules/sort-imports.md: 40: md010 hard tabs* docs: list indentation should be 4, not 2fyi: i've requested enhanced error reporting for markdown linter - e.g.to expose rule settings in error messages:https://github.com/davidanson/markdownlint/issues/23#issuecomment-227430171	True	
fix: curly rule incorrectly flagging lexical declarations (fixes #11663) (#11675)* fix: curly rule incorrectly flagging lexical declarations (fixes #11663)* add invalid var single statement test case	False	
fix: mark variables as used in module scope (fixes #2137)	False	
new: adds prefer-object-spread rule (refs: #7230) (#9955)* new: adds prefer-object-spread rule (refs: #7230)* adds exception for `object.assign` with one object literal argumentthis was an exception to this rule that we use internally, in the case that an`object.assign` call is made with an object literal as the only argument. the`object.assign` call is not needed and we can just use the object literaldirectly.* refactors and adds multiline object fixes* many fixes and improvements:- handles nested object literals- handles various comment types- places comma after arguments in a smarter way* fixes typo and improves wording in docs* include string.prototype.matchall in package.json* several improvements:- adds line and column numbers to tests- warn on cases where argument is a spread element,- use getcommentsinside instead of regex- fix example in doc* use spread instead of apply* check if the native `object` is being overwritten, if it is, do not warn.bug fix to ensure that an we're warning on an `object.assign` for the literal case.* make messages consistent	True	
chore: remove sourcecode passthroughs from linter.prototype (refs #9161) (#9263)	True	
update: extract glob and filesystem logic from cli-engine (fixes #4305)	False	
docs: fix always-multiline example in multiline-ternary docs (#8904)	False	
docs: add faq for when eslint cannot find plugin (#9467)* docs: add faq for when eslint cannot find plugin* adding blank line around list per markdownlint	True	
4.11.0	False	
build: changelog update for 4.16.0	True	
fix: `no-empty` rule should allow any comments (fixes #2188)	False	
docs: no-extra-semi no longer refers to deprecated rule (fixes #4598)	True	
chore: remove more eslintrc-related files (refs #13481) (#13762)* chore: remove more eslintrc-related files (refs #13481)* fix failing tests* rewrite fileenumerator tests* remove commented out line* fix package.json version* fix linting error* adjust test coverage limits* update tests/lib/eslint/eslint.jsco-authored-by: brandon mills <btmills@users.noreply.github.com>co-authored-by: brandon mills <btmills@users.noreply.github.com>	True	
breaking: lint `overrides` files (fixes #10828, refs eslint/rfcs#20) (#12677)* breaking: lint `overrides` files (fixes #10828, refs eslint/rfcs#20)* update docs* sort for testssee also: https://github.com/eslint/eslint/pull/12700#discussion_r361072914	True	
docs: remove outdated rule naming convention (#9925)	False	
update: add 'method' option to no-empty (fixes #4605)	True	
fix: remove hard-coded list of unary keywords in space-unary-ops rule (fixes #2696)	False	
chore: fix test-suite to work with node master (#9688)changes to the output of strictequal are breaking the test suitethis minor adjustment to the regex will fix node 10+ while keepingsupport for older versions of node	True	
docs: add missed verb in docs (#15550)	False	
docs: eol-last docs fix (fixes #2755)	False	
new: accept plugins from cli (fixes #1113)	False	
docs: add license header to working with rules guide	True	
fix: npm run profile script should use espree (fixes #2150)	False	
fix: no-mixed-spaces-and-tabs reports multiline strings (#12566)* fix: no-mixed-spaces-and-tabs reports multiline strings* add more tests for comments	True	
update: warn about mixing ternary and logical operators (fixes #11704) (#12001)* ternary operators added to tule* ternary operators added* cases added for ternary operator mixed with logical* documentation updated* hard coded string message removed and in place added the operator..* test cases fixed* added the option to check for ternary operator and extra tests* documentation and tests updated* check for test or left node moved to a sperate function* wrong comment. has been updated	True	
new: check --stdin-filename by ignore settings (fixes #2432)	False	
update: add fixer for `strict` (fixes #6668) (#7198)	True	
fix: don't classify plugins that throw errors as "missing" (fixes #6874) (#8323)* fix: don't classify plugins that throw errors as "missing" (fixes #6874)previously, if a plugin threw an error on load, eslint would display the "missing plugin" error message. this was confusing for plugin developers, because it would be difficult to distinguish between an installation error and a broken plugin.* use a getter instead of an external dependency	True	
docs: improve `no-native-reassign` and specifying globals (fixes #5358) (#6462)* docs: improve `no-native-reassign` and specifying globals (fixes #5358)* follow corrections.	False	
docs: fix incorrect example being mark as correct (#6660)	False	
add git attributes file for line endings	True	
update: proposed no-magic-numbers option: ignorejsxnumbers (fixes #5348)	False	
added a test for getting global scope from program node (refs #148)	True	
chore: ensure that files in tests/conf are linted (#7579)	False	
fix: nested occurrences of no-else-return now show multiple reports (fixes #1369)	False	
build: add perf test	False	
fix: no-var should not fix variables named 'let' (fixes #11830) (#11832)	False	
chore: remove an indirect dependency on jsonify (#9444)replace json-stable-stringify with json-stable-stringify-without-jsonify.this removes an indirect dependency on jsonify which is unlicensed and not needed in supported environments.	True	
new: allow rules to listen for ast selectors (fixes #5407) (#7833)* new: allow rules to listen for ast selectors (fixes #5407)* optimize by predicting matched node types* allow no-restricted-syntax to handle query selectors as options* clean up node-event-generator* memoize calls to esquery.parse* pass a set to nodeeventgenerator instead of an array* don't special-case '*'* make the queries argument mandatory* add selector tests* use css specificity to sort selectors* use eventnames() if available* fix comment typos* add documentation for selectors* use stronger assertions in node-event-generator tests* handle selector parsing errors more gracefully* use node types in selector syntax examples* put the no-restricted-syntax section at the bottom of the selector docs* upgrade esquery to v1.0.0* use a jsdoc typedef for selector descriptors* make the assertion more specific for invalid-syntax error checking* use a consistent example in the no-restricted-syntax docs* add a test for ast node classes	True	
build: remove trailing spaces in blogpost template (#10280)	False	
update: adds nestedbinaryexpressions for no-extra-parens (fixes #3065)	True	
build: add node v17 (#15193)* build: add node v17* fix: npm install --force when node v17	True	
docs: fix getrulesmetaforresults link syntax (#14723)i caught the correct name of the anchor tag but missed the use of parens instead of square braces.	True	
sponsors: sync readme with website	True	
sponsors: sync readme with website	True	
documentation for no-delete-var rule. closes #129	True	
chore: don't make linter a subclass of eventemitter (refs #9161) (#9177)	False	
update: ruletester allows string errors in invalid cases (fixes #4117)ruletester now allows string errors for "invalid" test cases. also added some test cases to prevent non-object, non-string errors and to ensure incorrect error messages result in assertion failures.	True	
update: add fixer for `operator-linebreak` (#7702)* update: add fixer for `operator-linebreak`* don't do a fix if there are comments on both sides of the operator	True	
new: exit on fatal error (fixes #13711) (#14730)* docs: updated docs for exit-on-fatal-error* new: added exit-on-fatal-error feature* addressed pr feedback* made description consistent* updated dev docs for nodejs-api* updated cmd docs* added test case for 1 exit code* fixed typosco-authored-by: a-katopodis <ankatopo@microsoft.com>	True	
docs: add `ci` and `perf` tags for commit (#15215)	True	
update: add autofix for `padded-blocks` (fixes #6320) (#6393)	True	
0.0.6	False	
add quotes around object keycomments in example code did not include quotes around the `"exceptions"` key, but they should in order to be valid json.	True	
update: improve parser integrations (fixes #8392) (#8755)* rewrite traverser* add supports scope and visitorkeys of custorm parsers* add tests* scope ??? scopemanager in the result of `parser.parseforeslint`* keys ??? visitorkeys* move some functions to `create()` in no-unmodified-loop-condition* check `this.sourcecode.ast`* fix sourcecode parameter to one object* update for review* update traverser with eslint-visitor-keys* tweak tests with eslint-visitor-keys* add `eslintvisitorkeys` and `eslintscopemanager` to parseroptions* update docs* fix list style* ensure `sourcecode.scopemanager` is set* docs: update scopemanager docs* update for review* fix some links to escope docs* update for review* upgrade eslint-visitor-keys to 1.0.0	True	
update: fix no-invalid-regexp false negatives with no flags specified (#14018)	False	
fix: cleanup temp files from tests (fixes #5338)also removes the dependency on multiple temp dir modules	True	
sponsors: sync readme with website	True	
docs: remove stale keybase 2fa instructions (#13622)	False	
sponsors: sync readme with website	True	
0.7.1	False	
fix: `block-scoped-var` issues (fixes #2253, fixes #2747, fixes #2967)	False	
fix: special eventemitter keys leak information about other rules (#9328)`linter` uses node's `eventemitter` api to register listeners for rules. however, the `eventemitter` api has a few problems for this use case:* `eventemitter` has three "special" events (`newlistener`, `removelistener`, and `error`) which are called when something happens with another listener. this is undesirable because `linter` allows rules to register listeners for arbitrary string events, and we don't want rule listeners to be able to detect each other.* `eventemitter` calls listeners with a `this` value of the event emitter itself. this is undesirable because this would allow rules to modify or tamper with listeners registered by other rules.this commit fixes the problem by updating `linter` to use a custom event-emitting object with a similar api, rather than `eventemitter` itself.	True	
docs: add 1.0.0 migration guide (fixes #2994)	False	
build: changelog update for 4.0.0-alpha.1	True	
build: changelog update for 4.3.0	True	
chore: upgrade eslint-plugin-node (#8156)	False	
new: add no-import-assign (fixes #12237) (#12252)* new: add no-import-assign (fixes #12237)* add destructuring and for-in/of syntax* add mutation functions* add a more test* allow seal and preventextensions* add a test	True	
docs: fix typos for wrap-regex	True	
docs: remove reference to numeric config (fixes #6309) (#6327)	True	
docs: remove mention of minimatch for .eslintignorewe no longer use minimatch for ignore patterns, instead using `ignore`to match `.gitignore` format exactly.	True	
build: changelog update for 4.12.0	True	
new: create eslint-config-eslint (fixes #3525)	False	
docs: fix wording of minproperties in object-curly-newline (fixes #8874) (#8878)wording "at least" copied from array-bracket-newline docs.	False	
0.0.3	False	
new: add no-await-in-loop rule (#7563)	False	
0.4.5	False	
new: no-dupe-args rule (fixes #1880)	False	
fix: use new eslinttester (fixes #3187)	False	
update: fix indentation of parenthesized memberexpressions (fixes #8924) (#8928)the memberexpression listener in `indent` contains some logic to ensure that if the object of a memberexpression is wrapped in parentheses, the property is offset from the opening paren, not the object itself. due to a bug, this logic also caused the property to be offset from the opening paren if the entire memberexpression was wrapped in parentheses, raather than just the object. this commit updates the memberexpression listener to specifically check for parentheses around the object, not the entire memberexpression.	True	
build: changelog update for 4.4.1	True	
fix: transform envs option to object in config (fixes #1064)	True	
breaking: fixable disable directives (fixes #11815) (#14617)* new: fixable disable directives* part of the way there: not ready yet* generally fixed up, and just started on unit tests* lodash.flatmap* merge branch 'master'* progress...* fixed the remaining pre-existing unit tests* fixed up some tests* unprocesseddirective.parentcomment* avoided rescan by passing commenttoken in parentcomment* a lil edge case* fix directive grouping the other direction* incorrect state directive reference* simplified parentcomment / commenttoken range* use map in lib/linter/apply-disable-directives.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* used suggestion for individual directives removal* boolean in lib/cli-engine/cli-engine.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* docs fixups* added tests* tests and fix for multiple rule lists* remove unused sourcecode from tests* added high-level test in linter.js* apply suggestions from code reviewco-authored-by: brandon mills <btmills@users.noreply.github.com>* apply suggestions from code reviewco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* added require* wrong order...* also mention in command-line-interface.md* respect disablefixes (not yet tested)* fixed up existing tests* add unit test for options.disablefixes* apply suggestions from code reviewco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: brandon mills <btmills@users.noreply.github.com>	True	
fix: comment configuration of rule doesn't work (fixes #1792)fix: comment configuration of rule doesn't work (fixes #1792)fix: comment configuration of rule doesn't work (fixes #1792)fix: comment configuration of rule doesn't work (fixes #1792)fix: comment configuration of rule doesn't work (fixes #1792)	False	
update: add `unnecessary` option to `quote-props` (fixes #3381)	True	
build: update markdownlint dependency	False	
fix: valid-jsdoc does not know async function returns (fixes #9881) (#10161)* fix: valid-jsdoc does not know async function returns (fixes #9881)* docs: update valid-jsdoc requirereturn option description	False	
update: fix wrong indentation about `catch`,`finally` (#7371)	False	
update: use doctrine range information in valid-jsdoc (#9831)	True	
chore: enable eslint-plugin/test-case-shorthand-strings (#9067)	False	
fix: sort-keys throws error at spreadelement (fixes #11402) (#11403)* fix: sort-keys throws error at spreadelement (fixes #11402)* fix: add unit test* fix: address reviewer's comment	True	
docs: replace ecmafeatures setting with link to config page	True	
update: add "multiline" type to padding-line-between-statements (#8668)* update: add multiline-expression statement type* chore: add valid and invalid tests for multiline-expression* docs: add description of multiline-expressionand minor tweaks to existing descriptions.* chore: remove spurious newlines* chore: add additional test cases	True	
fix: crash when sourcecode object was reused (fixes #5007)	True	
chore: rm superfluous argument & fix perf-multifiles-targets (#11834)	False	
update: implement auto fix for object-curly-spacing (fixes #3857)	True	
8.0.0-beta.1	False	
add additional test for no-cond-assign ruletesting pattern "if ((somenode = somenode.parentnode) !== null) { }"should pass	True	
4.1.1	False	
7.10.0	False	
fix: autofix of no-unneeded-ternary made syntax error (fixes #11579) (#11616)	True	
fix: ignore empty statements in max-statements-per-line (fixes #6153) (#6156)	False	
fix: no-multiple-empty-lines errors when no line breaks (fixes #6449) (#6451)	False	
added files array in package json	True	
chore: add jsdoc type annotation to rules (#15291)	True	
revert "fix: use xml 1.1 on xml formatters (fixes #9607) (#9608)" (#9667)this reverts commit 208fb0f3f8a42236e7324f9119d5791555fdb6f0.	True	
update: add fixer for no-unused-labels (#7841)* update: add fixer for no-unused-labels* don't do a fix if comments interfere	True	
build: package.json and changelog update for 3.2.1	True	
docs: reduce length of paragraphs in rules index	False	
docs: update multiple pages to fix rendering of fenced code blocks	True	
docs: ???the function actually use???: use -> uses (#11380)	False	
breaking: implement parseroptions (fixes #4641)	False	
docs: add more related rules for object-curly-spacing (#10175)	True	
new: `no-self-assign` rule (fixes #4729)	False	
fix: `id-match` false positive in property values (fixes #5885) (#5960)	False	
chore: move lib/logging and lib/timing to lib/util/ (refs #10559) (#10579)* chore: move lib/logging to lib/util/logging* chore: move lib/timing to lib/util/timing	True	
revert "breaking: traverse into type annotations (fixes #7129) (#8365)" (#8584)* revert "breaking: traverse into type annotations (fixes #7129) (#8365)"this reverts commit 66af53e86ae2640981ed06b48c07cd2d7af261d5.* remove corresponding section from 4.0.0 migration guide	True	
add support for detecting unreachable code after a throw or returnstatement.	True	
update: improve error message in `no-control-regex` (#6839)* update: improve error message in `no-control-regex` (fixes #6293)* fixup: this will be squashed before the pr is merged* fixup: this will be squashed before the pr is merged* fixup: add more test cases; fix a bug.* fixup: try to improve variable names.	True	
docs: on maxeof with eol-last (fixes #12742) (#13374)* docs: on maxeof with eol-last (fixes #12742)added an explanation on how and why maxeof should be set to 0 to work with the eol-last rule.* docs: on maxeof with eol-last (fixes #12742)added an explanation on how and why maxeof should be set to 0 to work with the eol-last rule.* docs: on maxeof with eol-last (fixes #12742)added an explanation on how and why maxeof should be set to 0 to work with the eol-last rule.* docs: on maxeof with eol-last (fixes #12742)added an explanation on how and why maxeof should be set to 0 to work with the eol-last rule.* docs: on maxeof with eol-last (fixes #12742)added an explanation on how and why maxeof should be set to 0 to work with the eol-last rule.* docs: on maxeof with eol-last (fixes #12742)added an explanation on how and why maxeof should be set to 0 to work with the eol-last rule.	True	
fix: make ruletester handle empty-string cases gracefully (fixes #8142) (#8143)	False	
update: enforceforclassmembers computed-property-spacing (fixes #12049) (#12214)	True	
update: check template literal in yoda (fixes #12863) (#12876)* fix: check template literal in yoda (fixes #12863)* fix jsdoc, typo, add test cases* add test cases* update the documentation* edit jsdoc* add test case	False	
fix: no-implicit-coercion false positive with `string()` (fixes #14623) (#14641)	False	
build: changelog update for 7.9.0	True	
fix: fix inconsistently works option in no-extra-parens (fixes #12717) (#12843)	False	
docs: gitter -> discord url (refs #13039) (#13308)* docs: gitter -> discord url* fix issue template errors	False	
merge smart-eqeqeq into eqeqeq	True	
fix: jsx-quotes exception for attributes without value (fixes #3793)	True	
docs: update outdated info in architecture page (#7816)* the `cli` description stated that `bin/eslint.js` calls `process.exit()`, but this is no longer correct (this changed in 759525e1b0dffa44d8aa9f073d8f709ea4bbb794).* the `eslint` description stated that the traverser emits events with the `:after` suffix when exiting nodes, but it actually emits events with the `:exit` suffix (this changed in f1f453d9370ca522e9765c7731e13d3c4fb75be1).	False	
fix: eqeqeq autofix avoids clashes with space-infix-ops (fixes #4423)	True	
docs: remove inline errors from doc examples (fixes #4104)used `\s+/\*\s*error\s+.+\*/` regex on all `.md` files and replaced allmatches with an empty string.	False	
docs: update yield-star-spacing documentation for 2.0.0 (fixes #5272)	True	
update: add always-multiline option to multiline-ternary (fixes #8770) (#8841)	True	
docs: add an example `object.assign()` for rule no-import-assign (#14916)* docs: add an example `object.assign()` for rule no-import-assign* update docs/rules/no-import-assign.mdco-authored-by: nitin kumar <snitin315@gmail.com>* update docs/rules/no-import-assign.mdco-authored-by: nitin kumar <snitin315@gmail.com>co-authored-by: nitin kumar <snitin315@gmail.com>	True	
chore: make test-case-property-ordering reasonable (#11511)	True	
fix: no-implicit-coercion string concat false positive (fixes #7057) (#7060)	False	
update: no-invalid-regexp allows custom flags (fixes #5249)	True	
fix: check all semicolons in no-space-before-semi (fixes #1885)	True	
docs: add let and const examples for newline-after-var (fixes #3020)although this rule has always been compatible with `let` and `const`,until now no documentation existed of that behaviour.this pr provides that documentation as well as providing a few examples.	True	
docs: clarify that space-unary-ops doesn't apply when space is required (#13767)* docs: clarify space-unary-ops doesn't apply when space is required* remove incorrect trailing space* remove referenceerror examples to avoid confusion	True	
update: move redeclaration checking for builtins (fixes #3070)	True	
fix: creating of enabledglobals object without prototype (fixes #11929) (#11935)* fix: creating of enabledglobals object without prototype* chore: add test (#11935)	True	
fix: update rule tests for parser options (fixes #4673)	True	
build: increment eslint-config-eslint	False	
fix: include phantomjs globals (fixes #3064)	True	
build: fix perf test to take median of three runs (fixes #781)	True	
docs: document semi-spacing behaviour (fixes #4404)	False	
testing: move eslinttester to be external dependency (fixes #480)	True	
fix: added missing export syntax support to the block-scoped-var rule. (fixes #2887)	True	
fix: enable debug logs for @eslint/eslintrc (fixes #13850) (#13861)	True	
fix: incorrect `indent` check for array property access (fixes #7484) (#7485)	True	
update: display errors at the place where fix should go (fixes #4470)	False	
disallow 00 in no-octal rule	False	
docs: `no-invalid-regexp`: add `ecmafeatures` flags for `u`/`y`documenting https://github.com/eslint/eslint/issues/1537#issuecomment-69674739 since i got confused looking for it.	True	
breaking: make no-redeclare stricter (fixes #11370, fixes #11405) (#11509)	False	
#595 add func-names rule	False	
docs: add a missing word in the contributing doc	False	
fix: space-in-parens should not throw for multiline statements (fixes #1351)fix: space-in-parens should not throw for multiline statements (fixes #1351)fix: space-in-parens should not throw for multiline statements (fixes #1351)	True	
fix: use xml 1.1 on xml formatters (fixes #9607) (#9608)	True	
docs: removed '>' prefix from from docs/working-with-rules (#11818)* removed '>' prefix from from docs/working-with-rules* retained the line space	False	
docs: fix wrong link in object-curly-newline (#6373)	False	
sponsors: sync readme with website	True	
docs: add missing paragraph about "custom parsers" (#10547)	True	
new: no-compare-neg-zero rule (#8091)* new:no-eq-neg-zero* bugfix* add valid test* fix* doc: no-eq-neg-zero* list to be alphabetical* add additional test* recommended: false* add additional check* update: to fix @not-an-aardvark's comments* add some tests* update: rename, check more operators, add tests1. rename the rule no-eq-neg-zero => no-compare-neg-zero2. check operator(>,<, ==, etc.)3. add some more tests* update:1.use set instead of regex, to improve readablity.2.make the error message more correct.* update:1. doc description2. author: @aladdin-add3. add test: object.is(x, -0)* update: add valid test: object.is(x, -0)* update: author aladdin-add* update: doc(no-compare-neg-zero)	True	
upgrade: esquery@1.2.0 (#13076)	False	
increased test coverage	False	
fix: no-multi-spaces conflicts with smart tabs (fixes #2077)	False	
docs: fix wrong rule name (#13913)	False	
docs: deprecate no-wrap-func (fixes #2644)	False	
fix: warning & error count in `cliengine.geterrorresults` (fixes #6155) (#6157)	False	
fix: require-atomic-updates property assignment message (fixes #15076) (#15109)	True	
rule: no multiline strings	False	
fix: report no-case-declarations from declarations (fixes #10048) (#10167)	False	
chore: restructure files (#11555)	False	
build: changelog update for 7.30.0	True	
new: do not remove non visited files from cache. (fixes #6780) (#6921)	False	
docs: fixed broken hash link for working-with-rules.md (#13386)fixed broken hash link	True	
chore: ensuring eslint:recommended rules are sorted. (#8106)* chore: ensuring eslint:recommended rules are sorted.also renaming to conf/eslint-recommended.js for parity with conf/eslint-all.js and ensuring references are fixed as well.* chore: fix makefile message for missing eslint:recommended configuration	True	
breaking: allow extensionless files to be passed on cli (fixes #1131)	True	
new: add --resolve-plugins-relative-to flag (#11696)with the [2018-simplified-package-loading rfc](https://github.com/eslint/rfcs/blob/8bc0b80e0b3e54d10991a4774c41f7375dfcbbfe/designs/2018-simplified-package-loading/readme.md) implemented, eslint always resolves plugins relative to the current working directory. the cwd works well for the most common use case, but is inconvenient for certain integrations. this commit proposes adding a cli flag to specify an alternative place where plugins should be resolved from.(implements https://github.com/eslint/rfcs/pull/18)	True	
fix: basepath of overridetester (fixes #12032) (#12205)	False	
fix: `overrides` handle relative paths as expected (fixes #11577) (#11799)	False	
docs: fix inconsistent linking in migration guide (#11881)	False	
chore: remove duplicate health files (#13380)	False	
chore: add metadata to existing rules - batch 4 (refs #5417)chore: add metadata to existing rules - batch 4 (refs #5417)	True	
fix: correct comma-dangle json schema (#8864)* fix: correct comma-dangle json schema* $refs is not part of the spec* ???defs??? is inconsistent with the use of ???definitions??? in other schemas* docs: note on usage of $ref in rule schema	True	
0.3.0	False	
chore: use eslint-plugin-rulesdir instead of --rulesdir for self-linting (#9164)	True	
update: improve cliengine.getformatter() (refs #1723)	True	
update: add for-in and for-of checks for props in no-param-reassign (#11941)	True	
new: no-unneeded-ternary rule to disallow boolean literals in conditional expressions (fixes #2391)	True	
update: add functionexpression to require-jsdoc (fixes #5867) (#9395)* update: add functionexpression to require-jsdoc (fixes #5867)* bug fix: function expression as computed property	True	
fix: require semicolon after import/export statements (fixes #2174)	False	
docs: add docs for no-regex-spaces and all doc errors now break build (closes #562)	True	
test: add destructuring test cases for `computed-property-spacing` (#15424)	True	
fix: added async in allow method in no-empty-function (fixes #12768) (#13036)* fix: added async in allow method in no-empty-function* chore: added tests for async* allow* docs: updated docs for async method and funct* chore: more tests and test fixes and docs refactore* update docs/rules/no-empty-function.mdco-authored-by: yeonjuan <yeonjuan93@naver.com>* update docs/rules/no-empty-function.mdco-authored-by: yeonjuan <yeonjuan93@naver.com>* update docs/rules/no-empty-function.mdco-authored-by: yeonjuan <yeonjuan93@naver.com>* docs: fixed the ecma version for docs snippetco-authored-by: yeonjuan <yeonjuan93@naver.com>	True	
fix: curly-spacing missing import case (fixes #3302)	False	
updating documentation description for: no-space-before-semi rule, changing rules to exempt strings with semicolons and test for that condition. fixes #629.	True	
new: spaced-comment rule (fixes #1088)	False	
0.4.1	False	
update: `commentpattern` option for `no-fallthrough` rule (fixes #5757)	True	
new: add "always" and "never" options to "one-var" rule. (fixes #1619)	True	
build: changelog update for 6.2.1	True	
fix: allow comments in key-spacing groups (fixes #1632)	False	
update: no-magic-numbers false negative on reassigned vars (fixes #4616) (#7028)	False	
update: refactor eslint.verify args (fixes #4395)	True	
fixed missing documentation links	False	
chore: fix invalid redeclared variables in tests (#8130)	False	
fix 'node-modules' typo in docs	False	
update: `class-methods-use-this`: `exceptions` option (fixes #7085) (#7120)	False	
fixed warning when unused var declared as param in functionexpression/declaration can be ignored because later param is used	True	
4.18.2	False	
make sure 'default' isn't flagged by no-space-returns-throw rule (fixes #442)	False	
docs: fix typo in no-unexpected-multiline (fixes #7442) (#7447)	False	
add ruleid to all formatters output (fixes #472)	True	
fix: throw error if ruletester is missing required test scenarios (#7388)* fix: throw error if ruletester is missing required test scenariosadd object validationfix linter issues* ensure the test for this error expects the right error message* replace function expression callbacks with arrow callbacks* change "valid" to "acceptable" in the description of the test	True	
breaking: no-unused-vars reports all after-used params (fixes #9909) (#10119)* breaking: no-unused-vars reports all after-used params (fixes #9909)* docs: edited no-unused-vars args:after-used description* docs: incorporating review feedback	False	
update: `new-cap` supports fullnames (fixes #2584)	False	
5.0.0-alpha.4	False	
update: add quotes around the label in `no-redeclare` error messages (fixes #3583)	False	
chore: avoid using private linter apis in sourcecode tests (refs #9161) (#9174)this updates the tests for `sourcecode` to use the public `linter#definerule` api rather than the private `linter#on` api.	True	
chore: remove strip-bom dependency (refs #8603) (#8606)the strip-bom dependency increases the package download size and the number of dependent packages, and is only used in one place. this commit removes the dependency.	False	
fixed broken merge	False	
revert "new: rule indent (fixes #1022)"this reverts commit add97babd0a4583cb00ec8753b721149aeb00c22.	False	
4.13.1	False	
fix: revert changes to reported locations in max-lines-per-function (#15397)revert "feat: report only lines that exceed the limit in max-lines-per-function (#15140)"this reverts commit 8f44cf505765b663e371412ab57f0f1dbbe78513.	True	
docs: add brunch plugin to integrations (#7225)	True	
4.9.0	False	
update: added as-needed option to arrow-parens (fixes #3277)	True	
docs: missing space in `no-fallthrough` doc.	False	
upgrade: npm-license to 0.3.2 (fixes #5996) (#5998)	True	
fixes #464: space-infix-ops checks for variabledeclarator init spacing	True	
chore: refactor cliengine tests (refs #13481) (#13709)* chore: refactor cliengine tests (refs #13481)* a bit of cleanup* address review comments* fix incomplete fixture cleanup* only remove config file if present	True	
update: add allowtaggedtemplates to no-unused-expressions (fixes #7632) (#8253)	True	
fixes no-octal check to only check for numbers	True	
fix: `no-console` ignores user-defined console (fixes #7010) (#7058)	True	
fix: prefer-const object destructuring false positive (fixes #9108) (#10368)<!--eslint adheres to the [js foundation code of conduct](https://js.foundation/community/code-of-conduct).-->close #9108**what is the purpose of this pull request? (put an "x" next to item)**[ ] documentation update[x] bug fix ([template](https://raw.githubusercontent.com/eslint/eslint/master/templates/bug-report.md))[ ] new rule ([template](https://raw.githubusercontent.com/eslint/eslint/master/templates/rule-proposal.md))[ ] changes an existing rule ([template](https://raw.githubusercontent.com/eslint/eslint/master/templates/rule-change-proposal.md))[ ] add autofixing to a rule[ ] add a cli option[ ] add something to the core[ ] other, please explain:<!--if the item you've checked above has a template, please paste the template questions below and answer them. (if this pull request is addressing an issue, you can just paste a link to the issue here instead.)-->https://github.com/eslint/eslint/issues/9108<!--please ensure your pull request is ready:- read the pull request guide (https://eslint.org/docs/developer-guide/contributing/pull-requests)- include tests for this change- update documentation for this change (if appropriate)--><!--the following is required for all pull requests:-->**what changes did you make? (give an overview)**allow:```js(function ({ a }) {let b;({ a, b } = obj);})();```or```jslet a;{let b;({ a, b } = obj);}```	True	
docs: updates `amd` description (fixes #1175)	False	
fix: `no-unmodified-loop-condition` false positive (fixes #5166)	False	
1.10.3	False	
upgrade: update markdownlint dependency to 0.2.0 (fixes #6781) (#6782)	True	
update: add fixer for no-else-return (fixes #7863) (#7864)	True	
docs: add backticks in getter-return (#10218)	False	
docs: fix up vars-on-top documentation (fixes #1234)	True	
fix: misspelling in no-return-assign message	False	
docs: fix typo: exception label	False	
sponsors: sync readme with website	True	
docs: documentation fixthe rule is not environment-specific	False	
added guard-for-in rule (fixes #1)	True	
change: no-unused-vars default to 'all' (fixes #760)	True	
docs: move docs from eslint.github.io (fixes #5964) (#6012)	False	
upgrade: `eslint-plugin-eslint-plugin` to v4 (#15169)some rules have been added to the `recommended` config so we no longer have to manually enable them.https://github.com/not-an-aardvark/eslint-plugin-eslint-plugin/releases/tag/v4.0.0	True	
docs: clarify init sets up local installation (fixes #5874)	False	
fix: function body indent issues (fixes #3614, fixes #3799)	False	
update: make `no-useless-escape` allowing line breaks (fixes #5689)	False	
2.5.0	False	
update: include 'typeof' in rule 'no-constant-condition' (fixes #5228)	False	
build: fix release task	False	
fix: improve `constructor-super` errors for literals (fixes #5449)fix: wrong path on non-blocked if statements.fix: improve `constructor-super` error messages	True	
breaking: strict package exports (refs #13654) (#14706)* breaking: strict package exports (refs #13654)* update docs* fix linting errors* update docs/developer-guide/nodejs-api.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	False	
docs: fix typo in v6 migration guide (#12412)	False	
1.3.1	False	
update: replace md5 hashing of cache files with murmurhash (fixes #5522)	False	
added documentation for the `no-eval` rule	True	
fix: false alarm of semi-spacing with semi set to never (fixes #1983)	True	
docs: added fitbit to the list of companies	True	
new: `max-lines` rule (fixes #6078) (#6321)	False	
docs: mark global-strict on by default (fixes #2629)	False	
fix: delete unnecessary duplicated question (fixes #11617) (#11618)* delete unnecessary duplicated question* fix: delete unnecessary duplicated question (fixes #11617)	False	
sponsors: sync readme with website	True	
build: changelog update for 7.0.0-alpha.3	True	
docs: add missing options for `lines-around-comment` (#9589)`allowclassstart` and `allowclassend` were missing from the options list.	True	
breaking: remove deprecated experimentalobjectrestspread option (#11420)	False	
update: block-spacing changed loc for extra (refs #12334) (#13314)* update: changed loc for extra (refs #12334)* chore: linting fixes* update: loc reporting for missing case* chore: un-comment valid case* chore: consistent ordering of datas in errors object	True	
rule: no-pluspluscreated the no-plusplus rule. this rule disallows the use of unary operators, `++` and `--`, as such the following would be flagged:```jsvar foo = 42;foo++;foo--;```this rule matches jshint's **plusplus** rule.	True	
fix: indent for async arrow functions (fixes #13497) (#13544)* fix: indent for async arrow functions (fixes #13497)* update: addde open paren check and tests* chore: changed variable name to nexttoken* chore: added tests with comments* chore: added one more test case* chore: simplified logic* chore: tests indentation* chore: fixed indentation of the test cases* chore: formatting for the test cases* chore: using descriptive skip options instead of number	True	
new: configurable list size for per-rule performance metrics (#13812)implements rfc: https://github.com/eslint/rfcs/tree/master/designs/2020-timing-list-size	True	
update: update handling of destructuring in camelcase (fixes #8511) (#9468)* fix: handle destructuring with defaults in camelcase rule (fixes #8511)* update: checking right-side of default value assignmentadding to docs, tests, and fixing logic	True	
fix: allow separate mode option for multiline and align (fixes #6691) (#6991)	True	
fix: autofix shouldn't produce template literals with `\8` or `\9` (#13737)* fix: autofix shouldn't produce template literals with `\8` or `\9`* rename functions	True	
chore: complete to move to github actions (#12625)	True	
upgrade: require-uncached renamed to import-fresh (#11066)	True	
new: allow reading from stdin (fixes #368)	False	
fix: allow irregular whitespace in comments (fixes #5368)the `no-irregular-whitespace` rule is unduly limiting "irregular"whitespace to string literals alone (despite a comment at the topof the file indicating otherwise).  this prevents non-englishspeakers from commenting their code in their own language.  forinstance, french language mandates (half-width, but hey) unbreakablewhitespace before two-part punctuation marks (in effect: `;`, `:`,`?` and `!`), and this rule prevents them from doing so.this commit fixes that.  technically, it required choosing a differentparsing path as the existing use cases: apparently the ruleinfrastructure only triggers `'program`' entities after any potentialtop-of-file comment block (or perhaps esprima does this), and becauseof the way the `no-irregular-whitespace` rule is originally written,getting an initial `linecomment` or `blockcomment` node before themain `program` node prevents us from then stripping these errorsfrom the report.  so we accrue comment nodes until `program:exit`,then use them for error stripping at that final moment, right beforecontributing to the report.a `skipcomments` option is introduced, boolean, defaulting to `true`,that gives users control over whether comments are, indeed, notchecked for irregular whitespace.  this was suggested by @nzakaswhen reviewing #5368.this also updates the docs and tests (all tests passing, checked).	True	
docs: fixed json syntaxstrings not wrapped in double quotes.	True	
upgrade: globals 9.x (fixes #5668)	False	
breaking: simplify config/plugin/parser resolution (fixes #10125) (#11388)this change updates eslint to load plugins relative to the user's project root, and other packages relative to where they're specified in a config. this simplifies eslint's package-loading, resulting in fewer confusing errors about missing packages. it also fixes an existing design bug where eslint would sometimes fail to load plugins in valid setups.implements https://github.com/eslint/rfcs/pull/7.	True	
upgrade: espree 3.1.4 (fixes #5923, fixes #5756)	False	
chore: avoid skipping test for env overrides (refs #8291) (#8556)when working on 734846b1557a45eb43286c4da2bdc1e13b89d1c6, it was discovered that the regression test for https://github.com/eslint/eslint/issues/3735 was broken and always passing. the test was broken by 1e600655b4da7134dbc9d0f909b1f7bc247e6cb0 over a year ago, and a regression occurred later on (possibly in 841086923b94de733a07d1a5851402311e84946e), which no one noticed because the regression test was broken.the test was supposed to assert that an environment setting in a child config will override the corresponding setting in a parent config. unfortunately, in the time since the regression occurred, people have started using things like `parseroptions: { ecmaversion: 7 }` along with `env: { es6: true }`, many projects rely on the fact that when these two options are combined, `ecmaversion: 7` will be passed to the parser even though the `env` specifies `ecmaversion: 6`. as a result, re-fixing the original bug would cause significant ecosystem breakage.the solution in 734846b1557a45eb43286c4da2bdc1e13b89d1c6 was to skip the test and deal with the problem later. this commit modifies the test to assert the current behavior, which is the opposite of what the test was originally supposed to assert. if we decide to change the current behavior, we can always modify the test again, but i think it's important to verify that the current behavior doesn't change by mistake, because a lot of projects are relying on it.refs: https://github.com/eslint/eslint/issues/3735, https://github.com/eslint/eslint/pull/8291, https://github.com/eslint/eslint/pull/8295#discussion_r107003816	True	
chore: remove incorrect test from indent.js. (#7531)	False	
fix: don't autofix `+ +a` to `++a` in space-unary-ops (#8176)* fix: don't autofix `+ +a` to `++a` in space-unary-opsmost of the time, it's legal to remove spacing between adjacent operator tokens,but in a case like `+ +a` it changes the behavior, so we should skip autofixing.another example is `+ ++a`, and the `-` versions of all of these. since thereare relatively few unary operators and `++` and `--` are only allowed in limitedcontexts, there aren't a ton of cases to think through here, so hopefully thisis all of them.* use null in tests to assert that no autofixing happens	True	
update: add qunit to environments (fixes #2870)	True	
docs: fix dead link in max-lines rule docs (#12766)	False	
fix: allow empty loop body in no-extra-semi (fixes #3075)	False	
fix: false negative of `max-len` (fixes #6564) (#6565)	False	
docs: update badges	False	
docs: update jscs status in readme (#6802)	False	
3.9.0	False	
re-add lines that were accidentally deleted from config	False	
new: `object-curly-newline` (fixes #6072) (#6223)	False	
update: use sane defaults for jsx indentation (fixes #8425) (#8593)* update: use sane defaults for jsx indentation (fixes #8425)this updates the `indent` rule to enforce reasonable defaults for jsx nodes. previously, it always enforced that their indentation was zero, which was usually undesirable.for some users, this might make it so that the `jsx-indent` rule from `eslint-plugin-react` is no longer necessary. however, `indent` is not aiming for full compatibility with the `jsx-indent` rule. in the future it should be possible to ignore specified nodes with the `indent` rule (e.g. jsx elements), which will allow users to continue to use `indent` and `jsx-indent` simultaneously.* handle jsxattribute indentation correctly	True	
docs: guard-for-in - added missing id in title (fixes #969)	True	
breaking: allow empty arrow body (fixes #4411)	False	
removes line length from code style convention docs	False	
chore: cache fs reads in ignored-paths (fixes #8363) (#8706)	False	
build: changelog update for 3.19.0	True	
fix: skip rest properties in no-dupe-keys (fixes 3042)	False	
docs: clarify "case" specifier in padding-line-between-statements (#13562)	False	
update: fix no-unreachable logic for class fields (refs #14857) (#14920)	True	
update: merge warnings of consecutive unreachable nodes (fixes #6583) (#6729)	False	
updating max-params rule name	False	
docs: update readme team and sponsors	True	
chore: removed unused code related to scopemap (#7218)	True	
update: attach parent in getnodebyrangeindex (fixes #2863)note that this only includes the direct parent, not the grandparent.	False	
fix: cliengine default cache parameter name (fixes #3755)this change fixes the `cliengine` setting in some places where it wasaccidentally using `usecache` rather than the documented `cache` option.hopefully this should prevent other developers from being confused!	True	
fix: don't report setter params in class bodies as unused (fixes #7351) (#7352)	False	
fix: no-multiple-empty-lines: adjust reported `loc` (#12594)the `+ 1` was from a time where we warned about anything with more than one empty line, but since then the rule has become configurable. we should put the warning on the first line that breaks this rule, instead of on the second empty line.	True	
update: make newline-per-chained-call fixable (#9149)	False	
upgrade: espree to 1.9.1 (fixes #1816, fixes #1805)	True	
new: `prefer-destructuring` rule (fixes #6053) (#7741)* new: `prefer-destructuring` rule (fixes #6053)* address general, easy pr feedback* remove checks covered by `object-shorthand`* add support for assignmentexpression in `prefer-destructuring`* add `requirerenaming` option to the `prefer-destructuring` rule* more pr feedback* add missing semicolon to code example in docs* update documentation	True	
feat: fix no-eval logic for `this` in arrow functions (#15755)	True	
fix: more autofix token-combining bugs (#8394)there are cases in `dot-notation` and `no-floating-decimal` where tokens can be inadvertently combined by an autofix, resulting in incorrect code. this commit adds a helper function to ast-utils to detect whether tokens can be safely combined, and updates existing autofixers to use that function.	True	
fix: prefer-const false positive with object spread (fixes #8187) (#8297)* fix: prefer-const false positive with object spread (fixes #8187)	False	
add tests to cover 100% of eslint.js	True	
fix: `no-unused-vars` false positive around callback (fixes #6576) (#6579)* fix: `no-unused-vars` false positive around callback (fixes #6576)* fix: `no-unused-vars` false positive about reuse (fixes #6576)	False	
8.1.0	False	
docs: fix and add more examples for new-cap rule (fixes #12874) (#14725)* docs: fix and add more examples for `new-cap` rule* docs: update* docs: update* docs: update* docs: update docs/rules/new-cap.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
sponsors: sync readme with website	True	
sponsors: sync readme with website	True	
breaking: remove `source` property from linting messages (fixes #7358) (#10012)	True	
update: reporter locr of func-call-spacing (refs #12334) (#13311)	False	
fix: account for linebreaks before postfix `++`/`--` in no-extra-parens (#13731)	True	
build: package.json and changelog update for 2.12.0	True	
fix: location of new-cap error messages (fixes #2025)	False	
docs: fix comment placement in a code example (#10799)	False	
move to tests/bench	True	
update: detect and fix wrong linebreaks (fixes #3981)	False	
fixed docs typo	False	
chore: use object-shorthand batch 1 (refs #6407) (#6893)	False	
fix: no-mixed-operators false positives with `? :` (fixes #14223) (#14226)	True	
4.3.0	False	
build: update ci for node.js 13 (#12496)	True	
new: nonblock-statement-body-position rule (fixes #6067) (#8108)* new: nonblock-statement-body-position rule (fixes #6067)* don't check the 'else if' pattern	False	
upgrade: dependencies (#8304)	False	
fixing no-caller bug	False	
build: fix site generation (fixes #6791) (#6793)	False	
fixes #152	False	
chore: remove linter#reset (refs #9161) (#9268)	False	
fix for `no-proto` and `no-iterator` false positivethis fixes an issue where both `no-proto` and `no-iterator` would incorrectly warn on the following code:var foo = bar[__iterator__];because `__iterator__` is a variable and not a property on `bar`, there should be no warning.this issue was raised with this comment: https://github.com/nzakas/eslint/pull/275#issuecomment-23296294	True	
2.0.0-rc.1	False	
sponsors: sync readme with website	True	
update: make radix accept a "as-needed" option (fixes #4048)this makes the radix rule disallow using the second parameter to parseintwhen it's 10. other values are allowed.	True	
fix: one-var 'never' option for mixed initialization (fixes #2786)	True	
1.0.0-rc-2	False	
new: add a linter#defineparser function (#9321)	False	
sponsors: sync readme with website	True	
fix: valid-jsdoc fix for param with properties (fixes #3476)	True	
fix: `max-len`: `ignoretemplateliterals`: handle 3+ lines (fixes #7125) (#7138)	False	
refactor: remove unused parameter in `linter.js` (#15451)	True	
rule to enforce function style (fixes #460)	True	
docs: update the example of switchcase (#6981)* docs: update the example of switchcase* add a new example of switchcase	False	
docs: add v8.0.0 migration guide (fixes #14856) (#14884)* docs: add v8.0.0 migration guide (fixes #14856)* update docs/user-guide/migrating-to-8.0.0.mdco-authored-by: bryan mishkin <698306+bmish@users.noreply.github.com>* update docs/user-guide/migrating-to-8.0.0.mdco-authored-by: kagami sascha rosylight <saschanaz@outlook.com>* add mention of acorn ast change* update docs/user-guide/migrating-to-8.0.0.mdco-authored-by: bryan mishkin <698306+bmish@users.noreply.github.com>* update docs/user-guide/migrating-to-8.0.0.mdco-authored-by: bryan mishkin <698306+bmish@users.noreply.github.com>* update docs/user-guide/migrating-to-8.0.0.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>* update docs/user-guide/migrating-to-8.0.0.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>* update docs/user-guide/migrating-to-8.0.0.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>* update docs/user-guide/migrating-to-8.0.0.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>co-authored-by: bryan mishkin <698306+bmish@users.noreply.github.com>co-authored-by: kagami sascha rosylight <saschanaz@outlook.com>co-authored-by: brandon mills <btmills@users.noreply.github.com>	True	
docs: fix typo in object-shorthand docs (#7267)	False	
breaking: implement yield-star-spacing rule (fixes #4115)this change removes checking of yield* operators from the space-unary-ops rule, and adds a new yield-star-spacing rule to check spacing around the * in yield* expressions.	True	
update: add includecomments to gettokenbyrangestart (fixes #8068) (#8069)* update: add includecomments to gettokenbyrangestart (fixes #8068)* remove @private from public methods	True	
build: changelog update for 7.10.0	True	
update: `enforceforarrowconditionals` to `no-extra-parens` (fixes #6196) (#8439)	True	
fix: no-extra-parens false positive with `let` identifier in for-loop (#13981)	True	
breaking: ignore node_modules by default (fixes #1163)	False	
fix: block-scoped-var catchclause handling (fixes #922)	False	
new: allow-multiline option on comma-dangle (fixes #4967)	False	
docs: fix migration guide for no-arrow-condition rule	True	
fix: '.md' to '.html' with anchors (fixes #1415)markdown documentation can now reference another markdown file with an anchor and it will work for the site along with github.ex. `working-with-rules.md#rule-unit-tests`	True	
update: add minimum value to integer values in schema (fixes #4941)	True	
fix: do not cache `.eslintrc.js` (fixes #5067)read `.eslintrc.js` on every config load by not using `require`	False	
docs: add options to func-names config comments (#6748)	True	
build: do not strip .md extension from absolute urls (#7222)	True	
added unit test for calling config.getconfig with no arguments.	True	
docs: update readme with release and sponsor info	True	
upgrade: bump `espree` dependency to `2.2.4` (fixes #3403)	True	
chore: cache results in runtime-info (#12320)	False	
4.13.0	False	
docs: convert rules in index under removed from list to table (#6091)	True	
fix: prefer-destructuring removes comments (refs #13678) (#13682)	False	
fix: `newline-after-var` crash on a switch statement (fixes #5277)	False	
fix: implicit-arrow-linebreak adds extra characters (fixes #11268) (#11407)* add failing test case* add specified test case from issue* remove calculation for white spaces from formatcomments and addparentheses, add condition to check for arrow expressions with block statements* fix linting errors, ensure npm test runs without fail* change new test case to check for prepended comment, add unindent function to tests for implicit arrow linebreak* add optional token type to arrow body* add failing test case* remove null return from autofixbesides, refactor body setting lines to use .body* fix linting errors* fix linting error in unindent rule in implicit arrow linebreak test* add another test case where nested arrow function contains block statement* add constraint for block statement in add parentheses	True	
new rule: no-extra-boolean-cast (fixes #557)disallows double-negation boolean casts in contexts where the result isalready coerced to a boolean. proposed in #557 by @michaelficarra.	True	
fix: use unversioned sinon file in browser test (fixes #1947)	False	
fix: change error message logic for implicit file ignore (fixes #12873) (#12878)	True	
fix: no-useless-computed-key invalid autofix for getters and setters (#8335)previously, the no-useless-computed-key autofixer could sometimes place a key next to `get`, `set`, or `async` identifier in a property, causing the identifier and the key to combine and become a new identifier. this commit updates the autofixer to insert a space whenever that would happen to prevent the identifiers from combining.	True	
upgrade: espree to 2.0.1	True	
0.7.2	False	
chore: add temporary test files to .gitignore (#11978)	True	
update: key-spacing loc changes for extra space (refs #12334) (#13362)* update: key-spacing loc changes for extra (refs #12334)* chore: fixed typo in variable name.co-authored-by: kai cataldo <kai@kaicataldo.com>co-authored-by: kai cataldo <kai@kaicataldo.com>	True	
fix: func-names with es6 classes (fixes #2103)	False	
fix: no-undef to work with arrow functions (fixes #1604)	True	
rule: wrap-iife	False	
new: visual studio compatible formatter (fixes #4708)	True	
fix: column number for no-multiple-empty-lines (fixes #7086) (#7088)	True	
0.0.5	False	
docs: update no-undef-init docs (fixes #3170)	False	
docs: update ecmascript versions in faq (#10047)	False	
sponsors: sync readme with website	True	
breaking: use strict equality in ruletester comparisons (fixes #9417) (#10008)	True	
new: add predefined meteor globals (fixes #1763)	False	
new: `constructor-super` rule (fixes #2720)	True	
rule: no-empty-classthe `no-empty-class` rule disallows the use of empty character classes in regular expression literals:var foo = /^abc[]/;it does not disallow empty character classes in the `regexp` constructor:var foo = new regexp("^abc[]");this rule matches the jslint rule: http://jslinterrors.com/empty-class/	True	
docs: include note on fatal: true in the node.js api section (#7376)	False	
upgrade: update globals dependency to 9.14.0 (#7683)	True	
docs: fix message for `inline-config` option	True	
5.3.0	False	
4.17.0	False	
new: `no-global-assign` rule (fixes #6586) (#6746)	False	
fix: no-extra-boolean-cast reports wrong negation node (fixes #11324) (#12197)	False	
0.19.0	False	
chore: enable eslint-plugin/no-deprecated-context-methods (#9279)	False	
update: add ignore option to space-before-function-parens (fixes #4127)this allows a configuration where you can enforcespace-before-function for named functions, say, while lettinganonymous functions use spaces or not, without error either way.without this change, enabling this rule for one or the other ofnamed/anonymous, but not both, was impossible.fixes #4127	True	
build: enable default-case rule (fixes #881)	False	
upgrade: babel-code-frame to version 7 (#10808)	True	
docs: fix typo in readme.md (#15168)	False	
update: valid-jsdoc to not require @return in constructors (fixes #4976)	True	
update: `commentpattern` option for `default-case` rule (fixes #5803)	True	
upgrade: updat espree to 1.3.1	True	
new: no-useless-catch rule (fixes #11174) (#11198)moves no-useless-catch from an internal rule to a core rule. adds docsand test cases.	True	
build: add coveralls integration (fixes #1411)	False	
docs: correct getformatter() documentation (refs #1723)	True	
update: relax outeriifebody definition (fixes #6613) (#6653)	False	
docs: simplify hierarchy of headings in rule pages	False	
update: avoid creating extra whitespace in `arrow-body-style` fixer (#7504)* update: avoid creating gratuitous whitespace in `arrow-body-style` fixer* add testcases for multiline return values	True	
documentation updates	False	
fix: do not throw exception if baseconfig is provided (fixes #6605) (#6625)	False	
chore: mark config-related files (refs #13481) (#13597)* chore: mark config-related files (refs #13481)* fix lint errors* fix more linting errors	False	
updated travis badge for new location	True	
chore: merge all html formatter files into `html.js` (#14612)	True	
breaking: drop node.js 8 support (refs eslint/rfcs#44) (#12700)	False	
docs: replace to npmjs.comnpmjs.org has been moved to npmjs.com now.	True	
docs: add reference to cla	True	
docs: english fix (#12306)	False	
docs: fix typos (#13730)	False	
docs: fix json schema example dead link (#11498)	True	
fix: remove custom plugins from replacedby metadata (#13274)	True	
build: changelog update for 7.25.0	True	
docs: edit examples for a few rules	True	
fixing eslint errors in codebase	False	
build: ensure that all files are linted on bash (fixes #7426) (#7427)	False	
add build next mention in integrations readme.	False	
fix: rule no-duplicate-case problem with memberexpressions. (fixes #2038)	False	
fix: check comments in space-in-parens (fixes #4302)	False	
rule to add no-fall-through	True	
new: add no-misleading-character-class (fixes #10049) (#10511)	False	
fix: duplicate semi and no-extra-semi errors (fixes #2207)	False	
chore: fix rule meta description inconsistencies (refs #5417) (#6422)	False	
new: additional apis (fixes #6256) (#7669)* new: additional apis (fixes #6256)* fix unit test	False	
chore: added tests for nested arrays (#13145)	True	
update: rename and deprecate object-property-newline option (#9570)object option allowmultiplepropertiesperline is stricter than the name implies.it creates an exception to object-property-newline only if all properties areon a single line. renamed accordingly. old name left deprecated, and 2 tests withdeprecated name (1 valid and 1 invalid) left in force.	True	
build: package.json and changelog update for 3.14.0	True	
docs: update readme team and sponsors	True	
chore: add tests for `generator-star-spacing` and async (refs #7101) (#7182)	True	
new: gen-star rule (refs #1617)	False	
rule: no-else-returnthe `no-else-return` rule will warn when it encouters an `else` block following an `if` block which contains a return statement, as that `else` block is unnecessary and its contents could be placed outside of the `else` block.function foo() {if (x) {return y;} else {return z;}}this rule matches the same rule from jslint: http://jslinterrors.com/unexpected-else-after-return/	False	
chore: add test for merging `parseroptions` in linter (#14948)	True	
fix: no-extra-strict behavior for named function expressions (fixes #1209)	True	
added mocha conversion tests for strict, quote-props and one-var; enhanced one of the invalid one-var tests that was expecting two messages	True	
breaking: stricter rule config validating (fixes #9505) (#11742)* breaking: stricter rule config validating (fixes #9505)to fix issue #9505, it made a refactor and introduced a few changes to make validating more consistent:* will report a linting error when enable/disable a non-existent in inline comment.* will throw an error, if config a non-existent rule to non-zero value.* fixes problem loc in some cases* update linter.js* update linter.js	True	
docs: updated contribution guidelines to add accepted/bounty issues descriptions	True	
sponsors: sync readme with website	True	
update: yoda onlyequality option (fixes #2638)	False	
build: changelog update for 4.7.0	True	
ensure non-zero exit code when rules are found with errors	False	
fix: handle forbidden lineterminators in no-extra-parens (fixes #4229)previously, this rule would warn about excess parentheses even when theywere syntactically significant and removing them would alter the meaningof a program. there are three applicable productions in the grammar withthe restriction `[no lineterminator here]`:```returnstatement[yield]:return [no lineterminator here] expression;return [no lineterminator here] expression[in, ?yield];throwstatement[yield]:throw [no lineterminator here] expression[in, ?yield];yieldexpression[in]:yield [no lineterminator here] * assignmentexpression[?in, yield]yield [no lineterminator here] assignmentexpression[?in, yield]```if the expression following a `return`, `throw`, or `yield` is on a newline, it must be wrapped in parentheses, and this rule should not warn.it should, however, still check for double parentheses, since the secondset would be unnecessary.thanks to @michaelficarra for pasting the relevant portions of the spec.	True	
fix: add source property for fatal errors (fixes #3325)	True	
docs: describe options in rule under strict mode (#6312)	False	
update config with new rules	False	
docs: fix typo in changelog	False	
update: max-len will warn indented comment lines (fixes #6322) (#6324)	False	
docs: add example .eslintrc.json (#15087)* docs: add example .eslintrc.jsonthis adds a `.eslintrc.json` that shows how to set rules config (amongothers).* update docs/user-guide/configuring/configuration-files.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* update docs/user-guide/configuring/configuration-files.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* update docs/user-guide/configuring/configuration-files.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>co-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>	True	
update: make isspacebetweentokens() ignore newline in comments (#12407)	True	
fixing validation issues to tap formatter	True	
docs: update changelog for 0.24.1 (fixes #2976)	True	
chore: remove misleading comment.??? (#10190)???we don't have plans to add no-return-await to recommended, according to https://github.com/eslint/eslint/issues/8865	True	
fixed linting error	False	
fix: object-shorthand autofix produces errors on parenthesized functions (#8328)the object-shorthand autofixer would previously produce invalid syntax when replacing a parenthesized function property with a method. this commit updates the fixer to replace the function text, excluding any closing parens that might appear after it.	True	
fix: no-unused-vars for jsx (fixes #1673 and fixes #1534)	True	
docs: fix examples for prefer-numeric-literals (#9155)* wrong parseint resultnumber.parseint("1f7", 16) -> 503* fix second documentation error	True	
chore: remove unused assignment. (#9182)	False	
fix: prefer-const produces invalid autofix (fixes #11699) (#11827)	True	
fix: make sure semi flags return statements without a semicolon (fixes #616)	False	
update: no-unused-vars improve message to include the allowed patterns (#9176)	True	
update: fix no-dupe-keys false negatives on empty string names (#12069)	False	
chore: avoid using internal linter apis in ruletester (refs #9161) (#9172)this updates `ruletester` to use the public `linter#definerule` api rather than the private `linter#on` api.	True	
feat: fix bug with arrow function return types in function-paren-newline (#15541)fixes #15091	False	
update readme.md	False	
new: `require-jsdoc` rule (fixes #1842)	False	
docs: distinguish examples in rules under stylistic issues part 7 (#6760)	False	
build: changelog update for 4.15.0	True	
0.17.1	False	
docs: fix links in array-callback-return (#12288)* docs: fix links in array-callback-return* remove extra space	False	
build: relax markdownlint rules by disabling style-only items	False	
sponsors: sync readme with website	True	
docs: fix `no-sequences` example (#14643)	False	
chore: update issue templates (#10900)* add emoji to issue template selection screen for easier scanning.* add security issue template directing people to hackerone* add question issue template directing people to mailing list andchatroom	True	
chore: remove concat-stream dependency (#10173)we use the `concat-stream` module to get source text from stdin when the `--stdin` flag is used. however, getting text from stdin is a one-liner without `concat-stream`, so it's not necessary to keep it as a dependency.	True	
update: give a node at least the indentation of its parent (fixes #9995) (#10054)this updates the `indent` rule to ensure that the tokens in a non-ignored node are always indented at least as much as the first token of the node. this fixes an issue where some tokens would not have enough indentation if their node's listener did not explicitly give them an offset.	True	
docs: sync messageid examples' style with other examples (#9816)	False	
build: changelog update for 7.0.0-alpha.2	True	
chore: remove currentfilename prop from linter instances (refs #9161) (#9219)	False	
docs: clarify remedy to some prefer-const errorssee https://github.com/eslint/eslint/commit/37e09d96ada4b19eadc464644b8e818a00e3979d#commitcomment-15180158	True	
4.7.1	False	
update: add exception options to space-in-parens (fixes #1368)	True	
fix: operator-assignment autofix errors with parentheses (fixes #8293) (#8294)	True	
fix: removed false positives of break and continue (fixes #5972) (#6000)	False	
update: add fixer for `no-undef-init` (#7210)	True	
sponsors: sync readme with website	True	
new: the `no-useless-call` rule (fixes #1925)and i fixed the `prefer-spread` rule to avoid collision with this.	True	
docs: add a better vim linting engine (#10292)	False	
build: change rules to warnings in perf test (fixes #5330)	True	
fix: `func-style` had been warning arrows with `this` (fixes #3819)i made the `func-style` rule ignoring arrow functions which have`thisexpression` even if it's `declaration` mode.incidentally, i replaced `context.getancestors().pop()` with`node.parent`.	True	
fix: `constructor-super` and `no-this-before-super` false (fixes #5261)consideration of loops in those rules has been lacking.i added a method which traverses every segment in a code path(`codepath.traversesegments(options, callback)`) into codepathprototype. those rules come to handle loops by using this method.handling loops of a code path is complex :(i'd like to investigate more simple way in future.note: other rules which are using code path (`no-fallthrough`,`no-unreachable`, and `consistent-return`) are not related to this bug.these are checking whether some statements are reachable or not.reachability is calculated correctly.	True	
fix: ensure ./ works correctly with cli (fixes #3792)	False	
new: semi-style rule (fixes #8169) (#8542)* new: semi-style rule (fixes #8169)* fix header comment* docs: fix document* docs: fix error messages* fix for parenthesized `node.init`/`node.test`* fix for do-while statements* simplify options and update readme.md	True	
upgrade: eslint-release@1.0.0 (refs #10631) (#10991)this upgrades `eslint-release` to 1.0.0. the new version of `eslint-release` has a separate "generate" and "publish" phase, to allow for a 2fa code to be supplied in between. as a side-effect, it's now possible to manually test most aspects of the release process (by running `npm run generate-release`) without actually publishing a release somewhere. in lieu of unit tests, this should make it easier to test changes to the release process, like this one.	True	
update: support single argument on newline with function-paren-newline (#11406)	False	
fix: add missing loop scopes to one-var (fixes #3073)	True	
docs: fix wrong path (#6763)	False	
docs: add `quotes` to related section of `prefer-template` (fixes #5192)	True	
fix: should not convert non-consecutive line comments to a single blo??? (#9475)* fix: not convert non-consecutive line comments to block(fixes #9462)* add test & opt.	True	
breaking: disallow scoped plugin references without scope (fixes #6362) (#8233)	False	
fix: always-multiline for comma-dangle import (fixes #4704)	True	
docs: add link to "proposing a rule change" in readme	True	
update: `allowarrowfunctions` option for `func-style` rule (fixes #1897)	True	
build: changelog update for 8.10.0	True	
fix: object-shorthand's consistent-as-needed option (issue #7214) (#7215)* fix: object-shorthand's consistent-as-needed option (issue #7214)* revise isredundant and add more specs* trigger cla agreement check again (empty commit)* fix typo	False	
chore: remove unused arguments in codebase (#9340)	False	
update: add fixer for `curly` (#7105)	True	
fix: consistent-return shouldn't report class constructors (fixes #7790) (#7797)	True	
docs: fix broken code fences in key-spacing docs	False	
fix: no-extra-parens export default sequence expression false positive (#13096)	False	
fix: no-constant-condition false positives with unary expressions (#13927)	False	
new: add --quiet option (fixes #905)	False	
sponsors: sync readme with website	True	
update: don't indent leading semi in line after import (fixes #11082) (#11085)	False	
new: enable `-c` flag to accept a shareable config (fixes #2543)for example, if `eslint-config-foo` is installed to the project???snode_modules directory, eslint cli can load it with the followingcommand:eslint -c foo .	True	
fixes #308: implement no-unused-expressions rule; ref. jshint rule w030	False	
fix: invalidate cache when config changes. (fixes #3770)	False	
new: add no-inline-comment rule (fixes #1366)	False	
breaking: remove meta.docs.category in core rules (fixes #13398) (#14594)* breaking: remove category in core rules (fixes #13398)chore: rm meta.cat from core ruleschore: do not require meta.cat in internal ruleschore: rename cat => ruletypechore: rename conf/category-list.json => rule-type-list.jsonchore: update tools/update-rule-typeschore: review suggestionsupdate conf/rule-type-list.jsonco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>update makefile.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* chore: remove unused files* fix: conflicts* remove missingmetadocsdescription messageco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: bryan mishkin <698306+bmish@users.noreply.github.com>	True	
docs: correct explanation about properties	False	
new: `array-callback-return` rule (fixes #1128)	False	
docs: clarify package.json requirement in getting started (refs #13549) (#13696)* docs: clarify package.json requirement in getting started (refs #13549)* update docs/user-guide/getting-started.md	True	
fix object-shorthand arrow functions (fixes #2414)	False	
fix: lines-around-comment with multiple comments (fixes #3509)	False	
chore: add aladdin-add & victorhom to readme (#9424)	True	
update: 'requireforblockbody' modifier for 'arrow-parens' (fixes #6557) (#6558)	True	
fix: prefer-template autofix produces syntax error with octal escapes (#12085)	True	
rule: constructor should use parentheses	True	
7.4.0	False	
new: add grouped-accessor-pairs rule (fixes #12277) (#12331)* new: add grouped-accessor-pairs rule (fixes #12277)* update docs/rules/grouped-accessor-pairs.mdco-authored-by: jordan harband <ljharb@gmail.com>* fix jsdoc* add related rules	True	
fix: object-curly-spacing doesn't know types (fixes #5537) (fixes #5538)`object-curly-spacing` was blindly checking the penultimate token for`objectsinobjects` and `arraysinobjects` options and it was confusingcomputed member expressions and function expressions with array andobject expressions respectively. this patch adds a type check for thepenultimate tokens owner node.	True	
update: add outeriifebody: "off" to indent rule (fixes #11377) (#12706)* update: add outeriifebody: "off" to indent rule (fixes #11377)* fix typo	True	
chore: remove unnecessary eslint-disable comments in codebase (#9032)	False	
fix: `eslint.verify` should not mutate config argument (fixes #8329) (#8334)	False	
docs: add an incorrect code example in for-direction (#15434)	True	
fix: change max-warnings type to int (fixes #4660)updated optionator to version 0.8.0changed the type of the --max-warnings flag from 'number' to 'int'an error will now be displayed if a non-integer value is supplied	True	
fix: one-var allows uninitialized vars in forin/forof (fixes #5744) (#6272)	True	
docs: clears confusion on usage of global and local plugins.(#9492)	False	
rule: no-sequences (fixes #561)adds a new rule, `no-sequences`, that disallows use of the commaoperator, except in the initialization or update portions of forloops or when wrapped in parens.	True	
fix: prefer-destructuring invalid autofix with comma operator (#13761)	True	
build: package.json and changelog update for 2.10.2	True	
fixes #346: validate strings passed to the regexp constructor	True	
fix: do not output `undefined` as line and column when it's unavailable (#13519)	False	
docs: adding finally example (#12256)	False	
refactored `one-var` rule.the `one-var` rule now pushes to a function stack and keeps track of variable declarations for each node on the stack.	True	
chore: fix counting of files in performance test (#15190)	True	
sponsors: sync readme with website	True	
fix: inconsistent `indent` behavior on computed properties (fixes #8989) (#8999)	False	
chore: use consistent names for apply-disable-directives in tests (#9246)	True	
chore: fix wrong error object keys in test files (#12162)	False	
docs: fix typos for max-statements	True	
chore: enable max-len. (#9414)* chore: enable max-len.* chore: fix linting errors(max-len).	False	
update: split propertyname from singlevalue in space-in-brackets (fixes #1253)	False	
6.2.0	False	
fix: collect variables declare in switch-case.(fixes #1453)	False	
docs: describe options in rules under possible errors part 4 (#6270)	False	
#586 add hoisting check to no-unreachable	True	
docs: autogenerated changelog for 2.1.0	True	
fix: function arguments now count towards no-shadow check (fixes #1584)	True	
updated docs for no-unused vars rule.	True	
docs: add missing 'to' in no-restricted-modules (#7022)	True	
fix: `radix` rule false positive at shadowed variables (fixes #5639)	False	
update: add extra aliases to consistent-this rule (fixes #4492)	True	
config: allow comments in json configuration files (fixes #492)	True	
fix: remove unused config file (fixes #2227)	False	
chore: unify checks for statement list parents (#8048)there are currently three types of nodes that can contain a list of statements:* `program`* `blockstatement`* `switchcase`several rules have to check for these node types, and sometimes they do it incorrectly (see https://github.com/eslint/eslint/issues/8047). this commit puts the node types in a constant in `ast-utils`.	True	
6.3.0	False	
docs: add absent quotes in rules documentation (#7625)	False	
feat: flat config support in linter (refs #13481) (#15185)* update: flat config support in linter (refs #13481)* update lib/linter/linter.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update lib/linter/linter.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* clean up flatconfigarray detection* add back flatconfigarray import* more flat config tests passing; originals failing* finish languageoptions features* make sure to recognize ruletester-wrapped espree* move globals into local file* normalize ecmaversion to year on context.languageoptions* clean up ecmaversion normalization* revert parseroptions.ecmaversion behavior to original* add more tests* update defaults for flat config (refs #14588)* more tests passing* fix wrong ecmaversion conversion* duplicated all tests for flatconfig* finish languageoptions tests* settings tests working* rule context tests working* options tests working* directives tests working* reportunuseddisabledirectives tests working* all original tests passing* add test to verify lazy loading of rules (fixes #14862)* fix failing tests* fix failing browser test* fix ecmaversion edge cases* switch globalreturn to false if sourcetype is module* update espree and eslint-scope to support sourcetype:commonjs* update lib/linter/linter.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update lib/linter/linter.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* fix processors functionality* update lib/shared/types.jsco-authored-by: brandon mills <btmills@users.noreply.github.com>* update tests/lib/linter/linter.jsco-authored-by: brandon mills <btmills@users.noreply.github.com>* update tests/lib/linter/linter.jsco-authored-by: brandon mills <btmills@users.noreply.github.com>* update lib/linter/linter.jsco-authored-by: brandon mills <btmills@users.noreply.github.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: brandon mills <btmills@users.noreply.github.com>	True	
fix: ???consistent-this??? incorrectly flagging destructuring of `this` (fixes #2633)	False	
rule no use before define	True	
fix: no-cond-assign should report assignment location (fixes #4040)	False	
fix: tests fail due to differences in temporary paths. (fixes #3778)	True	
store functiondeclarations in scope as they can be used as literals	True	
chore: add configuration wrapper markdown for the bug report template (#10669)	True	
chore: fix title of linter test suite (#8861)the `linter` test suite was still called "eslint" from when lib/linter.js was called lib/eslint.js. this renames the test suite to call it "linter" instead.	True	
fix: add --init to the cli options (fixes #2817)	True	
chore: make library files non-executable (#10021)	False	
docs: add @platinumazure to tsc (#9618)	True	
update: ensure `indent` handles nested functions correctly (fixes #7249) (#7265)	False	
build: add node.js 0.12 testing	False	
adds dot notation lint rule	False	
breaking: `indent` rule to have node specific options (fixes #3210)	True	
fix: don't modify operator precedence in operator-assignment autofixer (#8358)* fix: don't modify operator precedence in operator-assignment autofixerpreviously, the operator-assignment autofixer could sometimes modify semantics or produce a syntax error due to different operator precedence. this commit updates the fixer to surround the right side of an assignment with parentheses if it has lower precedence than its new neighbor.* add additional test	True	
update: no-useless-rename also reports default values (fixes #12301) (#12322)* update: no-useless-rename also reports default values (fixes #12301)* refactor	True	
docs: add v5.0.0 migration guide (fixes #10142) (#10147)	False	
sponsors: sync readme with website	True	
fix: avoid reporting the entire ast for missing rules (#8998)messages for missing rules are only intended to appear at the top of a file. however, the messages have always been implemented as `context.report` calls on the `program` node, and due to b0c63f0a928cceff7cf6f060262dd7ac4bc0f8dc, this results in the entire ast range being reported. this commit updates the missing-rule messages to report issues at the top of the file.	True	
upgrade: karma@^4.0.1, drops node 6 support, fixes vulnerability (#11570)	False	
4.16.0	False	
fix: ignore single lines for vertical alignment (fixes #2018)previously, if an `align` option was passed to key-spacing, the rulewould test alignment on any object with more than one property on a single line.the changes in this commit first check if an object is a single line,and if it is, only performs checks against `beforecolon` and `aftercolon` of the properties.	True	
fix jshint warnings	False	
docs: fix spelling mistakes (#12861)i searched for typos / spelling mistake using cspell. i manually fixed the obvious typos that were reported (and ignored thousands of other false positive matches).	True	
fix: semi error on export declaration (fixes #2194)	False	
fix: camelcase ignoreglobals shouldn't apply to undef vars (refs #14857) (#14966)	True	
revert "chore: remove devdependency common-tags (#11455)" (#11460)this reverts commit aaba636b008ab1377421b071963bc15c2ded7c11.	False	
docs: edit arrow-parens.md to show correct output value (#6245)	True	
update: improve indent of `flatternaryexpressions` (fixes #8481) (#8587)* fix: improve indent of `flatternaryexpressions` (fixes #8481)* fix more	False	
docs: describe how to use formatters on the formatter demo page (#8754)	True	
0.21.1	False	
version 0.1.0	False	
fix: don't explode on directory traversal (fixes #1452)	True	
new rule: no-process-exit (fixes #568)	False	
update: support numeric-separator in no-loss-of-precision (refs #13568) (#13574)* update: support numeric-separator in no-loss-of-precision (refs #13568)* chore: changed the function jsdocs description* chore: removed extra getraw calls* chore: update lib/rules/no-loss-of-precision.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
feat: add `onlyonesimpleparam` option to no-confusing-arrow rule (#15566)* feat: add  option to no-confusing-arrow rule* follow up commit* another follow up commit* another follow up commit* another commit* another followup commit* final commit	True	
sponsors: sync readme with website	True	
update: greatly simplify eqeqeq's operator finding logic (fixes #1037)	True	
bump code coverage checks	False	
increased test coverage for `lib/rules.js`created a test case that increased the test coverage of `lib/rules.js` to 100%.	True	
upgrade: strip-json-comments ~v2.0.1	True	
update: add test for no-undef (fixes #2214)	True	
update: improve report location for no-mixed-operators (#12328)	True	
build: copy bundled espree to website directory (#11478)	True	
fix: check that module.paths exists (fixes #5791)	False	
fix: remove tests which have invalid syntax (fixes #5405)espree v3.1.0 came to raise a syntax error correctly at `yield` keywordinside of arrow functions.	True	
feat: update espree and eslint-scope (#15338)these releases include support for es2022 class static blocks and`sourcetype: "commonjs"`.	True	
add editorconfig file for consistent editor/ide behavior	True	
update: add support for parens on left side for-loops (fixes: #8393) (#8679)	True	
chore: remove tdz scope type condition from no-unused-vars (#12055)	False	
chore: regex.test => string.startswith (#9518)	False	
docs: typo (#6650)	False	
fix: allow block bindings in no-inner-declarations (fixes #1893)	False	
docs: add space-in-brackets deprecation notice	False	
replace tab indents with 4 spaces in lib/rules/handle-callback-err.js	False	
added .jshintrc file (until eslint can lint itself) and cleaned up jshint warnings	False	
feat: update the indent rule for class static blocks (#15324)updates the `indent` rule to apply to class static blocks.adds `staticblock.body` option that enforces indentation level for the body of a class static block.refs #15016	True	
update: handle parentheses in multiline-ternary (fixes #13195) (#13367)	False	
chore: enable reportunuseddisabledirectives in eslint-config-eslint (#14699)* chore: enable reportunuseddisabledirectives in eslint-config-eslintit can be applied to all eslint repos* update makefile.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
feat: support arbitrary module namespace names in the quotes rule (#15479)refs #15465	False	
chore: fix outdated link to code of conduct in pr template (#15578)	True	
added "stroustrup" option for brace-stylethe `brace-style` rule now takes one option, which can be either"1tbs" or "stroustrup". the only difference between the two is that"stroustrup" requires `else`, `catch`, and `finally` to be on a newline after the closing curly brace:// 1tbsif (foo) {} else {}// stroustrupif (foo) {}else {}in addition, i've set the `.eslintrc` for eslint to explicitly use the"1tbs" option.fixes #645fixes #644	True	
docs: add migration guide (#12692)* docs: add draft of migration guide* update migration guide* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* remove `$ eslint src` block* replace 7 and 7.0.0 by v7.0.0* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kevin partington <platinum.azure@kernelpanicstudios.com>* update docs/user-guide/migrating-to-7.0.0.mdco-authored-by: kevin partington <platinum.azure@kernelpanicstudios.com>* fix feature list* fix "may has"* fix "use directive comments to..."* add "surrounded by whitespace"co-authored-by: kai cataldo <kai@kaicataldo.com>co-authored-by: kevin partington <platinum.azure@kernelpanicstudios.com>	True	
fix: handles blocks in no-use-before-define (fixes #2960)changes no-use-before-define to look in every block scope whenblock bindings are being used. the `getscope` method is alsoupdated to retrieve the correct scope in that situation.	True	
fix: `indent` to not error on same line nodes (fixes #3228)	True	
update: `prefer-const` begins to cover separating init (fixes #4474)	True	
feat: support arbitrary module namespace names in the camelcase rule (#15490)refs #15465	False	
sponsors: sync readme with website	True	
fix: prevent space-before-function-paren from checking type annotations (#8349)* fix: prevent space-before-function-paren from checking type annotationspreviously, the space-before-function-paren rule's listener would be triggered for custom nodes such as `functiontypeannotation`, and would throw an error. this broke the regression build. this commit updates the rule to only listen for known function nodes.* move parser fixture to babel-eslint7/	True	
sponsors: sync readme with website	True	
docs: describe range in rule docs (fixes #14162) (#15174)	False	
upgrade: espree to 3.2.0, remove tests with syntaxerrors (fixes #7169) (#7170)	True	
docs: fix typo in working-with-rules.md	False	
new: add ispathignored method to cliengine (fixes #1392)	True	
docs: increase visibility of code of conduct (fixes #8758) (#8764)	False	
rule: max-len to lint maximum length of a line	True	
update: improve error message when extend config missing (fixes #6115) (#8100)	False	
fix: `prefer-const` false positive reading before writing (fixes #5074)	True	
fix: nonoctaldecimalintegerliteral is decimal integer (fixes #13588) (#13664)	False	
rule: wrap-regex for parens around regular expression literals	True	
chore: upgrade ajv@5.3.0 (#9557)	False	
update: improve report location for template-curly-spacing (#12813)	True	
sponsors: sync readme with website	True	
update: add fixer for `no-extra-boolean-cast` (#7387)	True	
chore: avoid code duplication in rule severity checking (#10358)	False	
docs: fix minor formatting/grammar errors (#12371)* docs: fix link to code conventions* docs: fix formattting* docs: fix formatting of example configall other example configs in the docs spaced curly braces in object literals, so this commit updates this for consistency.* docs: fixed grammar* docs: revert link to code conventionsthis reverts commit ab5dba7574ba6c5758274de2cb94c7c598f88033.* docs: revert link to code conventions* docs: revert link to code conventionssorry for all the commits.	True	
update: measure plugin loading time and output in debug message (#12395)	False	
fix: object-shorthand providing invalid fixes for typescript (#12260)* fix: object-shorthand providing invalid fixes for typescript* chore: refactor to not rely on async modifier check* chore: ensure return type isn't wiped for no arguments* chore: add ts code test to prevent regressions	True	
2.0.0-alpha-1	False	
build: update markdownlint dependency	False	
update: added arraysinobjects and objectsinobjects options to space-in-brackets rule (fixes #1265, fixes #1302)	True	
build: package.json and changelog update for 3.18.0	True	
chore: remove undocumented linter#getscope method (#9253)	False	
chore: upgrade to eslint-visitor-keys@3.2.0 (#15526)	True	
docs: linkify urls in development-environment.md (#6150)	False	
fix: padded-blocks incorrectly complained on comments (fixes #1416)this bug is fixed in espree 1.4.0. i???ve added some tests to ensure that therule works as expected.	True	
docs: add config information to readme (fixes #3074)	True	
5.0.0	False	
fix: make sure jsdoc parser accepts jsdoc3-style optional parameters	False	
chore: remove dead code for loading rules (#11334)the `lib/rules.js` file contains a code path that was previously needed to load core rules, but is no longer used as of aa56247746a0095996a41dd03bdbbf659f0f93b6.	True	
docs: achieve consistent order of h2 in rule pages	False	
chore: upgrade eslump to 3.0.0 (#14350)	True	
fix: allow line breaks in key-spacing rule (fixes #1407)	False	
breaking: implement eslint-env and remove jshint/jslint environment comment support (fixes #759)	False	
docs: fix typos (#9751)* docs: fix typos* s/regexp/regular expression/	False	
docs: clarified behavior of globalreturn option (fixes #8953) (#9058)	False	
update: rule camelcase to allow snake_case in object literals. (fixes #1919)	True	
docs: add new experimental syntax policy to readme (fixes #9804) (#10408)* docs: add new experimental syntax policy to readme (fixes #9804)see https://github.com/eslint/eslint/issues/9804#issuecomment-360810237.* docs: small tweak for friendliness* docs: clarified that no-crash prs will only be accepted for experimental features represented in estree	True	
docs: add new members of the team	False	
fix: ensure **/node_modules works in ignore files (fixes #3788)	False	
docs: update step 1 of development environment documentation	False	
chore: use ids for messages (#12859)* chore: refactor `sort-vars` to use messageids* chore: refactor `space-infix-ops` to use messageids* chore: refactor `space-before-function-paren` to use messageids* chore: refactor `space-before-blocks` to use messageids* chore: refactor `spaced-comment` to use messageids* chore: refactor `sort-keys` to use messageids* chore: refactor `sort-imports` to use messageids* chore: refactor `semi-style` to use messageids* chore: refactor `semi-spacing` to use messageids* chore: refactor `rest-spread-spacing` to use messageids* chore: refactor `require-yield` to use messageids* chore: refactor `require-jsdoc` to use messageids* chore: refactor `radix` to use messageids* chore: refactor `quote-props` to use messageids* chore: refactor `prefer-template` to use messageids* chore: refactor `prefer-spread` to use messageids* chore: refactor `prefer-rest-params` to use messageids* chore: refactor `prefer-reflect` to use messageids* chore: refactor `prefer-promise-reject-errors` to use messageids* chore: refactor `prefer-destructuring` to use messageids* chore: refactor `prefer-arrow-callback` to use messageids* chore: refactor `padding-line-between-statements` to use messageids* chore: refactor `padded-blocks` to use messageids* chore: refactor `operator-linebreak` to use messageids* chore: refactor `one-var` to use messageids* chore: refactor `one-var-declaration-per-line` to use messageids* chore: refactor `object-shorthand` to use messageids* chore: refactor `object-property-newline` to use messageids* chore: refactor `object-curly-spacing` to use messageids* chore: refactor `object-curly-newline` to use messageids* chore: refactor `nonblock-statement-body-position` to use messageids* chore: refactor `no-with` to use messageids* chore: refactor `no-whitespace-before-property` to use messageids* chore: refactor `no-warning-comments` to use messageids* chore: refactor `no-var` to use messageids* chore: refactor `no-useless-return` to use messageids* chore: refactor `no-useless-rename` to use messageids* chore: refactor `no-useless-concat` to use messageids* chore: refactor `no-useless-computed-key` to use messageids* chore: refactor `no-useless-catch` to use messageids* chore: refactor `no-useless-call` to use messageids* chore: refactor `no-unused-vars` to use messageids* chore: refactor `no-unused-expressions` to use messageids* chore: refactor `no-unsafe-finally` to use messageids* chore: refactor `no-unreachable` to use messageids* chore: refactor `no-unneeded-ternary` to use messageids* chore: refactor `no-unmodified-loop-condition` to use messageids* chore: refactor `no-underscore-dangle` to use messageids* chore: refactor `no-undefined` to use messageids* chore: refactor `no-undef-init` to use messageids* chore: refactor `no-trailing-spaces` to use messageids* chore: refactor `no-this-before-super` to use messageids* chore: refactor `no-sync` to use messageids* chore: refactor `no-ternary` to use messageids* chore: refactor `no-template-curly-in-string` to use messageids* chore: refactor `no-tabs` to use messageids* chore: refactor `no-sparse-arrays` to use messageids* chore: refactor `no-spaced-func` to use messageids* chore: refactor `no-shadow-restricted-names` to use messageids* chore: refactor `no-sequences` to use messageids* chore: refactor `no-self-compare` to use messageids* chore: refactor `no-self-assign` to use messageids* chore: refactor `no-script-url` to use messageids* chore: refactor `no-return-await` to use messageids* chore: refactor `no-return-assign` to use messageids* chore: refactor `no-restricted-properties` to use messageids* chore: refactor `no-restricted-modules` to use messageids* chore: refactor `no-regex-spaces` to use messageids* chore: refactor `no-prototype-builtins` to use messageids* chore: refactor `no-proto` to use messageids* chore: refactor `no-process-exit` to use messageids* chore: refactor `no-process-env` to use messageids* chore: refactor `no-restricted-syntax` to use messageids* chore: refactor `no-native-reassign` to use messageids* chore: refactor `no-negated-in-lhs` to use messageids* chore: refactor `no-invalid-regexp` to use messageids* chore: refactor some tests to use `messageid`s* chore: update `linter` tests to include `messageid`* chore: correct message for `space-before-blocks`* chore: use default values intead of `||`	True	
fix: space-in-brackets cannot read property 'range' (fixes #2392)	False	
add ignore comments in file (fixes #305)	False	
update: add no-sync option to allow at root level (fixes #7985) (#8859)	True	
upgrade: ignore to 3.1.2 (fixes #5979) (#5988)	True	
update contributing.md	False	
docs: fix some small errors in examples (#10194)* docs: fix example in shareable-config.md* docs: fix a small error* docs: fix a small error	True	
add more info for failure messages	True	
update: max-statements to report function name (refs #7260) (#7399)	True	
sponsors: sync readme with website	True	
fix: valid-jsdoc to work for object getters (fixes #2407)	True	
update: report global atomics calls in no-obj-calls (fixes #12234) (#12258)	True	
rule: no-sync to encourage async usage	True	
chore: add unit tests for overrides glob matching. (#9744)	True	
chore: refactor sourcecode#getjsdoccomment (#9403)	True	
new: `prefer-const` rule (fixes #2333)	False	
chore: add license report and scan status (#8503)	False	
docs: update ecmafeatures description	False	
update: add `endcolumn` to no-useless-escape (fixes #11629) (#11790)	True	
fix: enable globalreturn for node.js environment (fixes #1158)	True	
update: fix false negative of `no-extra-parens` (fixes #7122) (#7432)	False	
docs: fixing broken link in documentation	False	
fix: no-unused-var should respect compound assignments (fixes #1166)	False	
build: changelog update for 7.20.0	True	
#595 added more func-names tests	False	
add test coverage for additional cases, fix open paren at beginning of expr	True	
update: `no-use-before-define` checks invalid initializer (fixes #4280)	True	
chore: rm trailing space in docs (#15689)	False	
docs: update readme for legend describing rules iconsrefs #4355	True	
update: make `no-var` fixable (fixes #6639) (#6644)* update: make `no-var` fixable (fixes #6639)* fix: modify `no-var` not fixing `var` on a case chunk.* chore: add the notes of not-fixable cases.	False	
fix: no-mixed-spaces-and-tabs incorrectly flagging multiline comments (fixes #1055)	False	
fix: object shorthand rule incorrectly flagging getters/setters (fixes #2563)	False	
fix: `no-sequences` false negative at arrow expressions (fixes #6082) (#6083)	False	
sponsors: sync readme with website	True	
docs: clarify motivation for no-prototype-builtins (#11356)the first section in the no-prototype-builtins docs mentions objects created with object.create(null), but does not mention builtin shadowing (which is arguably a much more compelling reason to use the rule). this commit updates the description to clarify the risks of using prototype builtins on user input.	True	
chore: upgrade deps. (#8684)	False	
docs: add missing `variable#scope` property in the scope manager docs (#15571)	False	
docs: clarify `linebreak-style` docs (fixes #5628)	False	
fix: comma-spacing has false positives when parenthesis are used (fixes #1457)	False	
docs: added recursive function example to no-unused-vars	True	
fix: block-scoped-var respects decls in for and for-in (fixes #919)	True	
fix: fix wrong code-path about try-for-in (fixes #8848) (#9348)	True	
docs: clarify minor releases and suggest using `~ to version (#6804)* docs: suggest using `~` to version (refs #6795)* fixes	True	
take care of unreachable code in case statement	False	
docs: `--no-ignore` disables all forms of ignore (fixes #6260) (#6304)	True	
fix: key-spacing checks objectexpression is multiline (fixes #5479)	False	
sponsors: sync readme with website	True	
build: add appveyor ci (fixes #4894)	False	
docs: provide more context to no-eq-null (#14801)* docs: provide more context to no-eq-null* encourage use of the more powerfuleqeqeq rule for linting equality checks.* indicate this rule is compatible withan analogous rule in jshint.xref https://github.com/eslint/eslint/pull/179closes https://github.com/eslint/eslint/issues/14749* update docs/rules/no-eq-null.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>co-authored-by: brandon mills <btmills@users.noreply.github.com>	True	
build: changelog update for 5.11.1	True	
docs: add destructuring examples for `computed-property-spacing` (#15423)* docs: add destructuring examples for `computed-property-spacing`* docs: suggestions from code reviewco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
new: add rule for multiple empty lines (fixes #1254)	True	
update: create linter.version api (fixes #9271) (#11010)	False	
fixing jshint error	False	
fix: make no-inner-declarations look for arrow functions (fixes #1892)	True	
new: `prefer-numeric-literals` rule (fixes #6068) (#7029)	False	
docs: update scopemanager with class fields (#14974)	False	
build: changelog update for 6.0.1	True	
fix: check node exists before checking type (fixes #4231)	True	
update: implement outeriifebody for indent rule (fixes #6259) (#6382)* update: implement indentouteriife option for indent rule (fixes #6259)* switch to using numeric argument* rename to outeriifebody* add invalid test cases for outeriifebody* rename a helper function for consistency	True	
fix: comma-spacing should ignore jsx text (fixes #1916)	False	
new: `jsx-quotes` rule (fixes #2011)	False	
perf: fix lazy loading of core rules (#15606)* perf: fix lazy loading of core rules* add test	False	
update: ignore jsdoc comments by default for `spaced-comment` (fixes #2766)	True	
update: false positives in function-call-argument-newline (fixes #12123) (#12280)* fix: false positives on newlines in object/array args (fixes #12123)* update: additional tests for multi-line template string	True	
chore: add test cases for for-direction (#12698)	True	
fix: allow plugins to be namespaced (fixes #2360)	True	
fix: enable `@scope/plugin/ruleid`-style specifier (refs #6362) (#6939)	False	
docs: fix jsdoc param names to match function param names	True	
create camelcase.md	False	
chore: upgrade espree to 9.3.0 (#15473)	True	
docs: improve documentation for indent rule (#14168)* docs: improve documentation for indent regarding ignorednodes* docs: add ast node description at the end of long description* add blank line* add deleted sentence again to ignorednodes* move long description of indent to match short description pos	True	
0.0.2-2	False	
chore: correct fileoverview doc in accessor-pairs (#13335)* chore: correct fileoverview doc in accessor-pairs* match with rule meta	True	
breaking: deprecate `no-arrow-condition` rule (fixes #4417)	False	
docs: fix typo in wrap-iife rule doc title	False	
docs: update developer guide with new standards	False	
build: changelog update for 5.0.0-rc.0	True	
upgrade: `doctrine` to 0.7.0 (fixes #3891)	True	
docs: fix lodash typos, make spacing consistent (#10073)	False	
added documentation for `dot-notation` rule	True	
docs: the strict rule does not apply to class static blocks (#15314)documents that class static blocks do not have directives, and therefore the `strict` rule does not apply to them.also adds tests to confirm this behavior.refs #15016	True	
docs: add prefer-destructuring variable reassignment example (#9873)* reassignement of variableadd example with a reassignment.* docs: add example with object reassignement* docs: reassignement of variable #9873adding a line break before changes	True	
build: changelog update for 4.13.1	True	
fix: add warnignored flag to cliengine.executeontext (fixes #6302) (#6305)	True	
chore: remove extraneous linter properties (refs #9161) (#9267)this removes the undocumented `traverser`, `scopemanager`, and `currentconfig` properties from `linter` instances.	False	
docs: change 'and' to 'an' in docs/rules/valid-jsdoc.md (fixes #1441)	True	
chore: refactor `no-multiple-empty-lines` (#7314)	True	
feat: allow to define `eslint-disable-next-line` in multiple lines (#15436)* feat: `eslint-disable-next-line` directive with multiple lines* test: add cases for multiline `disable-next-line` directives* test: add more cases* fix: correct reporting location for unused disable directives* docs: add examples for multiline eslint-disable-next-line directive* fix: logic* refactor: code* refactor: rename `position` to `unprocesseddirective`	True	
chore: add rel/abs path tests in `no-restricted-{imports/modules}` rules (#14910)	False	
fix: no-unused-expressions better directive detection (fixes #1195)	False	
3.6.1	False	
update: improve validation error messages (fixes #3193)	False	
build: package.json and changelog update for 3.6.1	True	
docs: remove extraneous dash (#14164)	False	
chore: markdownlint autofix on commit (#15783)	True	
new: add prefer-regex-literals rule (fixes #12238) (#12254)* new: add prefer-regex-literals rule (fixes #12238)* update docs/rules/prefer-regex-literals.mdco-authored-by: kevin partington <platinum.azure@kernelpanicstudios.com>* update docs/rules/prefer-regex-literals.mdco-authored-by: kevin partington <platinum.azure@kernelpanicstudios.com>* pass ecmaversion to ruletester constructor* check global string reference	True	
update: support generator yields in no constant condition (#8762)* update: support generators in no constant condition (fixes #8566)* handle yield in init of forloops* revert "update: support generators in no constant condition (fixes #8566)"this reverts commit 7bcd3cc331e4383820d88d5f88617b30c9776f1b.* fix errors* remove parser options since included in ruletester* handle more init checks in forloop* update test cases* remove unused fxn	True	
fix: fix the fixer of lone comma with comments (fixes #10632) (#11154)	False	
0.16.1	False	
docs: some typos and grammar.	True	
docs: add description of no-sync `allowatrootlevel` option (fixes #8902) (#8906)	False	
docs: improve examples for no-case-declarations (fixes #6716) (#7920)	True	
update: add enforceinmethodnames to no-underscore-dangle (fixes #7065) (#7234)when enforceinmethodnames is true, the rule checks for danglingunderscores in method names too. this includes methods of classesand method properties of objects.the option is false by default.	True	
3.16.0	False	
fixed bug where jshint was using the wrong file in lint task	False	
update: `no-restricted-{imports,modules}`: add ???patterns??? (fixes #6963) (#7433)	False	
chore: always normalize rules to new api in rules.js (#9236)	True	
update: adds an avoidquotes option for object-shorthand (fixes #3366) (#5870)	True	
breaking: remove implied eval check from no-eval (fixes #1202)	False	
chore: fix incorrect comment about linter.verify return value (#10030)	False	
fix: rename "airbnb" => "airbnb" init choice (fixes #6969)this renames the config initializer choice name from `airbnb` to the preferred spelling of `airbnb`	True	
chore: adopt `eslint-plugin/prefer-message-ids` rule internally (#14841)* chore: adopt `eslint-plugin/prefer-message-ids` rule internallyhttps://github.com/not-an-aardvark/eslint-plugin-eslint-plugin/blob/master/docs/rules/prefer-message-ids.md* bump eslint-plugin-eslint-plugin version to 3.5.1* fix lint violation* bump eslint-plugin-eslint-plugin to 3.5.2* bump eslint-plugin-eslint-plugin to 3.5.3	True	
fix: no-multi-spaces false positive with irregular indent whitespace (#8412)the no-multi-spaces rule is not intended to check whitespace at the beginning of a line, because consecutive spaces are often used for indentation. due to a bug, the rule previously matched against consecutive spaces that appeared after an irreglar whitespace character at the beginning of a line. the rule's autofixer assumes that the detected spaces are always between two tokens on the *same* line, so it would sometimes produce invalid syntax if the rule matched whitespace at the *beginning* of a line. this commit updates the rule to avoid matching whitespace at the beginning of a line.	True	
fix minor bug in no-empty rule	False	
update: remove prefer-spread autofix (fixes #11330) (#11365)	True	
fix: keep indentation when fixing `padded-blocks` "never" (fixes #6454) (#6456)	False	
fix: corrected notice for invalid (:) plugin names (#13473)* fix: added more specific notice for invalid (:) plugin names* pr feedback: better .txt; throwing immediately* typo in lib/cli-engine/config-array-factory.js* improve plugin-invalid.txt* apply suggestions from code reviewco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* test name improvementco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
add some docs	True	
fix: except object literal methods from func-names (fixes #1699)	False	
1.0.0	False	
upgrade: @eslint/eslintrc to 0.4.0 (#14147)	True	
new: add ignorecase option to sort-vars (fixes #1272)	True	
svg badges	False	
fix: add space between async and param on fix (fixes #8682) (#8693)	False	
added junit support (fixes #16)	False	
update: emit a warning for ecmafeatures rather than throwing an error (#8974)(refs https://github.com/eslint/tsc-meetings/issues/51#issuecomment-315669556)starting in 4.0.0, eslint has been throwing a fatal error when encountering unexpected config file properties, including `ecmafeatures`. however, many old configs still have the top-level `ecmafeatures` option, which has had no effect since eslint 1.x. this commit updates eslint to emit a warning when it encounters a config with `ecmafeatures`, rather than throwing an error.	True	
sponsors: sync readme with website	True	
docs: fix vars-on-top documentation (fixes #1234)	True	
update: add linebreak style option to eol-last (fixes #4148)	True	
update: fix accessor-pairs to enforce pairs per property in literals (#12062)* update: fix accessor-pairs to enforce pairs per property in literals* use getfunctionnamewithkind and getfunctionheadloc, fix tests* add known limitations section in documentation	True	
converting unittests to mocha	True	
new rule: no-yoda (fixes #504)	False	
new: add no-unused-private-class-members rule (fixes #14859) (#14895)* new: report unused private class members (fixes #14859)for any private class property or method, report those that areunused. since private class members can only be accessed in thesame class body, we can safely assume that all usages are processedwhen we leave the classbody scope.* handle all edge cases per feedbackalso remove the rule from recommended for now, as that is a breakingchange.* remove duplication in assignment checking* optimize check for property deletionthis also removes the usage of optional chaining, which isn'tsupported yet on node environments that eslint supports.* use more descriptive names* handle more edge cases* apply suggestions from code reviewco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update lib/rules/no-unused-private-class-members.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update no-unused-private-class-members.js* fix accessor handlingco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
sponsors: sync readme with website	True	
build: changelog update for 5.1.0	True	
update: reporting loc for `never` option in `eol-last` (refs #12334) (#14840)* chore: assertions on reporting loc in `eol-last` (refs #12334)* update: improve end report location for `never` option in eol-last	True	
fix: ignore trailing whitespace in template literal (fixes #5786)	False	
chore: avoid using legacy report api in no-irregular-whitespace (#11013)this updates the no-irregular-whitespace rule to avoid using the legacy multi-argument `context.report` api. we have a linting rule to enforce against using the api, but the rule wasn't enforcing it in this case.this was originally found by aladdin-add in https://github.com/not-an-aardvark/eslint-plugin-eslint-plugin/issues/64.	True	
build: package.json and changelog update for 3.8.1	True	
chore: fix test that fails when the cwd contains a space (#11612)	False	
docs: add jsdoc `type` annotation to sample rule (#15085)	True	
fix: semi-style only check for comments when tokens exist (fixes #8696) (#8697)	True	
fix: do not swallow exceptions in cliengine.getformatter (fixes #5977) (#5978)* fix: do not swallow exceptions (fixes #5977)if a formatter is broken, the exception telling you that it wasbroken would be swallowed by the catch block, and the errorreporting would tell you that it could not find the formatter.i discovered a bug in npm3 (that i haven't reported yet) which tooklonger to find than it should, because i was running in circlesto try and figure out why it couldn't find the formatter.this fix means that any exception, that is not a result of theformatter module not being found, will be re-thrown.* fix up unrelated test* rethrow all errors with new message* use assert.throws* try/catch around getformatter now as it will throw on invalid formatter names	True	
rule no redeclare	False	
fix: use the correct location for `comma-dangle` errors (fixes #7291) (#7292)	True	
docs: update working-with-parsers link (#10929)the file seems to have been renamed so updating the link too.	True	
7.0.0	False	
docs: update ecmaversion to include 2019/10 values (#11059)	True	
docs: mark no-useless-rename as fixable in rules index (#6297)	False	
docs: fix grammar in ???there???s nothing prevent you??? (#11385)changed???for example, there???s nothing prevent you from writing:???to???for example, there???s nothing preventing you from writing:???	True	
build: package.json and changelog update for 3.12.2	True	
docs: fixed typo in no-lone-blocks docs	False	
chore: more tests for comments at the end of blocks (refs #6090) (#6273)	True	
sponsors: sync readme with website	True	
fix: incorrect logic for required parens in no-extra-boolean-cast fixer (#13061)* fix: incorrect logic for required parens in no-extra-boolean-cast fixer* specify assumptions for `needsparens`	True	
fix: false negative of `indent` with `else if` statements (fixes #6956) (#6965)	False	
docs: update one-var documentation (fixes #2210)	False	
fix: handle empty string property names in getfunctionnamewithkind (#12104)	False	
fix: ignore undefined identifiers in typeof (fixes #1482)	False	
build: package.json and changelog update for 2.13.0	True	
docs: explain config option merging (#7499)* update docs to explain config option mergingthere was a lot of [confusion](https://github.com/eslint/eslint/issues/6361) generated by the merging behavior of rules inherited from base configs, so i thought i would clear that up here. there still may be [scenarios](https://github.com/eslint/eslint/issues/6144) which arise where options cannot be overridden from base configs, but we'll deal with those on a per-case basis.* use 4 spaces, not 2* use string notation, instead of numeric* fix level	True	
fix: exit init early if guide is chosen w/ no package.json (fixes #6476) (#6478)	True	
breaking: change `strict` default mode to "safe" (fixes #4961)	True	
7.12.0	False	
update: rule "eqeqeq" to have more specific null handling (fixes #6543) (#6849)* update: rule "eqeqeq" to have more specific null handling (fixes #6543)* fix schema as proposed from pr feedback	True	
fix: off-by-one error in eslint-disable comment checking (#9195)	False	
docs: fixed typo in key-spacing rule doc (#9987)	False	
fix: prevent crashing from json parsing error (fixes #10364) (#10376)	True	
fix: merge configs with ancestors (fixes #820)	True	
make sure the callee type is identifier	False	
breaking: new linter api (fixes #8454) (#8465)	False	
build: changelog update for 6.2.2	True	
fix: trailing commas in object-curly-spacing (fixes #2647)	False	
fix #716 crash with reset flagadds a `rules` key when the `--reset` flag is used so that`object.keys(config.rules)` doesn't fail. there were multiplesimilar issues where the presence of `rules` was assumed, sochanging it once was the most straightforward solution. this issuewasn't picked up by the tests because the tests saw the .eslintrc inthe project root, which gave the config a `rules` key and masked theerror.	True	
upgrade: some (dev) deps (#13155)* upgrade: some (dev) deps1. after upgrading eslint-plugin-jsdoc, it reports:"invalid jsdoc tag name "template"  jsdoc/check-tag-names"it was fixed by added setting.jsdoc.mode: typescript(refs:https://github.com/gajus/eslint-plugin-jsdoc#check-tag-names)2. the following deps were not upgraded:* levn (was upgraded in eslint/eslint#13140)* ignore (it has a few breaking change)* chore: update eslint-config-eslint peer deps* fix conflicts* chore: review suggestions* chore: add a comment	True	
docs: update no-magic-numbers#ignorearrayindexes.	False	
update: add an option as an object to `generator-star-spacing` rule (fixes #2787)	True	
docs: add kaicataldo and jameshenry to our teams (#7039)	True	
sponsors: sync readme with website	True	
fix: ensure baseconfig isn't changed (fixes #2380)	False	
fix: `balanced` false positive in `spaced-comment` (fixes #6689) (#6692)	False	
new: add option to report unused eslint-disable directives (fixes #9249) (#9250)	True	
rule: max-nested-callbackscreated the `max-nested-callbacks` rule. this rule allows you toconfigure the maximum depth that callbacks may be nested inside ofeach other. this rule is aimed at discouraging the so-called"callback hell" that is a common pitfall of asynchronous programmingwith callbacks.the `max-nested-callbacks` rule differs from `max-depth` in that itonly takes callbacks into consideration when determining depth, asopposed to all block statements. this level of granularity is usefulbecause the theshold beyond which code becomes less clear is muchlower for nested callbacks than for block statements in general.	True	
docs: fix yield star spacing examples	False	
fix: false positive new with member in no-extra-parens (fixes #12740) (#13375)* fix: false positive new with member in no-extra-parens (fixes #12740)* rename func* remove duplicate function* check whole node is wrapped or not* remove checking whole node* check member object	False	
docs: clarify variables option in no-use-before-define (fixes #12986) (#13017)* docs: added fn decl example and details for variables option* docs: added more example for variables options* chore: refactore variables example* chore: removed extra eof line* chore: update default for nofunc no-use-before-defineco-authored-by: kai cataldo <kai@kaicataldo.com>co-authored-by: kai cataldo <kai@kaicataldo.com>	True	
update: handle locally unsupported regex in computed property keys (#12056)	False	
docs: fix formatter links (fixes #5006)	True	
added rule to avoid arguments.callee and arguments.caller (fixes #5)	True	
fix: forced no-shadow to check all scopes (fixes #2294)	True	
docs: fix trailing spaces in readme	False	
fix: prefer-destructuring reporting compound assignments (fixes #7881) (#7882)	False	
docs: update configuring links (#14038)* docs: update configuring links* fix link* update link in cli --env docs	False	
chore: include `tests/conf` in test runs (#15610)	False	
fix: call expression consistency in variable declaration (fixes #8607) (#8619)* fix: call expression consistency in variable declaration (fixes #8607)* rename test case function name	False	
docs: update pages to fix rendering of lists and fenced code blocks	True	
docs: update options in `object-shorthand` (#6898)	False	
add option to ignore property in no-param-reassign (#8087)* new: ignore assigned property in no-param-reassign (fixes #6505)* use oneof and enum in no-param-reassign schema* ensure `ignorepropertyassignmentsfor` uniqueness* add documentation for ignorepropertyassignmentsfor* add more tests to ignorepropertyassignmentsfor* fix documentation typo* s/ignorepropertyassignmentsfor/ignorepropertymodificationsfor/g* add tests for all types of modifying expressions- assignmentexpression (existed in previous commits)- updateexpression (new)- unaryexpression (new)* add test for nested properties	True	
fix: no-invalid-regexp not understand variable for flags (fixes #10112) (#10113)	True	
chore: update copyright and license info	False	
docs: add @g-plane as committer (#11277)	False	
chore: refactor to use es6 classes (part 3)(refs #7849) (#7865)	True	
fix: yoda rule produces invalid autofix with preceding yield (#12166)	True	
docs: add rest and spread operator changes to migration guide (#10416)* docs: add rest and spread operator changes to migration guide* fix review* move rest and spread operator change before jsxtext	True	
build: revert lock io.js to v2.1.0 (refs #2745)	True	
chore: fix rules list for prereleases (#13230)* chore: fix rules list for prereleases* fix logs* rules listing -> rules index page	True	
update: ruletester come to check ast was not modified (fixes #4156)	True	
chore: add .github/funding.yml (#11764)	False	
new: add operator-assignment rule (fixes #1420)	True	
sponsors: sync readme with website	True	
upgrade: several dependencies (fixes #1377)	False	
fix: rule message placeholders can be inside braces (fixes #6988) (#7041)	False	
docs: clarify ignoredestructuring option in the camelcase rule (#12553)	False	
build: fix prerelease script	False	
build: remove path.resolve in webpack build (#11462)	True	
fix: update sort-vars to ignore array and objectpattern (fixes #2954)	True	
chore: avoid relying on linter#getscope/markvariableasused in tests (#9252)(refs #9161)	False	
breaking: no-multi-spaces check around inline comments (fixes #7693) (#7696)* update: no-multi-spaces check around inline comments (fixes #7693)* ignoreeolcomments: false by default* autofix new errors	True	
docs: autogenerated changelog for v2.0.0-rc.0	True	
fix: improve report location for object-curly-spacing (#12563)	True	
fixes #735: add new, more efficient gettokens interfacesthis is a combination of 6 commits.the first commit's message is:add gettokensbefore and gettokensafter interfaces (ref #735)this is the 2nd commit message:add gettokenbefore and gettokenafter interfaces (ref #735)this is the 3rd commit message:add getfirsttokens and getlasttokens interfaces (ref #735)this is the 4th commit message:add getfirsttoken and getlasttoken interfaces (ref #735)this is the 5th commit message:expose new gettokens methods to rule context objectthis is the 6th commit message:make use of new gettokens methods in rules	True	
fix: `quotes` with `"backtick"` ignores modulespecifier and literalpropertyname (fixes #3181)	False	
docs: sort the rules	True	
docs: fix typo and missing article before noun in docs (#13611)* docs: fix typo semicolumns in providing suggestions docs* docs: fix missing article before noun	True	
new: adds implicit-arrow-linebreak rule (refs #9510) (#9629)* new: adds implicit-arrow-linebreak rule (refs #9510)adds a new rule that enforces consistency of arrow function bodiesthat contain an implicit return.* docs: use "implicit-arrow-linebreak" consistently* chore: use name "implicit-arrow-linebreak"	True	
chore: rule messages use internal rule message format (fixes #6977) (#6989)	True	
sponsors: sync readme with website	True	
fix: better error when given null as rule config (fixes #1760)	False	
docs: fix broken links in no-mixed-operators (#6372)	True	
new: add a --print-config flag (fixes #5099)	False	
chore: simplify space-infix-ops (#10935)	False	
fix: update `astutils.isdirectivecomment` with `globals` and `exported` (#15775)	False	
2.13.0	False	
fix: valid-jsdoc should recognize @class (fixes #1585)	False	
7.19.0	False	
revert "allow all directives in line comments" (fixes #14960) (#14973)* revert "breaking: allow all directives in line comments (fixes #14575) (#14656)"this reverts commit 4c841b880b5649392a55c98ecc9af757bd213ff0.* fix: codeql warningrefs: https://github.com/eslint/eslint/pull/14973/checks?check_run_id=3411736426* chore: improve regex* update lib/linter/linter.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	False	
docs: clarify linter vs eslint in node.js api docs (fixes #14953) (#14995)* improve clarity on the usage of the linter class* fix md issue* add line break for readability* update docs/developer-guide/nodejs-api.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>	True	
docs: remove the $ prefix in terminal commands (#15565)	False	
fix: `no-dupe-class-members` false positive (fixes #4981)	False	
fix false positives for no-script-url (fixes #400)	True	
update: improve location for semi and comma-dangle (#12380)* update: improve report location for semi* update: improve report location for comma-dangle* make getnextlocation return null instead of undefined* add unit tests for astutils.getnextlocation	True	
new: add option for camelcase (fixes #12527) (#12528)* new: add option for camelcase (fixes #12527)* docs: add docs about `ignoreimports`* chore: add more tests* docs: add notice	True	
update: lint code block with same extension but different content (#14227)* fix: lint code block with same extension but different contentclose #14207* chore: apply review suggestions	False	
fix: no-extra-parens false positive with objects following arrows (#8339)previously, the no-extra-parens rule correctly did not report an error when an arrow function returned a parenthesized object expression. however, it would still report an error if an arrow function had a parenthesized object curly as its first token. this commit updates the rule to not report a paren between an arrow token and an opening curly token.	True	
update: address code review comment for strict rule (refs #1011)	True	
update: fix handling of chained new expressions in new-parens (#12303)	False	
fix: wrong op index in no-multi-spaces (fixes #1547)	False	
docs: clarify disable inline commentsmake whitespace padding in comments consistent	False	
update: enforceforlogicaloperands no-extra-boolean-cast (fixes #12137) (#12734)* working rule, updated documentation* new: added enforceforlogicaloperands option to no-extra-boolean-cast(fixes #12137)* add default for schema option; renamed functions for clarity; pass fewer parameters to functions; check precedence in fixer* removed extra variable from function; fixed function name; fixed precedence check; added additional example* updated documentation* removed outdated legacy code method* added additional tests* renamed function* added additional test; updated documentation* switched docs examples order; fixed comments in rule; added test for inserting space* fixed accidentally edited lines	True	
fix: `operator-assignment` with parenthesized expression (fixes #8190) (#8197)	True	
breaking: report multiline eslint-disable-line directives (fixes #10334) (#10335)	False	
upgrade: sinon (#11855)	False	
fix: max-len rule overestimates the width of some tabs (fixes #4661)max-len incorrectly assumed that all tab characters were the same widthas the tab stops.	True	
fixed reported line number for trailing comma errorthe `no-comma-dangle` rule previously reported the arrayexpressionor objectexpression node when finding a tailing comma. as a resultthe rule would report the incorrect line for the error.for example, in the code below line 1 would be reported as havinga trailing comma when line 3 is the true culprit!var obj = {prop: "val",anotherprop: "va",};this fix reports the property node in the case of an objectexpressionand whatever node type the array item is in the case of anarrayexpression.	True	
3.19.0	False	
chore: combine multiple regex replaces with one (fixes #6669) (#6661)	False	
update: allow disabling new-cap on object methods (fixes #3172)	False	
fix: no-unused-expressions rule incorrectly flagging  yield (fixes #1672)	False	
docs: update readme.md for team (#8016)	True	
update: handle computed properties in camelcase (fixes #11084) (#11113)	False	
1.0.0-rc-1	False	
7.13.0	False	
fix: no-unused-vars updated location to last reference (fixes #13181) (#13354)* fix: changed reporter loc to last reference* chore: added some tests* chore: fixed no-unused loc for linter tests* update: refactored code using ternary exp	True	
docs: clean up key-spacing docs (fixes #9900) (#9963)	False	
update: deprecate valid-jsdoc and require-jsdoc (#11145)also see: https://eslint.org/blog/2018/11/jsdoc-end-of-lifethis deprecates the `valid-jsdoc` and `require-jsdoc` rules. we are currently still using them to lint the eslint codebase -- at some point we should probably switch to `eslint-plugin-jsdoc` to dogfood the process.	True	
build: changelog update for 8.4.0	True	
docs: update release notes blog post template (#15285)	False	
fix: catastrophic backtracking in astutils linebreak regex (fixes #7893) (#7898)* fix: catastrophic backtracking in astutils linebreak regex (fixes #7893)this fixes an issue where `astutils.getlocationfromrangeindex` and `astutils.getrangeindexfromlocation` were using a regular expression susceptible to catastrophic backtracking. the match would take quadratic time in the length of the last line of the file. since the file in https://github.com/eslint/eslint/issues/7893 contains a 1.5 million character source map url on the last line, rules like `no-multiple-empty-lines` would hang when using ast-utils to split the file into lines.this issue only applies to files without trailing newlines, and is only noticable when the last line of the file contains more than 30000 characters or so. since only a few rules use these `astutils` functions, this would only appear when either `no-useless-escape` or `no-multiple-empty-lines` reports an error for the file.simplified example: node 7.4.0 hangs when evaluating this expression.```js/[^\n]*\n/.test('a'.repeat(1000000))```* add explanatory comments	True	
update: make no-obj-calls report errors for reflect (fixes #7700) (#7710)	True	
fix: correct a typo in the error message in tests	False	
fix: func-call-spacing "never" doesn't fix w/ line breaks (fixes #7787) (#7788)	False	
breaking: use-isnan enforceforswitchcase default `true` (fixes #12810) (#12913)	True	
change conf/environments.json spacing to be simpler and more consistent	True	
chore: add metadata to existing rules - batch 7 (refs #5417) (#5969)chore: add metadata to existing rules - batch 7 of 7 (refs #5417)	True	
docs: add no-dupe-class-members examples with class fields (refs #14857) (#15005)	False	
fix: false negative of `object-shorthand` (fixes #6429) (#6434)i refactored the logic flow. the new flow has 3 parts.1. check whether it should be ignored always or not.2. check for concise properties.3. check for longform properties.then i fixed it for #6429.	True	
fix: invalid font-size property value issue. (#9341)"normal" is invalid property value, so change from "normal" to "medium".	True	
fix: wrong basedir (fixes #6450) (#6457)	False	
update: adds `numbers` option  to quote-props (fixes #2914)	True	
add question about es6 support to faq (fixes #530)	True	
docs: fix spell in camelcase doc (fixes #2190)	False	
update: improve report location for comma-style (refs #12334) (#13111)	True	
update: array-callback-return checks array.foreach (fixes #12551) (#12646)array-callback-return rule now checks if array.foreach returns a value, and, if it does, reports an error.this feature is being added disabled by default, and can be enabled by setting the option "checkforeach" to true.signed-off-by: gabriel r sezefredo <g@briel.dev>	True	
4.7.0	False	
fix: false positive on rule`lines-between-class-members` (fixes #9665) (#9680)* fix: `lines-between-class-memebers` (fixes #9665)`lines-between-class-memebers` if a comment occurs between class members* add tests suggested by reviewers.* add comments* refactor: remove a nest.* refactor: declare variables just before they are needed.	True	
docs: typo in no-useless-concat	False	
update: implement auto fix for array-bracket-spacing rule (fixes #3858)	True	
upgrade: esprima to 1.1.1 and escope to 1.0.1 (fixes #718)	True	
update: `--quiet` should not supress `--max-warnings` (fixes #14202) (#14242)	False	
docs: update docs to refer to column (#5937)* update docs to refer to column* update column in new guide as well	True	
fix: `indent` param function on sameline (fixes #4174)	False	
update: improve error message for `indent` rule violation (fixes #3340)	True	
5.15.1	False	
docs: fix wrong config in max-len example. (#9309)* docs: fix wrong config in max-len example.* update max-len.md	False	
docs: some typos and optimization points (#11960)	True	
docs: adding missing es8 reference to configuring (#7271)* docs: adding missing es8 reference to configuring* fixup: incorporating feedback	True	
new: add rules.import() (fixes #1114)	False	
docs: update commit message format docs (#15200)	True	
docs: update space-before-function-paren docs for 4.0 (fixes #8430) (#8431)	True	
fix: no-useless-rename handles experimentalrestproperty (fixes #12335) (#12339)	False	
#595 fix whitespace	False	
chore: improve crash reporting (fixes #11304) (#11463)add line number to the output in the event of a rule crash	True	
docs: update link to integrations / build tools / start (#10354)start plugin for eslint has been updated to the new scoped package.	True	
update: report '\08' and '\09' in no-octal-escape (fixes #12080) (#12526)	False	
fix: check 1tbs non-block else (fixes #4692)	False	
update: add block options to `lines-around-comment` rule (fixes #2667)	True	
update: support class fields in func-name-matching (refs #14857) (#14964)	False	
update: option to ignore constructor fns object-shorthand (fixes #4487)	True	
docs: update steps for adding new tsc member (#11038)mention adding new tsc members to the eslint tsc mailing list.	True	
2.8.0	False	
new: newline-after-var rule (fixes #2057)allow/disallow empty newline after `var` statement.support es6 block bindings (fixes #2057)treat unknown option value as `always`	False	
docs: fix typo in func-name-matching rule docs (#11484)	False	
docs: missing semicolon report was missing a comma (#7553)	False	
build: changelog update for 7.3.1	True	
breaking: change no-comma-dangle to comma-dangle (fixes #1350)	True	
fix: eslint bot mentions the wrong person for extra info (fixes #5229)	True	
docs: update deprecated information (#14961)	True	
fix: check no-new-func on callexpressions (fixes #3145)used to only check newexpressions for function, but according to mdn:> invoking the function constructor as a function (without using the new> operator) has the same effect as invoking it as a constructor.	True	
fix: exclude `assignmentexpression` and `property` nodes from extra indentation on first line (fixes #3391)	False	
fix: prefer-numeric-literals doesn't check types of literal arguments (#12655)	False	
follow the rule naming conventions	False	
docs: rephrase documentation for `no-duplicate-imports` (#6463)fixes #6455	True	
chore: no-invalid-meta crash if no export assignment (refs #9534) (#9698)	False	
new: add the fix-dry-run flag (fixes #9076) (#9073)	False	
update: make indent memberexpression handling more robust (fixes #8552) (#8554)* update: improve indent memberexpression handling (fixes #8552)this commit updates the indent rule's memberexpression handler to avoid expecting nan indentation when the memberexpression option is set to "off". it also fixes a related bug with indenting memberexpressions with parenthesized objects, and adds a few comments to clarify why particular pieces of the memberexpression logic are necessary.* fix memberexpression indentation in function arguments	True	
build: changelog update for 7.19.0	True	
docs: clean up structurecloses #117.	False	
docs: update so issues are not required (fixes #7015) (#7072)	True	
fix: avoid creating invalid regex in no-warning-comments (fixes #11471) (#11472)5018378131fd5190bbccca902c0cf4276ee1581a changed the codebase to use unicode regexes almost everywhere, with the exception of places where regexes are constructed from user input. however, two issues occurred to cause a bug:* due to an oversight, the regular expressions constructed in the `no-warning-comments` rule were changed to be unicode regexes even though those regexes were constructed from user input.* the `no-warning-comments` rule dynamically creates regexes with unnecessary escape characters, and unnecessary escape characters are invalid in unicode regexes.this commit fixes the first issue. the second issue isn't a problem on its own, but it will need to be fixed in order to implement https://github.com/eslint/eslint/issues/11423.	True	
fix: strict rules shouldn't throw on arrow functions (fixes #1789)	False	
update: allow shadowed references in no-alert (fixes #1105)	False	
docs: update architecture page (fixes #9337) (#9345)* docs: update architecture page* fix spelling* update documentation* fix architecture doc* updated again	False	
chore: upgrade dependencies of browser test (#14127)* chore: upgrade dependencies of browser test* chore: simplify node.js modules polyfill* chore: remove unnecessary dependency* chore: simplify webpack config in karma* chore: clean up entries in karma config	False	
docs: remove esprima-fb from suggested parsers	False	
new: add no-setter-return rule (fixes #12285) (#12346)	False	
update: new parameters for quote-props rule (fixes #1283, fixes #1658)	True	
docs: add about ruletester's parser to migration guide (fixes #11728) (#11761)	True	
fix: space checking between tokens (fixes #2211)	True	
sponsors: sync readme with website	True	
added documentation for the `no-caller` rule	True	
formatters can now process multiple files at once	True	
docs: update description of eqeqeq to mention special cases (fixes #924)	True	
docs: fix verifyandfix result property name (#8903)	False	
sponsors: sync readme with website	True	
breaking: remove es6 global variables from builtins (fixes #4085)this upgrades to `globals@8.14.0`, which has separate `es5` and `es6`environments. only es5 global variables are considered builtin now, andes6 global variables are supplied as part of the `es6` environment.	True	
fix: add support for escape char in jsx. (#7461)	True	
fix: handle async functions correctly in `prefer-arrow-callback` fixer (#7173)(refs #7101)	False	
fix: `comma-dangle` had not been checking imports/exports (fixes #3794)	False	
update: replace gettokenbyrange(index->start) (refs #1721)	True	
docs: small fix about the migration guide (#11729)* update the list of migration guides* fix invalid self-closing	False	
update: `keyword-spacing` supports async/await (refs #7101) (#7179)	False	
update: include debugging information when rule throws error (#9742)when developing eslint rules (including for plugins), tracking downerrors within rules is difficult and requires manual updating of thecode to track down where the error is coming from. this adds additionaldiagnostic information which can help```eslint:traverser an error occurred while traversing +736mseslint:traverser filename: /users/patrick/dev/test.js +0mseslint:traverser parser options: { ecmafeatures: { globalreturn: false, jsx: true },codeframe: false,ecmaversion: 6,sourcetype: 'module' } +0mseslint:traverser parser path: /users/patrick/dev/node_modules/babel-eslint/index.js +2mseslint:traverser settings: { react: { pragma: 'react' } } +0ms```i opted for `debug` logging to make this minimally disruptive, but iwould also advocate for promoting this information to being always logged tostderr. this information will be valuable to developers working onrules, but may also be valuable to the end developer to help them trackdown the source of their error	True	
fixes #634: getters/setters shouldn't trigger no-dupe-keys	False	
fix: no-trailing-spaces autofix to account for blank lines (fixes #3912)	True	
docs: clarify what an unused var is (fixes #2342)	False	
build: escape period in regex (fixes #1428)	False	
new: prompt users before installing dependencies (#10353)* new: prompt users before installing dependencies* fix: return modules list too early	True	
new: add no-whitespace-before-property rule (fixes #1086)	True	
docs: correct wording in the `smart-tabs` docs page (#10277)	False	
chore: switch to eslint-scope from escope (#8280)	True	
2.7.0	False	
start development of 0.0.6-dev	False	
fix: message templates fail when no parameters are passed (fixes #4080)	False	
fix: ignore memberexpression in variabledeclarators (fixes #6795) (#6815)chained properties on objects will typically not be indented as the ruleexpects in variable declarations. for now, ignore variable declarations(as was done in the previous version of eslint, where all chainedproperties were ignored) and possibly revisit later to offer usersopportunity to enforce alignment and/or sensible indentation.	True	
update: add `typeof` option to `no-undef` rule (fixes #3684)	True	
upgrade: eslint-scope@5.1.1 (#13716)	False	
new: `no-restricted-properties` rule (fixes #3218) (#7017)* new: no-restricted-properties rule (fixes #3218)* updating to use the new format* updating the docs* fixing lint errors in the markdown* force build* using map instead of an object* using the property name getter from astutils	True	
breaking: space-before-function-parentheses replacesspace-after-function-name and checkfunctionkeyword (fixes #1618)	True	
docs: correct typo in configuring.md (#5957)	False	
fix: eslint --init installs wrong dependencies of popular styles (fixes #7338) (#8713)	False	
sponsors: sync readme with website	True	
fix: no-irregular-whitespace should work with irregular line breaks (fixes #2316)	False	
docs: add spread operator to available language options	True	
docs: add if-else example (fixes #3722)add examples to clarify that nested `if`-`else` is treated the same as a nested `if`.	True	
chore: update space-before-function-paren in eslint-config-eslint (#12966)* chore: update space-before-function-paren in eslint-config-eslint* run autofixer	True	
fix: lines-around-comment was crashing in some cases due to a missing check (fixes #2892)	True	
docs: add related rules sections (fixes #990)	False	
docs: clarify the default behavior of `operator-linebreak` (fixes #7459) (#7726)	True	
chore: remove unused code in max-lines-per-function (#12659)	False	
docs: fixing trailing spaces (fixes #2478)	False	
update: add fixer for `sort-imports` (#7535)* update: add fixer for `sort-imports`* add a test with linebreaks between specifiers* don't do a fix if there are comments in the import list	True	
update: better operator regex in use-isnan rule (fixes #1551)fixes #1551.	True	
fixes #677 getjsdoccomment() should not search beyond functionexpression or functiondeclaration parent nodes.	False	
fixing eslint errors	False	
docs: add section about customizing ruletester (fixes #6227) (#6331)* docs: add section about customizing ruletester (fixes #6227)* rewording after feedback* added example	True	
fix: ensure ./ works correctly with cli (fixes #3792)	False	
fix: arrow-body-style crash with object literal body (fixes #12884) (#12886)	False	
fix: update semi-style for class static blocks (#15309)fixes false positive in the `semi-style` rule: the last statement in a class static block should be allowed to have its semicolon on the same line when the option is `first`.refs #15016	True	
docs: remove hard tabs from *.md, enable corresponding markdownlint rule.	False	
updated contributing.md	False	
update: add named imports and exports for object-curly-newline (#9876)* update: add importdeclaration and exportdeclaration* chore: add tests for import/export declaration* docs: update docs for object-curly-newline* chore: update comment in object-curly-newline* chore: fix jsdoc error* chore: add sourcetype module to ruletester option* update: combine logic for finding closing brace* chore: extract function, needslinebreaks* docs: revert remove of "and"* update: rewrite logic for node options* docs: correct grammar for options* chore: correct grammar in jsdoc	True	
chore: test property > .key with { a = 1 } pattern (fixes #14799) (#15072)	False	
add rule to prevent comparisons with value nan	True	
fix: typo in console.error (#8258)	True	
docs: ensure "good commit message" examples actually follow guidelines (#9466)	False	
build: changelog update for 4.5.0	True	
new: switch-colon-spacing rule (fixes #7981) (#8540)* new: switch-colon-spacing rule (fixes #7981)* fix comments.* docs: move the options description* docs: fix typo closure -> clause* docs: clarify about newlines	False	
docs: updated importdeclaration in docs-rules-indent (#11679)	False	
docs: fix examples in object-curly-newline (#13605)* docs: consistent example* docs: let a -> empty* docs: add correct example* docs: add function object  incorrect example* docs: add object empty correct example* docs: add destruct operation example* style: tab -> space	False	
docs: remove extra header line from license (#8448)currently, github is not able to auto-detect that this repo has the mit license because we have an extra line at the top of the `license` file. when github auto-detects a license, it is able to (a) display the license name in the repository header bar, and (b) display information about the license when someone views the `license` file. this commit updates the `license` file to remove the extra line so that github can auto-detect the license.	True	
sponsors: sync readme with website	True	
update: add 'caughterrors' to rule no-unused-vars (fixes #3837)	True	
add default setting for no-cond-assign	True	
breaking: change relative paths with --config (refs eslint/rfcs#37) (#12887)	False	
sponsors: sync readme with website	True	
update: implement auto fix for space-unary-ops rule (fixes #3976)	True	
new: add no-implicit-globals rule (fixes #4542)	False	
new: `no-this-before-super` rule (fixes #2721)	True	
docs: add "compatibility" section to linebreak-styleadd a "compatibility" section to the linebreak-style rule documentation. in jscs the rule is called 'validatelinebreaks' and it would be helpful for people migrating to eslint to know this.	True	
update: no-implicit-coercion validate assignmentexpression (fixes #4348)	False	
fix: don't ignore the entry directory (fixes #12604) (#12607)	True	
update: optionally allow bitwise operators (fixes #4742)	True	
sponsors: sync readme with website	True	
created space-in-brackets rulecreated the `space-in-brackets` rule, which enforces spacingpreferences within brackets:var obj = { foo: 'bar' };var arr = [ 'foo', 'bar' ];foo[ 'bar' ];var obj = {foo: 'bar'};var arr = ['foo', 'bar'];foo['bar'];the rule takes one option, a string, which may be either "always"or "never".fixes #631	True	
fix: mark --rulesdir option as deprecated in cli docs (#15310)	False	
fix: remove type arguments in prefer-object-spread (fixes #13058) (#13063)	False	
0.9.1	False	
docs: add ianvs as committer	False	
catch additional cases for a.b, new f, iife	True	
1.2.0	False	
docs: update team list with new members	False	
chore: remove bundling of eslint during release (#12676)	False	
fixes #501: no-array-constructor recognises callexpression form	True	
fix: remove invalid check inside `getjsdoccomment` function (fixes #2938)	False	
chore: make parse() a pure function in linter (refs #9161) (#9183)	False	
build: package.json and changelog update for 3.10.1	True	
new: the `no-class-assign` rule (fixes #2718)	False	
chore: upgrade eslint-plugin-jsdoc to v25 and remove --legacy-peer-deps (#14244)* chore: upgrade eslint-plugin-jsdoc to v25this is a chore instead of an upgrade because it's in `devdependencies`.v25 is the first release of `eslint-plugin-jsdoc` to bump the `eslint`peer dependency to allow `eslint@7`. once it's upgraded, we won't haveto use `--legacy-peer-deps` to install dependencies with npm v7. thenewer version was unsatisfied with the `clioptions` param to`translateoptions` typed as just `object`, so i turned our optionatorconfig into a jsdoc typedef.* chore: npm v7 no longer needs --legacy-peer-deps (refs #13844)`eslint-plugin-jsdoc` was the last upgrade needed to be compatible withthe new peer dependency resolution in npm v7.* docs: make parsedclioptions typedef name consistentco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* docs: properties with default values are non-optionalco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* docs: add _ filenames/patterns to parsedclioptions typedef* docs: parsedclioptions.fixtype is optionalco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
docs: document the deprecated meta property (#7367)	False	
docs: add more examples + tests for block-scoped-var (fixes #3791)extra examples of if/else in docs to clarify that blocks don't have to bedirect descendants/ancestors of each other to clash. also added in a fewmore tests that ensure this behaviour is properly defined and tested.	True	
build: increase mocha timeout (fixes #3692)	False	
fix: no-obj-calls false positive (fixes #12437) (#12467)	False	
fix: give the perf test a better calculated budget (fixes #749)	False	
sponsors: sync readme with website	True	
1.9.0	False	
docs: fix json formatting for lines-around-comments rule	True	
docs: space-in-parens examples with no arguments etc. (#13987)	False	
fix: exit code should be 1 for any number of errors (fixes #1795)	True	
update: space-before-function-parentheses to support generators (fixes #1929)	True	
docs: fix rule config above examples for require-jsdoc	True	
update: add es7 support (fixes #5401)	False	
update: support eslint-disable-* block comments (fixes #8781) (#9745)	False	
rule: no-underscore-dangle for func/var declarations	True	
breaking: require `meta` for fixable rules (fixes #13349) (#14634)* breaking: require `meta` for fixable rules (fixes #13349)* change error message	True	
add --env cli flag (ref #692)	False	
update: add `balanced` option to `spaced-comment` (fixes #4133) (#6575)	True	
fix: detect ternary operator in operator-linebreak rule (fixes #3274)	True	
chore: replace deprecated calls to context - batch 3 (refs #6029) (#6056)	True	
docs: fix inaccuracy in `npm run perf` description (#9274)the documentation for `npm run perf` says that the perf script only enables rules from `eslint:recommended`. in fact, the perf script enables all core rules.	True	
docs: update docs for ecmaversion 2020 (#12120)* update docs for ecmaversion 2020* fix first list	True	
chore: avoid using deprecated rules on eslint codebase (#8708)this updates eslint-config-eslint to remove deprecated rules in favor of their newer alternatives.	True	
breaking: test with an unknown error property should fail in ruletester (#12096)* breaking: test with an unknown error property should fail in ruletester* check suggestion properties	False	
update: extended no-console rule (fixes #5095)the extention will allow filtering of acceptable console functions.	True	
update: enforce repo coding conventions via eslint (refs #5188)dogfood space-in-parens and lines-around-comment rules in eslint repo.	True	
sponsors: sync readme with website	True	
docs: update processors description	True	
upgrade: single- and multiline const, let, var statements (fixes #10721) (#10919)	False	
5.13.0	False	
docs: replace `var` with `const` in code examples (#11655)	False	
fixing bug with _ in memberexpression	False	
chore: enable prefer-regex-literals in eslint codebase (#12268)	False	
fix no-used-vars to report functionexpression params (fixes #697).	True	
docs: `max-lines` option: fix `skipcomments` typo (#6374)	False	
bug: add forstatement for no-cond-assign check	True	
docs: update process for evaluating proposals (fixes #7156) (#7183)	True	
#595 add docs for rule func-names	True	
fix: allow default ignored files to be unignored (fixes #5410)	True	
build: avoid creating broken rule links in the changelog (#7731)	False	
corrected file extension on no-plusplus rule documentation.	False	
chore: fix some jsdoc-related issues (#11148)	True	
update: implement auto fix for arrow-spacing rule (fixes #3860)	True	
sponsors: sync readme with website	True	
fixes exception when init is null	False	
docs: update rule docs for new format (fixes #5417) (#6551)	True	
fix: remove node.js and commonjs category from build process (#13242)* fix: remove node.js and commonjs category from build process* remove categories that do not contain any rules	False	
new: support typescript at config initializer (fixes #11789) (#12172)* new: support typescript at config initializer (fixes #11789)* fix lint* tiny fixes	False	
docs: add example of diff clarity to comma-dangle rule docs (#6035)add a sentence and a code example about diff clarity tocomma-dangle docs.	True	
docs: add more info about context (fixes #1330)	False	
docs: add variables option to no-use-before-define (#15276)	True	
docs: fix typo in no-underscore-dangle rule (#9567)	False	
chore: enable `prefer-const` and apply it to our codebase (refs #6407) (#6805)	True	
docs: fix max-lines-per-function correct code's max value (#10513)	False	
breaking: allow all directives in line comments (fixes #14575) (#14656)* breaking: allow all directives in line comments (fixes #14575)chore: fix linting problemsupdate linter.jsupdate linter.jsupdate: support eslint-envfix: rm "\n" in the regex* update lib/linter/linter.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* chore: add more tests* chore: rename var to mustbeonsingleline* fix: false postives of no-inline-comments & no-warning-comments* update lib/rules/utils/ast-utils.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update ast-utils.js* chore: add some tests* chore: move a var def to outer scope* chore: add //eslint-enable tests* chore: add more tests for //eslint-env* update lib/rules/utils/ast-utils.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update tests/lib/rules/no-warning-comments.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* chore: add more tests (+1 squashed commit)squashed commits:[9a4c7d751] chore: add more tests* docs: update config comments usage* update ast-utils.js* update ast-utils.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
fix: incorrect error messages of no-unused-vars (fixes #9774) (#9791)remove varsignorepattern incorrectly included in error messages of no-unused-vars.	False	
docs: correct alignment in example project tree	False	
fix: normalizes messages so all end with a period (fixes #6762) (#6807)	True	
sponsors: sync readme with website	True	
fix: fix no-extra-parens ignores some nodes (#11909)* fix: fix on templateliteral* fix: fix on assignmentpattern* fix: fix sequenceexpression at templateliteral	True	
update: add class support to `require-jsdoc` rule (fixes #4268)	True	
sponsors: sync readme with website	True	
chore: add eslint-plugin-node to eslint-config-eslint(fixes #10319) (#10320)	True	
update: implement auto fix for `indent` rule (fixes #3734)	True	
fix: add a utility to avoid autofix conflicts (fixes #7928, fixes #8026) (#8067)* fix: add a utility to avoid autofix conflicts (fixes #7928, fixes #8026)as discussed in #7928, this commit modifies the `no-else-return`,`no-useless-return`, `semi`, and `no-extra-semi` rules to generate fix commandswith a larger range. for the first two, the entire enclosing function is"locked", and for the semicolon rules, just the surrounding tokens are "locked".this works using a new `fixtracker` class, which is sort of a builder-styleclass that allows the rule to specify the range to retain and then supply anoperation, and the class figures out the final text replacement.in the future, `fixtracker` could also allow multiple replacement operations,e.g. to make the `no-extra-parens` code a little simpler. it also might beuseful as a public api in the future.to get the existing tests to work, i added an optional preference to runmultiple passes for an autofix test. it turns out that running multiple passesby default causes problems in a number of tests, and likely slows down thetests, so i just made it opt-in for now.* revert test change, add comments, make fixtracker more robust	True	
docs: remove unneeded statement about autofix (#8164)	True	
fix: mergeconfigs ensures the plugins property exists (fixes #1191).	False	
rename: regex-spaces to no-regex-spaces	True	
fix: dot-location should use correct dot token (fixes #2504)	True	
build: ci with azure pipelines (#11845)	False	
increased test coverage for `max-params` rule.created a test case that increased the `max-params` test coverage to 100%.	True	
update: resolve npm installed formatters (#5900) (#9464)	True	
update: improve report location for no-trailing-spaces (fixes #12315) (#12477)	True	
updated readme	False	
rule: max-depthcreated the `max-depth` rule, which allows the user to specify the maximum depth that blocks can be nested:// max-depth: [1, 2]  // maximum of 2 deep.function foo() {for (;;) {if (true) {if (true) { // nested 3 deep.}}}}this rule matches the *maxdepth* rule for jshint.	True	
chore: add noopener/noreferrer	False	
docs: update `prefertype` heading to keep code format (fixes #5307)	True	
update: adding shared environment for node and browser (refs #5196)	True	
#595 fix markdown for js code blocks	True	
fix: single quotes	False	
docs: mention 'prefer-spread' in docs of 'no-useless-call' (#11348)	False	
0.22.0	False	
upgrade: debug@^3.1.0 (#9731)this version of debug addresses a minor redos issue. see visionmedia/debug#501, visionmedia/debug#504 for more information. looking at the rest of the changelog, this should be a pretty low-risk upgrade.	True	
fix: `accessor-pairs` false positive (fixes #3262)	True	
chore: avoid handling rules instances in config-validator (#9364)this is a modified version of #9277, which was merged but then reverted later for performance reasons. the performance issues from #9177 have been fixed (`linter` no longer creates a new map of rules whenever it lints text).the goal of this change is to progress towards being able to remove the `rules` property from `linter` instances. unfortunately, this isn't possible yet, since there are a few other modules that rely on reading the list of defined rules.	True	
chore: check for root:true in project sooner (fixes #8561) (#8638)check for root:true in project root before going upward in directorystructure to look for other eslint configuration files.	True	
fix: `valid-jsdoc` prefer problem (fixes #4205)	False	
fix #525 & #528	False	
fix: comma-spacing for template literals (fixes #1736)	True	
fix: revert "update: disallow multiple options in comma-dangle schema" (#13564)this reverts commit cbd0d00a1ec2824d7e025bbbc084855ed0bf08bb.	False	
docs: update readme team and sponsors	True	
docs: update strict rule docs (fixes #4583)	False	
build: update browser build (#12693)	False	
cli refactor to remove process.exit(), file not found now a regular error message, updated formatters to handle this case	True	
0.21.2	False	
up code coverage numbers	False	
docs: make `prefer-template` examples consistent.	False	
fix: improve keyword-spacing typescript support (fixes #8110) (#8111)	False	
removed foo.txt	False	
chore: avoid unnecessary filesystem accesses during config search (#10359)	False	
fix: radix rule does not apply for number.parseint (es6) (fixes #3364)	True	
breaking: comma-dangle enable functions: "never" (fixes #11502) (#11519)	False	
fix: valid-jsdoc error with square braces (fixes #2270)	False	
adding missing package registration	False	
fixes error in new-cap rule when 'new' is used without a constructor (fixes #360)	True	
update: replace several dependencies with lodash (fixes #5012)	False	
sponsors: sync readme with website	True	
add support for the do-while statement to the curly rule (closes #167)	True	
breaking: set `parent` of ast nodes before rules run (fixes #9122) (#10014)	True	
docs: add alberto as a committer	True	
docs: update quotes.md (#10862)	False	
sponsors: sync readme with website	True	
fix: ensure proper lookup of config files (fixes #5175, fixes #5468)	False	
vows is gone. mocha is now default	False	
sponsors: sync readme with website	True	
breaking: espree@7.0.0 (#13270)	False	
docs: distinguish examples in rules under best practices part 2	False	
docs: update copyright (#7497)	False	
build: update license checker to allow lgpl (fixes #8647) (#8652)the license checker had been reporting errors on master because a subdependency is licensed under the lgpl, but the lgpl is acceptable for us (see https://github.com/eslint/eslint/issues/8647).	True	
rule: no-octal-escapethe `no-octal-escape` rule disallows the use of octal escape sequences in string literals:var foo = "copyright \251";this rule matches one with the same behavior in jslint.fixes #246 fixes #247	False	
6.0.0-rc.0	False	
new: allow parser to be configured (fixes #1624)	True	
rename project to eslint	True	
fix: `prefer-const` treats `for-in`/`for-of` with the same way (fixes #2739)	True	
4.19.0	False	
fix: strict rule should honor module code (fixes #1956)	False	
fix: `object-curly-newline` multiline with comments (fixes #6381) (#6396)	False	
fixes #415: fix unnecessary-strict rule false positivesthe rule now also detects directives that are unnecessary because thereexists another "use strict" directive in the same scope. should also bemore efficient since it now only looks where necessary for directives.	True	
update: support classes in `padded-blocks` (fixes #5092)	False	
fix: revert setting node.parent early (fixes #9331) (#9336)this reverts commit 1488b511f3be3220d6f187f48c8b22075c6bbd30. some rulesfrom plugins were relying on the behavior that a a `node.parent`property is only sometines present, and other rules were relying on thebehavior that the ast contains no cycles when rules are created.	True	
build: fix jsdoc syntax errors (#9813)jsdoc syntax errors were causing "npm run docs" to fail.- jsdoc doesn't yet support specifying array content, i.e. "[number,number]" is a syntax error, so i'm using "number[]" instead. (source:https://github.com/jsdoc3/jsdoc/issues/1073)- jsdoc doesn't support multiline objects, e.g. returning report informationwas a syntax error, so i extracted it into a typedef, as well as thedisable directive.	True	
update: add enforceforclassmembers option to no-useless-computed-key (#12110)* update: add checkmethods option to no-useless-computed-key* update: don't flag `static ['constructor']`* update: flag static computed constructor* update: rename `checkmethods` to `enforceforclassmembers`* chore: valid class test cases don't have new option specified* chore: add tests with defaults and explicitly disabled option* chore: add class expression tests* docs: add `enforceforclassmembers` option to `no-useless-computed-key`* chore: resolve jsdoc lint warnings* address review comments	True	
fix: object literals in arrow function bodies (fixes #2702)	False	
docs: clarify `array-bracket-spacing` with newlines (fixes #5768)	False	
docs: make grammar consistent in rules index	False	
new: `prefer-template` rule (fixes #3014)	False	
chore: dogfooding `no-var` rule and remove `var`s (refs #6407) (#6757)	False	
perf: don't prepare a fix for valid code in key-spacing (#15239)	True	
docs: fix a misleading example in one-var (#11350)	False	
update: deprecate `applydefaultpatterns` in `line-comment-position` (#8183)	False	
docs: cross-reference two rules (refs #11041) (#11042)	False	
chore: use nyc instead of istanbul (#11532)	False	
new: autoconfiguration from source inspection (fixes #3567)this adds an option to `--init`, which will ask for a set of files to examine,and then lint those files with various rule configuration settings.  based on theresults of that linting, it will generate a configuration file which minimizesthe number of errors.rules in `eslint:recommended` will not be disabled, so they may still result inerorrs, but all other rules will not give errors when linted against the same setof files which was examined.this also adds some utility functions, like `getsourcecodeoffiles()` from`lib/util/source-code-util.js`, utilities for working with npm (`lib/util/npm-util.js`)and it extracts the default cli options into `conf/cli-options.js`.at this time, this feature cannot be used for jsx code, due to #5007.commits which were squashed into this commit:74869b5b78a1d5c624d6daec1bccd191b1061dd8 create autoconfig module0d01ec35ca83a610e6e9fd887ca85bf741fa9738 address comments so farebb9e568b02f6b6584566093ee4818edbefe5960 create helper for obtaining sourcecode from file(s)c5215b6d6f49b109c9cf83d0878f000a169f413a add autogenerate option to `???-init`e00cb80f837d72a1add7014e32128b52eac1036f add logic for collecting linting errors by rule configea614d06d6af8fc2fab01088a8ae303eaf3943bc create config files with sorted keysab0a89947b7f8bddbcd6949d5d4f9679bddc03b6 add logic to choose ???best??? rule configs1345e49e7f247a7d278a421cdd4ada48231b3a85 do not initialize errorcount in registry to zero5350fe5ffdfb9821d13758477fc219be6dddc4e7 add a progress bar for reporting execution time.7bec887768d2f519ad0254f6d83681248d2abaaf use new parseroptions06bedccae9ce59fb0c8c90ab4b95ca62201c2ecc remove manual rule blacklistdc956694325166ad62501f564886e0e55ed2054c define ruleconfig and registryitem in jsdoc typedefs2036ec540720424183f4c31a8c2e5da82dad662b avoid populating registry upon construction6581c188c55e7948674bdf058896d7ec8a48eb86 refactor and improvef3290b872fc27c2d4033f9cf5406b5fd1ae008ee extend from ???eslint:recommended???7f39778ff7a46fef6bf122e7bf042b3c578523c3 doc cleanup545a2293e3cdf10c442da55a4f051c50bdd65ba3 break up registry methodsaa7318b1496ab2a6e1ab360e82b2f4966482df4d split rule configuration from autoconfig8a370cc1c8eda5b66310e3f2bbf12474466ce444 only disable rules which have no determined error-free config9033b6200298cc771d8f3c0575d35dc7de71442a do not disable eslint:recommended rulesa18b766d292a7d0546cec2e22608901f89075cac add tests for config generation from schema43c54b8ff9cf8ac4e9d6fc1e65b4a577b644e3f6 pull default cliengineconfig into config file10c0ea79968cfcb181ef3af501c26cc2e93cd5ba add tests for createcoreruleconfigs()f0325566c82b5808ef782b2ed30c45dda883f9dd add initial tests for sourcecodeobtainaded7668f2584dc597fef019beed1e554ac13a59 make options optional for getsourcecodeoffiles2480b4201be44262c5cba0365d89dc7f2dd87e98 add more tests for sourcecodeobtain67a8e75fe10511b8607c69b95a068e65b2e751ba don???t export ruleconfigset9378f75219bc121211355e00cd86cb8bce01f03f account for new location of ecmafeatures in config3691dd4a5ea613a0883bd20a8db455b5b1f4f489 add some tests for config-initializer processanswers()3362eb94ace2094638293417d2c3b4478141649d pass around inquirer ui object explicitlyf8b16895348a984fec199db5cdb784511a7bf79c rename `source-code-obtain` to `source-code-util`3199afa582dbd179d3260147f20ee52158f305a2 use uppercase for object and registry in jsdocb39832aa2295f18dcee2c2855362eeb5de165496 install eslint-plugin-react before autoconfig runs4c336fae51eae30cdf3510d8307580ea7399b93d ask if the project is using es6 modules5e27d5cb2f5020bee73f1a40539955896c7fbccf pull npm installation into separate utilityb99d2887aff90fa683104f29c3294b1af5cb76c7 add cwd to default cli optionsec526b37c3ab33d867e41893ec8298309e04cd69 cleanups based on @gyandeeps???s review1fcdc7ba0ce2ee184ee55404e6eb5cd428d85036 stub out npm utility functions36ed7e6c86f327a921996c8196de138ae0da8c1b fix bug when schema contains an enum and empty objdd64ffcbdcf5e2ddc9aad5c9b00a3203fc1edc84 add initial tests for autoconfig59a7247c783b2eaa061467e8afe4c57223ba3a91 use logging utilityf486a5bdee8574642d4371f125e036170e6a943e extend options from the defaultsbb2f63d7cc949752d32e4fe325b1cb9e5ad85905 add more tests for autoconfigf80d36e9a111ee9a625eefb4aa320a9c3579226f disable autoconfig for jsx code, for nowf1a77e9bcb9b4ccc12458634c92f9a98aa216218 remove timeoutc71bf088c32d76b3d94f9794dad2447f97d7aea7 check package.json instead of installation status86d6c090d5ff364107b0b09cebc69550668b6f8d ignore existing eslint config files3125f909870f317dcd0135cb701dc4270b50e6a7 use shelljs for execsync764c291da5d925f5f2443831be9e94cbf6d98bb3 avoid changing process.cwd9845060f5405251708605d7c71aa6423258a48de pass cwd to getsourcecodeoffilesf1c2176778f2c81390709e05ae848adb7cc6d976 don???t split on commasplus a few others ...	True	
build: package.json and changelog update for 3.16.1	True	
update: fix in/instanceof handling with `space-infix-ops` (fixes #7525) (#7552)	False	
got npm test to work with istanbul, huzzah\!	True	
docs: removed non-existing resource (#6609)	True	
build: fix `npm run profile` script (fixes #9397) (#9455)	False	
chore: enable require-unicode-regexp on eslint codebase (#11422)	False	
add builtin globals to the global scope (fixes #185)	True	
fix: make `no-implicit-coercion` smarter about numerical expressions (fixes #3510)	False	
fix: space-before-keywords false positive (fixes #4449)	True	
sponsors: sync readme with website	True	
update: ask for `commonjs` under config init (fixes #3553)	True	
2.0.0-alpha-2	False	
update: allow parser to be relative to config (fixes #4985)	True	
fix: `no-var` does not fix if causes referenceerror (fixes #7950) (#7953)	True	
fix: `no-unused-expressions` with `allowshortcircuit` false positive if left has no effect (fixes #3675)	False	
fix: space-unary-ops flags expressions starting w/ keyword (fixes #2764)	False	
reporting function complexity on function:after and using array push/pop to handle nesting	True	
docs: fix typo	False	
0.1.3	False	
docs: update sort-keys doc to define natural ordering (fixes #9043) (#9045)	True	
fix: extends chain (fixes #5411)- i added a parameter `relativeto` to `load` and `applyextends`, thenset the directory of the config file to the parameter.	True	
new: no-magic-number rule (fixes #4027)	False	
docs: add brackets integration (#10813)	False	
rule: no-div-regex for catching ambiguous division operators in regexes	True	
docs: make grammatical tweaks in migration guide (#10278)	False	
upgrade: file-entry-cache@^1.3.1 (fixes #6816, refs #6780) (#6819)	False	
update: refactor eslinttester to fix dependency hell (fixes #602)	True	
fix: formatters keep trailing '.' if preceded by a space (fixes #9154) (#9247)	True	
build: package.json and changelog update for 2.8.0	True	
update: no-multiple-empty-lines fixer (fixes #6225) (#6226)	False	
docs: update block-spacing details (fixes #8743) (#9375)	False	
docs: add missing eslint directive comments in no-await-in-loop (#13673)	False	
new: add `globinputpaths` cliengine option (fixes #9972) (#10191)set to false to skip glob resolution of input file paths to lint (default: true). if false, each input file paths is assumed to be a non-glob path to an existing file.	True	
add release scripts to package.json	True	
docs: add missing quotes (#13714)as it was, the example was not a valid json.	True	
build: package.json and changelog update for 2.5.0	True	
sponsors: sync readme with website	True	
docs: adds import example for object-curly-newline rule (refs #12018) (#13177)	True	
fix: allow whitespace in rule message parameters. (fixes #3690)this will allow leading and trailing whitespace in rule message parameters. also making some other small improvements to boost performance a little.	True	
update: check template literal in no-script-url (#13775)* fix: check template literal in no-script-url* handle uppercase* handle tagged template literal* change to tolowercase* check only string literal	True	
fixes #289: no-empty-class flags regexps with... flagsfixes #292 as well	False	
fix: `valid-jsdoc` counts `return` for arrow expressions (fixes #2952)	True	
build: package.json and changelog update for 3.12.0	True	
breaking: remove deprecated rules (fixes #5032)	False	
build: add `.eslintignore` file for the project (fixes #3765)	True	
docs: incorrect link to related rule (#9477)`padding-line-between-statement` should be `padding-line-between-statements`	True	
fix: avoid `object-shorthand` crash with spread properties (fixes #7305) (#7306)* fix: avoid `object-shorthand` crash with spread properties (fixes #7305)* add additional tests for spread properties* update misleading comment about getters/setters	True	
docs: consistency changes (#15404)* docs: consistency changes* chore: review comments* chore: update marked* chore: more review comments	False	
update: behavior of --init (fixes #11105) (#11332)* update: reorder init menu (fixes #11105)* update: behavior of --init (fixes #11105)* update vue settings* add missing globals* update names of module options* false -> readonly* fix package.json merge conflict	True	
docs: disambiguate definition of update tag (#9584)	False	
update: use process @abstract when processing @return (fixes #5941) (#5945)allow @return(s) without return keyword in function when @abstract/virtual is present	False	
2.10.1	False	
update: add option "ignoreglobals" to camelcase rule (fixes #11716) (#12782)* update: add option "ignoreglobals" to camelcase rule (fixes 11716)* change reference check to look for global variable* fix behavior for global references and add tests* add more valid tests to camelcase rule* add more invalid tests for camelcase rule* don't ignore non-camelcase global variable used as object key* corrections to camelcase documentation	True	
docs: use github multiple pr/issue templates (#9911)	False	
fix: improve report location for array-bracket-spacing (#12653)	True	
fix: array-bracket-newline consistent error with comments (fixes #12416) (#12441)	False	
docs: added naming convention details to plugin usage (#12202)* docs: added naming convention details user guideadded clarification about the answer regarding #12190.* docs: reverted markdown list style to the original	True	
fixes #369: restrict unaryexpressions to delete in no-unused-expressions	True	
update: merge `no-reserved-keys` into `quote-props` (fixes #1539)	True	
3.2.0	False	
update api to use context.getfilename() instead of .filename.reverts method signature change to rulecontext since the filename isnow available in the eslint object.also reverts addition of filename property on rulecontext and replaces itwith passthrough getfilename() call.	True	
rule: sort variables. closes #457	True	
fix: `consistent-as-needed` mode with `keyword: true` (fixes #3636)	False	
update: no-restricted-imports custom message for patterns (fixes #11843) (#14580)* update: no-restricted-imports rule with custom messages (fixes #11843)* update docs/rules/no-restricted-imports.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update docs/rules/no-restricted-imports.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* code review feedback - better test cases and schema change* doc updates* added correct/incorrect examples to docsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
update: no-useless-escape checks template literals (fixes #7331) (#7332)	False	
build: separate site publishing form generation (fixes #1356)	True	
added documentation for the `no-bitwise` rule	True	
new: add spaced-line-comment rule (fixes #1345)	False	
update: added "properties" option to `id-length` rule to ignore property names. (fixes #3450)	True	
update: add autofix for `no-whitespace-before-property` (fixes #5927) (#5951)	True	
fix: support allman style for switch statement (fixes #3903)	True	
bug: fixes semi rule for variabledeclaration in forstatement	True	
fix: operator-assignment invalid autofix with adjacent tokens (#12483)	True	
fix reference to "css lint" in contributing documentation	True	
fix: don't require commas after rest properties (fixes #7297) (#7298)	False	
updating documentation to include tap format option	True	
update: add fixer for `one-var-declaration-per-line` (#7295)	True	
new: reportunuseddisabledirectives in config (refs eslint/rfcs#22) (#12151)	False	
docs: clean up sort-vars (#7045)	True	
fix: `no-multiple-empty-lines` duplicate errors at bof (fixes #6113) (#6114)	False	
docs: add code backticks to sentence in fixable rules	True	
rule: no-ternarythe `no-ternary` rule disallows the use of ternary operators, as some people believe they reduce code clarity. when the `no-ternary` rule is enabled the following patterns are considered warnings:var foo = isbar ? baz : qux;foo ? bar() : baz();function quux() {return foo ? bar : baz;}	True	
fix: no-redeclare should check node.js scope (fixes #2064)	False	
docs: distinguish examples in rules under possible errors part 2	False	
#681 apply all .eslintignore exclusions	False	
docs: updated contributor guidelines	True	
update: `no-use-before-define` false negative on for-in/of (fixes #6699) (#6719)	True	
update: add cliengine.getformatter() (fixes #1653)	True	
abstracted out cli options	False	
fix: multiline-comment-style rule add extra space after * (fixes #12785) (#12823)* fix: multiline-comment-style rule missed an extra space after *  (fixes #12785)* logic changed to handled only the edge case* test case added for the edge case* checks full offset and apply space after * only if there already isn't white space after it.* addeed new test case	True	
update: no-shadow-restricted-names lets unassigned vars shadow undefined (#11341)this updates the `no-shadow-restricted-names` to allow a variable to shadow `undefined` if that variable is never assigned a value (i.e. if the variable always actually has a value of `undefined`. the declaration `var undefined;` is occasionally used in pre-es5 environments where the `undefined` global is mutable, to ensure that the identifier `undefined` can reliably be used even if someone else tampered with the global. in general, a `var undefined;` declaration doesn't really violate the spirit of the rule, because it doesn't change the value of the identifier `undefined`.the goal of this change is to eliminate a false positive for codebases that support pre-es5 environments, so that the rule can be added to `eslint:recommended` in the future.	True	
build: don't create blogpost links from rule names within other words (#7754)this caused an issue in the latest blogpost (see [here](https://github.com/eslint/eslint.github.io/blob/0709ac422ed42219219887e9468ca867ed18f4f4/_posts/2016-12-12-eslint-v3.12.1-released.md#documentation)). the word "restricted" in a commit message caused a link to be created to the [`strict`](http://eslint.org/docs/rules/strict) rule documentation.this commit fixes the issue by requiring a word boundary to be present around the rule name for a url to be inserted.	True	
update: use regexpp's default ecmaversion in no-control-regex (#13969)	False	
revert "build: use karma-chrome-launcher to run tests (#10898)" (#10973)this reverts commit 9bc3f7c5a13b5d4ff8fa82ca3bce37129d1c7676.	True	
update: max in `max-statements-per-line` should be >=0 (fixes #6171) (#6172)	False	
build: changelog update for 4.18.1	True	
chore: update `glob-parent` (fixes #14879)(#14887)	False	
update: make no-implicit-coercion support autofixing. (fixes #7056) (#7061)	True	
sponsors: sync readme with website	True	
rename escape function to xmlescape in checkstyle formatter	True	
add wiki files to docs directory	True	
fix: handle singular case in rule-tester error message (fixes #5141)	False	
fix: `quotes` with `"backtick"` allows directive prologues (fixes #3132)	False	
allow yaml configuration files (fixes #491)	False	
build: changelog update for 7.26.0	True	
added information about runtime rules	True	
update: uniform messages for the rules in "complexity" section (#11759)	True	
fix: `prefer-const` false positive in a loop condition (fixes #5024)	False	
update: add fix for no-confusing-arrow (#8347)	True	
sponsors: sync readme with website	True	
update: enforceforclassmembers option to accessor-pairs (fixes #12063) (#12192)	True	
chore: enable consistent-meta-messages internal rule (#13487)	False	
sponsors: sync readme with website	True	
build: fix gensite task to work even if files are missing	True	
docs: update copyright policy	False	
docs: fix documentation on configuring eslint with commentsi had to double quote the plugin key on the comment, otherwise there's a json parse call that fails to properly parse the key.	True	
fix: fix error with one-var (fixes #10937) (#10938)	False	
docs: missing close rbracket in example	False	
fix: --reset will now properly ignore default rules in environments.json (fixes #800)	True	
1.6.0	False	
sponsors: sync readme with website	True	
fix: prefer-const autofix multiline assignment (fixes #10582) (#10987)	True	
docs: clarify that linter does not process configuration (fixes #7108) (#7110)	False	
docs: update readme with latest sponsors/team data (#11378)* docs: update readme with latest sponsors/team data* fix markdown formatting* realign team members table	True	
docs: fix a typo in the require-yield.md (#7652)	False	
docs: fix link in strict.md (fixes #5026)	False	
docs: fix substitution of {{ name }} (#9822)	False	
update: add explicit default option `always` for `eqeqeq` (refs #6144) (#6342)	True	
update: add treatundefinedasunspecified option (fixes #6026) (#6194)	False	
docs: update integrations.md (#15380)updated information about jetbrains ides.	True	
fix: typo in function comment parameters (#11111)	False	
new: extends in glob-based config (fixes #8813) (#11554)	False	
strip trailing underscores in camelcase rule - fixes #94	False	
6.0.1	False	
build: changelog update for 4.0.0-beta.0	True	
docs: small tweaks to cli documentation (fixes #6627) (#6642)	True	
fix: fails the test case if autofix made syntax error (fixes #11615) (#11798)	True	
breaking: rule no-empty also checking for empty catch blocks. (fixes #1841)	True	
fix: rewrite no-spaced-func rule (refs #1212)	False	
update: use `default` keyword in json schema (fixes #9929) (#11288)	True	
recommend using hasownproperty from object.prototype in guard-for-in docsthis was suggested by @renekriest on the mailing list.	True	
7.11.0	False	
fix: rule deprecation warnings did not consider all rules (#11044)this fixes a bug where rule deprecation warnings would only be generated for rules passed via the `--rule` flag on the command line, rather for all rules configured in a config file. it also addresses an issue where passing a nonexistent rule on the command line would cause cliengine to crash, which broke the eslint-canary build.	True	
6.0.0-alpha.1	False	
fix: no-magic-numbers should ignore parseint (fixes #4167)	False	
fix: false positive with await and ** in no-extra-parens (fixes #12739) (#13923)	False	
7.24.0	False	
added test for bug fix #582. test passes	True	
fixes #416: no-fallthrough flagging last case + reporting wrong line num	False	
feat: support arbitrary module namespace names in keyword-spacing (#15481)refs #15465	False	
docs: replace misleading cla links (#9133) (#9232)	False	
docs: remove old note about caching, add a new one (fixes #10739) (#10913)	False	
docs: add @not-an-aardvark to development team (#7279)	True	
chore: refactor directive comment processing (#10007)	True	
update: consecutive option for one-var (fixes #4680) (#9994)* update: consecutive option for one-var (fixes #4680)* fix failing test cases.* aceept review suggestions* accept review suggestions	True	
chore: fix the timing to define rules for tests (#8082)	True	
fixes #412: remove last remaining false positives in no-spaced-func	False	
upgrade: globals module to latest (fixes #1670)	True	
fix: `ruletester` didn't support `mocha --watch` (#7287)	False	
fix: avoid shell mangling during eslint --init (#8936)if you ran ???eslint --init??? and selected the google style guide, itwould end up calling execsync("npm i --save-dev eslint@>=4.1.1").because execsync spawns the child through a shell, this had the effectof running ???npm i --save-dev eslint@??? with its output redirected to anew file named ???=4.1.1???, leaving the wrong version in package.json.fix this by spawning processes using the cross-spawn package, whichavoids spawning a shell at all on unix and quotes the argumentsappropriately on windows.signed-off-by: anders kaseorg <andersk@mit.edu>	True	
7.28.0	False	
build: package.json and changelog update for 2.13.1	True	
revert "fix: '.md' to '.html' with anchors (fixes #1415)"	True	
update: refactor brace-style and fix inconsistencies (fixes #7869) (#7870)	True	
fix: space-before-keywords fails with super keyword (fixes #3946)	True	
new: no-restricted-globals rule implementation (fixes #3966)	False	
update: eslint reports parsing errors with clear prefix. (fixes #3555)	False	
upgrade: bump inquirer to ^7.0.0 (#12440)	True	
update: add autofix for `sort-vars` (#9496)* update: add autofix for `sort-vars`* chore: add test cases and small refactor for `sort-vars`	True	
chore: add prerequisites checklist to pr template (#12790)* chore: add prerequisites checklist to pr template* add friendly message at top* address feedback	True	
fix: consistent-docs-url crashes if meta.docs is empty (fixes #10722) (#10749)	False	
update: fix no-magic-numbers false negative with ignorearrayindexes (#12805)	False	
1.7.0	False	
fix: cli should not fail on account of ignored files (fixes #3978)this fixes the issue that came up in #3978. in a really crazy edge-case, butif a file has a problem that throws during `realpathsync` it will bring downthe process.if a file is known to be ignored, then we shouldn't even risk this possibility.	True	
feat: support arbitrary module namespace names in no-restricted-imports (#15491)refs #15465	False	
formatter: checkstylecreated checkstyle formatter based off of the example here: http://www.jshint.com/docs/config/`eslint -f checkstyle foo.js` will not produce output that looks like this:<?xml version="1.0" encoding="utf-8"?><checkstyle version="4.3"><file name="foo.js"><error line="5" column="10" severity="error" message="unexpected foo." /></file></checkstyle>fixes #14	True	
fix: `eslint:all` causes regression in 3.1.0 (fixes #6687) (#6696)	True	
fix: allow objectsinobjects exception when destructuring (fixes #6469) (#6470)	False	
sponsors: sync readme with website	True	
docs: update no-confusing-arrow with the new default option (#11886)* docs: update examples with the new default option (refs #11503)- remove redundant sentence from the summary as the default for allowparens is now true.- update examples according to the new default.* docs: fix examples- moved an example from correct to incorrect.- added a new correct example.	True	
docs: alphabetize project & company usage listthis prevents perceived favoritism and makes it clear how futureadditions should be made.	False	
new: space-before-function-paren rule (fixes #2028)	True	
build: fix phantomjs ci problems (fixes #5666)	True	
fix: allow escaped backreferences in `no-useless-escape` (fixes #7472) (#7474)	False	
build: generate formatter example docs (fixes #3560)	True	
docs: create parity between no-sequences examples	False	
docs: fix typos (#13204)* docs: fix typos* chore: fix typos	False	
adding information about yeomen generatornoticed that we are missing information about yeomen generator for new rules.	True	
docs: fix link format in prefer-arrow-callback.md (#9198)	True	
new: add commonjs environment (fixes #3377)	False	
docs: add `one-var` example with `for-loop` initializer (#15596)refs #15592	True	
build: changelog update for 6.5.1	True	
docs: fix eslint comment in no-inner-declarations examples (#13152)	False	
new: load plugins from configs (fixes #1115).	False	
new: add no-void rule (fixes #1017).	False	
update: omit setter param from no-unused-vars (fixes #2133)	False	
fix: destructured arguments should work in block-scoped-var (fixes #1996)	False	
chore: add funding field to package.json (#12543)	True	
docs: fix relative link (#15544)	False	
feat: add `allowreserved` parser option (#15387)* feat: add `allowreserved` parser optionfixes #15327* update package.json	True	
fix: optionally allow underscores in member names (#11972)	False	
fix: clarify color option (fixes #5928) (#5974)	False	
chore: add typescript-specific edge case tests to space-infix-ops (#10986)	True	
build: handle deprecated rules with no 'replacedby' (refs #7471) (#7494)	False	
docs: fixing broken links	False	
chore: update no-unused-vars caughterrors in eslint-config-eslint (#13351)	False	
chore: add link to rule change guidelines in "needs info" template (fixes #6829) (#6831)	True	
feat: `valid-typeof` always ban `undefined` (#15635)* feat: `valid-typeof`: always ban `undefined`* change error message and check definition of `undefined`* check string literal first* add suggestions* apply suggestions from code reviewco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* suggest string when `requirestringliterals` is onco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	False	
new: operator-linebreak rule (fixes #1405)	True	
fix: `indent` multi-line function call (fixes #4073, fixes #4075)	False	
docs: alphabetize rules lists	False	
fix: prefer-const when using destructuring assign (fixes #8308) (#10924)* fix: prefer-const when using destructuring assign (fixes #8308)* update prefer-const docs* fix documentation linting errors* implement recursive checking for memberexpressions* fix test typos* fix lint issue* include test for object rest element* use null check for spread elements	True	
correctly handle case with both finally and catch in no-empty	False	
docs: add missing brackets from code examples (#6700)	False	
docs: update require-await docs with exception (fixes #9540) (#11063)* fix: update require-await docs with exception (fixes #9540)* fix typos* fix more typos	False	
docs: clarify stylistic rule update policy (#14052)* docs: clarify stylistic rule update policyrefs eslint/tsc-meetings#237.* docs: add missing period in stylistic rule policyco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* docs: add stylistic rule policy to readme tocco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
chore: add missing `output` property to tests (#8195)	True	
fix: rewrite eol-last rule (fixes #1007) (fixes #1008)related: #997, https://github.com/eslint/eslint/issues/1005#issuecomment-46745516	False	
perf: move try-catch out of verify() function to allow v8 optimization (refs #574)	True	
4.12.1	False	
fixes #384: include builtin module list to avoid repl dependency	True	
docs: make cla notice more prominent	False	
update: report location of func-names (fixes #12022) (#12028)	False	
update: refactor tokens api (refs #1212)	True	
chore: avoid using globals in cliengine tests (#9242)	False	
build: pin file-entry-cache to avoid licence issue (refs #6816) (#6818)	True	
breaking: drop support for node < 4 (fixes #4483) (#6401)	True	
update: add autofix for `comma-dangle` (fixes #3805) (#5925)	True	
docs: add notice about `function` keyword in keyword-spacing (#12524)* docs: add notice about `function` keyword in keyword-spacing* docs: publishco-authored-by: kai cataldo <7041728+kaicataldo@users.noreply.github.com>	False	
docs: fix link on governance model	False	
chore: upgrade to espree@9.3.1 (#15600)	True	
docs: clearer plugin rule configuration (fixes #2022)	False	
fix: use single quotes in context.report messages (fixes #4845)while working on a different project that consumes the output of eslintand some plugins, we noticed that the quote styles emitted by theno-undef and no-unused-vars rule were different than the quote stylesemitted by some of the rules in our other plugins [0]. thisinconsistency led to a small bug in our project, so i wanted to smooththings out a bit for future developers.to make things more consistent, my first inclination was to change theplugin to match eslint's no-undef and no-unused-vars quote style, butupon investigation it seems there was a fair amount of inconsistency ineslint rules: some used double quotes, some used single quotes, andothers used backticks. i decided to convert all of these to singlequotes to be more consistent.there may be others that i have missed, but this commit should get thebulk of them.[0]: https://github.com/trotzig/import-js/issues/85#issuecomment-168332322	True	
upgrade: `chalk` to 1.0.0it's now finally stable and bumping it would help with deduping.https://github.com/sindresorhus/chalk/releases/tag/v1.0.0	True	
chore: fix invalid syntax in no-param-reassign test (#8360)the parser would have reported an error for this syntax when we did an espree release.	True	
add --no-eslintrc cli flag (ref #717)an addition to adding an on-by-default flag to enable or disableloading .eslintrc configuration files, this new flag fixes the testfor the --reset flag by cleaning up the polluted test environmentthat masked an error.	True	
chore: update jsdoc plugin and tweak rules in effect (#14814)* chore: remove explicit rule declarations that are already inherited* chore: add eslint-comments plugin* chore: add peerdeps to eslint-config-eslint* chore: avoid single-file disable directives in favor of setting to "off"* chore: remove rules already included by recommended configs	True	
fix: method name resolution in complexity rule (fixes #2049)	True	
3.16.1	False	
update: support logical assignments in code path analysis (refs #13569) (#13612)* update: support logical assignment in code path analysis (refs #13569)* fix minor formatting issues	True	
perf-related revert "fix: speed up tokens api (refs #1212)"this reverts commit 137b4ddcf1592ee5518defb6cc44207c22c51f7d.	True	
docs: remove illegal code fence	False	
fixes no-alert lint rule for non identifier calls	True	
docs: fix examples for no-restricted-properties (#7099)	True	
fix: crash in no-multi-spaces on empty array elements (fixes #1418)	False	
docs: add instructions for npm 2fa (refs #10631) (#10992)	True	
updated change log script to filter out merge messages	True	
chore: enable operator-linebreak on eslint codebase (#8064)this enables operator-linebreak on the eslint codebase, with the default configuration. all of the changes were made with eslint's autofixer.	True	
docs: edit arrow-parens as-needed explanation (fixes #11202) (#11569)	False	
add linting makefile.js (fixes #870)	False	
change .eslintingore to plain text (fixes #761)this commit adds support for plain text .eslintignore filescontaining one glob per line.  it maintains support for theexisting json format but adds a deprecation notice warning that itwill be removed in the future.	True	
fix: confusing error if plugins from config is not an array (#8888)	False	
chore: move lib/file-finder.js to lib/util/ (refs #10559) (#10695)	True	
chore: add internal rule that validates meta property (fixes #6383) (#6608)	False	
revert "update: allow empty arrow body (fixes #4411)"	False	
build: changelog update for 6.1.0	True	
update: space-in-brackets now always allows empty object and array literals to have no spaces (fixes #797)	True	
sponsors: sync readme with website	True	
chore: add node v16 (#14355)	False	
fix: keep sinon at ~1.10.3 (fixes #1406)	False	
docs: fix typo in array-bracket-spacing rule	False	
new: eslint-disable-next-line (fixes #5206)	False	
fix: indent rule errors with array of objects (fixes #3329)	False	
fix: env rules merging for command line config (fixes #1271)if the command line config file specifies environments, theirrules are merged before the individual rules in the same file.	True	
sponsors: sync readme with website	True	
new: add "consistent" option to the "curly" rule (fixes #2390)	True	
new: require-atomic-updates rule (fixes #10405) (#10655)this adds a `require-atomic-updates` rule, designed to prevent possible race conditions as described in https://github.com/eslint/eslint/issues/10405. specifically, the rule activates whenever (a) an assignment expression assigns to a new value that depends on its old value, and (b) the execution is interrupted with `await` or `yield` between reading the old value and assigning the new value. as an exception, the rule does not report an error if the assignment expression is assigning to a local variable, provided that the variable is never leaked outside of the surrounding function via a closure.	True	
build: changelog update for 4.14.0	True	
sponsors: sync readme with website	True	
build: compile espree's deps to es5 when generating site (fixes #11014) (#11015)previously, the build process would compile eslint's dependencies to es5 when generating a website bundle, but not espree's dependencies. now that espree has dependencies with es6 code, it's necessary to also compile espree's dependencies.	True	
update: add metadata to existing rules - batch 2 (refs #5417)add metadata to the existing rules. batch 2.	True	
docs: update dev setup, contributing, default-case descriptions	False	
new: support glob path on command line (fixes #3402)	False	
docs: fix the link to contributing page (#9727)	True	
update: add `prefertype` option to `valid-jsdoc` rule (fixes #3056)	True	
docs: update readme team and sponsors	True	
docs: fix typo in code snippet for no-unmodified-loop-condition rule	True	
fix: indent crash on sparse arrays with "off" option (fixes #9157) (#9166)	False	
fix: print error message in bin/eslint.js (fixes #9011) (#9041)	False	
new: 'ignorearrayindexes' option for 'no-magic-numbers' (fixes #4370)	True	
5.12.0	False	
build: changelog update for 4.17.0	True	
docs: add minor formatting improvement to paragraph about parsers (#8816)* consistently use code formatting for method names* avoid duplicating info about which method gets used	True	
update: report es2021 globals in no-extend-native (refs #13602) (#14177)	False	
docs: update no-void.md (#6799)small typo: is -> in; and commas	False	
chore: avoid unnecessary feature detection for symbol (#7992)the symbol global exists in all node versions supported by eslint.	True	
docs: fix typo in object-shorthand.md (#9066)	False	
docs: add mysticatea as reviewer	False	
rule: no native reassignment	False	
fix: remove -r alias for --rule (fixes #882)	True	
docs: describe values under extending configuration files (refs #6240) (#6336)	False	
fix: false positive in no-constant-condition (fixes #11306) (#11308)	False	
fix: disable colors during test run (fixes #1395)	False	
sponsors: sync readme with website	True	
new: shareable configs (fixes #2415)	False	
fix: wrong comment when module not found in config (fixes #8192) (#8196)	False	
docs: remove .eslintignore reference to transpiled file filtering (#8622)	True	
tweaking inline code formatting for "if, while, dowhile"	True	
fix: do not require a @return tag for @interface (fixes #4860)	True	
docs: add angularjs-eslint link into the integration doc	True	
rewrite block-scoped-var* fixes #693: block-scoped-var does not respect globals* fixes #701: block-scoped-var additionally enforcing that declarations come before use* fixes #702: block-scoped-var considers function expression names as usage, not declaration* fixes #703: block-scoped-var considers function expression parameters as usage, not declaration	True	
breaking: update eslint:recommended (fixes #4953)	False	
docs: reorder faq in readme	False	
build: package.json and changelog update for 3.16.0	True	
protecting private methodmoving `getlocalconfig()` off the `config.prototype` since it is notbeing unit tested and is not designed to be called publically.	True	
new: adds skipblanklines option to the no-trailing-spaces rule (fixes #2303)	True	
docs: add team and es7 info to readme	True	
upgrade: @eslint/esintrc and espree for bug fixes (refs #13878) (#13908)	True	
update: improve report location for getter-return (refs #12334) (#13164)	True	
update: autofix bug in lines-between-class-members (fixes #12391) (#12632)* fix: delete comment bug in lines-between-class-members (fixes #12391)* edit comments* keep padded comments* fix to check for semicolon token.* check token in padding, check end loc of before padding.* add jsdoc param type, fix typo* fix typo in test	True	
fix: apply plugin given in cli (fixes #3383)	False	
docs: updated contributor guide and dev env setup guide	True	
docs: document the second argument of `cliengine.executeontext()`	False	
docs: add class fields in no-multi-assign documentation (refs #14857) (#14907)	False	
fix: arrow-parens fixer gets tripped up with trailing comma in args (#8838)	False	
sponsors: sync readme with website	True	
sponsors: sync readme with website	True	
sponsors: sync readme with website	True	
fix line length per code conventionshttps://github.com/nzakas/eslint/wiki/code-conventions	False	
fix: ignored-paths for windows path (fixes #10687) (#10691)	True	
feat: update brace-style for class static blocks (#15322)* feat: update brace-style for class static blocksupdates the `brace-style` rule to apply to braces of class static blocks.refs #15016* add note about indentation	True	
fix: addressed linting errors	False	
update: add 'lexicalbindings' to no-implicit-globals and change messages (#11996)	True	
docs: clarify arrow function parens in no-extra-parens (fixes #8741) (#8822)	False	
fix: prevent `quotes` from fixing templates to directives (fixes #7610) (#7617)	True	
fix: no-multiple-empty-lines fails when empty line at eof (fixes #4214)	False	
fix: function expression doc in call expression (fixes #4964)	False	
chore: enable no-unneeded-ternary on eslint codebase (#7987)	False	
new: configuration via package.json (fixes #698)	True	
update: improve no-loop-func rule description and message (#11046)the rule does not disallow declaring functions in loops, it disallows making unsafe references inside said functions.the current description is misleading and might lead someone to dismiss the rule as irrelevant/unnecessary, when in fact it's protecting against a subtle but nasty source of bugs.	True	
update architecture.md	False	
new: add key-spacing rule (fixes #1280)	False	
fix: handle parentheses correctly in `yoda` fixer (fixes #7326) (#7327)	False	
fixing documentation	False	
upgrade: eslint-scope@4.0.3 (#11513)	False	
docs: fix typos for callback-return	True	
chore: replace deprecated calls to context - batch 4 (fixes #6029) (#6087)	True	
chore: remove dependency on is-resolvable (#11128)as is-resolvable is essentially a fancy if statement, and it is only used in one file, it seems unnecessary to include it as a dependency.(i've become paranoid due to what recently happened to [event-stream](https://github.com/dominictarr/event-stream/issues/116) and other similar issues)	True	
fix: `eslint-env` in comments had not been setting `ecmafeatures` (fixes #2134)	False	
chore: fix no-else-return lint error (refs #7986) (#7994)	False	
feat: implement rfc 2021-suppression-support (#15459)* feat: implement rfc 2021-suppression-support* fix --report-unused-disable-directives not working in some cases.* modify the jsdoc comments of applydirectives().* fix not working with processors* update the return type of _verifyxx methods* fix the issue that only string after the first -- is treated as justification* fix eslint-disable-next-line not working after /* eslint-disable */* refactor applydirectives() to process useddisabledirectives properly* fix another unused-disable-directive issue, and add more test cases to cover* apply the simpler implementation of applydirective()* update doc* filter out suppressedmessages in geterrorresults()* add meta for rules in suppressedmessages for getrulesmetaforresults()* update eslint.geterrorresults() to keep the current behavior	True	
docs: fix typo in `no-irregular-whitespace` (#15634)	False	
chore: refactor config hash caching in cliengine (#9260)previously, cliengine would store the last config object when executing on multiple files, as a performance optimization to avoid rehashing configs if the same config was used for multiple files.this can be better implemented by using a weakmap to map config objects to hash results.	True	
docs: add finally to space-after-keywords documentation	True	
new: add no-unexpected-multiline rule (fixes #746)	False	
docs: readme.md, prefer-const; change modified to reassigned	True	
upgrade: eslint-release@1.2.0 (#11073)this upgrades `eslint-release` to the latest version. notably, we no longer need to generate commit links in release blogposts because the links will now be generated automatically.	True	
fix: unignoring directories in .eslintignore (fixes #11684) (#11685)	True	
rule 'block-scoped-var' works correct when object inits (fixes #783)	False	
update: replace label and break with iife and return (fixes #4459)	False	
update: highlight last write reference for no-unused-vars (fixes #14324) (#14335)* fix: highlight last write reference for no-unused-vars (fixes #14324)* test: updates* chore: add test case* fix: apply suggestions* chore: update tests* chore: more tests	True	
docs: examples with arrow functions in no-return-assign (fixes #13135) (#13138)* chore: docs example for arrow function and tests (fixes #13135)* chore: removed wrong test case* chore: refactore snipper and added tests	True	
fix: arraysinobjects for object-curly-spacing (fixes #2752)this fix also adds the missing schema	True	
fix: add destructuring support to comma-dangle rule (fixes #2911)	True	
update: improve report location for space-before-function-paren (#13128)	True	
added no-warning-comments rulesquashed commits:* added no-warning-comments rule* extended documentation with some examples* warningterms are no longer passed as they are already in the context* rule is now configured with an additional configuration object* extended and rearranged documentation for no-warning-comments rule* added jsdoc comments	True	
chore: avoid internal sourcecode methods in linter tests (refs #9161) (#9223)	True	
update: add fixer for `no-extra-bind` (#7236)	True	
docs: fixed broken link and changed warning level to error level	True	
small changes, jsdoc is clarified	False	
chore: add eslint-plugin-eslint-plugin (#8198)	False	
docs: display team members in tables. (#10433)	False	
new: 'id-blacklist' rule (fixes #3358)	False	
update: do not ignore symbolic links (fixes #13551, fixes #13615) (#14126)* fix: do not ignore symbolic links (fixes #13551, fixes #13615)* fix: ignore broken symbolic links	False	
build: add sudo:false for travis (fixes #2582)	True	
fix: skip dot files and ignored dirs on traverse (fixes #1077, related to #814)	True	
corrected unused arguments	False	
update: add `callexpression` option for `indent` (fixes #5946) (#7189)	True	
chore: sort rules in eslint.json (fixes #6425) (#6426)	True	
add missing dependency	False	
4.2.0	False	
docs: correct typos in configuring.md (#7916)in the eqeqeq example, the word `warning` was usedinstead of `warn`	False	
update: add fixer for `prefer-destructuring` (fixes #11151) (#11301)	True	
fix: `no-warning-comments` can't be set via config comment (fixes #3619)	False	
fix: indent rule (fixes #1797, fixes #1799, fixes #2248, fixes #2343, fixes #2278, fixes #1800)	False	
3.0.0	False	
jsdoc for rules* fixing project documentation inconsistency for rules* added jsdoc for load-rules.js and rules.js	True	
update: deprecate prefer-reflect (fixes #7226) (#7464)	False	
docs: correct violations of ???variable declarations??? in code conventions (#9447)violated convention is ???using a single var statement with one variable per line.all lines after the first should be indented one level???. interpreted this asapplying to ???let??? and ???const???, too.	True	
fix: `no-fallthrough` with the code path analysis (refs #3530)	False	
new: add consistent and ..-as-needed to object-shorthand (fixes #5438) (#5439)	True	
add plain-english regexp description to no-empty-class rule	True	
fix: no-else-return autofix produces name collisions (fixes #11069) (#11867)	True	
update: fix 'skip' options in no-irregular-whitespace (fixes #13852) (#13853)* fix: no-irregular-whitespace skiptemplates false positive (fixes #13852)* add more tests	False	
slight reorganization of rule groups	False	
fixes incorrect reporting of missing semicolonthis fixes the incorrect reporting of missing semicolons when there is no whitespace between the end of a statement and the next token. the semicolon is already included in the tokens returned by `gettokens`, so grabbing one more character after would just grab a whitespace character. in this case because whitespace was not present it grabbed the closing curly, saw that it wasn't a semicolon and reported it as an error.`settimeout(function() {foo = "bar";});`fixes #121	True	
fix: no-fallthrough: continue affects control flow, too (fixes #1220)	True	
fix: track jsx global variable correctly (fixes #1534)	False	
6.4.0	False	
fix: ensure piped in code will trigger correct errors (fixes #2154)	False	
build: ensure url fragments remain in documentation links (fixes #10717) (#10720)	False	
chore: don't check program.start in sourcecode#getcomments (refs #14744) (#14748)	True	
new: rule no-throw-literal added (fixes #1791)	False	
new: add serviceworker environment (fixes #2557)	False	
new: add eslintignore support to package.json (fixes #8458) (#8690)	True	
add stylish formatter and make it default. fixes #517https://github.com/sindresorhus/eslint-stylish	True	
chore: add metadata to existing rules - batch 5 (refs #5417) (#5944)chore: add metadata to existing rules - batch 5 (refs #5417)	True	
docs: remove box as a sponsor (#6529)	True	
0.14.1	False	
update: no-tabs allowindentationtabs option (fixes #10256) (#10925)	False	
new: add es6 environment (fixes #1864, fixes #1944)	False	
build: changelog update for 5.0.0	True	
fix: add for-in to `curly` rule (fixes #4436)	True	
build: compile deps to es5 when generating browser file (fixes #11504) (#11505)* build: compile deps to es5 when generating browser file (fixes #11504)* don't compile lodash	True	
new: add no-confusing-arrow rule (refs #4417)	False	
docs: remove assumption about the rule configthe sub sentence i used was assuming that this rule is configured by an eslint configuration file. this is not right. i suggest removing this part.	False	
fix: no-invalid-regexp disallows \ at end of pattern (fixes #10861) (#10920)	False	
fix: no-useless-escape \b regex escape (fixes #5750)	False	
fixes #437: fragile no-extend-native rulei've also changed it to only affect the native constructors (not allproperties of the global object) and support ctor['prototype'] access.	True	
sponsors: sync readme with website	True	
chore: rename utils for consistency (#10727)* chore: rename test files for consistency (refs #10559)* chore: rename util => utils for consistency	True	
chore: enable for-direction rule on eslint codebase (#8853)	True	
docs: fix badge in eslint-config-eslint readme (#8954)the badge in the `eslint-config-eslint` readme correctly links to the `eslint-config-eslint` package, but it displays the image for `eslint`. as a result, the displayed version number is incorrect (it displays the version of the latest `eslint` release, not the latest `eslint-config-eslint` release).	True	
fix to use gettokens and add test for memberexpression usage	True	
fix: prefer-const rule crashing on array destructuring (fixes #10520) (#10527)* chore: add more tests for prefer-const ruleadds coverage for the case where the code contains array-destructuringassignment with 'ignored values'.* fix: prefer-const rule crashing on array destructuring (fixes #10520)the crash is triggered by using array destructuring assignment with anarray containing empty (ignored) elements due to attempting to read thename property of null.* chore: add more invalid test cases for prefer-const	True	
docs: minor modification to code comments for clarity (#9821)	True	
docs: added another textmate 2 bundle. (#12580)ordered the textmate 2 bundles by last release date.	False	
docs: add link to chat room in readme primary links	True	
docs: distinguish examples in rules under stylistic issues part 1	False	
docs: fix incorrect selector examples (#8278)	True	
fix: check for concatenation in no-throw-literal (fixes #3099, fixes #3101)previously the rule only checked for a single literal.this change will only allow expressions which might be an object, and prevents literals or primitaves.	True	
update: treat all literals like boolean literal in no-constant-condition (#13245)* fix: treet all literals like boolean literal in no-constant-condition* fix unexpected short circuit* handle bigin/regex on unsupported runtime* fix bigint tests* simplify literal truthiness* handle regex literal in unsupported environments* update lib/rules/no-constant-condition.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	False	
update: add support for allman to brace-style rule, brackets on newline (fixes #3347)	True	
completing conversion of rule's tests to mocha	True	
upgrade: eslint-plugin-node & eslint-plugin (#11067)	False	
refactor variable name lookup into a separate function	True	
updated architecture documentation	False	
fix: object-shorthand ignoreconstructors option (fixes #11595) (#11596)	True	
removed unnecessary rules.js test.two prs were merged that both introduced test code that tested the same piece of functionality. i'm removing one.	False	
docs: add documentation about custom-formatters. (fixes #1260)	True	
build: package.json and changelog update for 3.4.0	True	
feat: add `allowproperties` option to require-atomic-updates (#15238)* feat: add `allowproperties` option to require-atomic-updatesfixes #11899* fix description of the option* update docs/rules/require-atomic-updates.mdco-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>* update docs/rules/require-atomic-updates.mdco-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>* update docs/rules/require-atomic-updates.mdco-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>* update docs/rules/require-atomic-updates.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* update docs* update docsco-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>co-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>	True	
chore: improve coverage in lib/*.js (#9130)* chore: remove dead code path in ast-utilsthis was checking to see if a function is the left child of an assignmentexpression, which isn't possible.* chore: fix incorrect test in cli.jsthis test was intended to verify that --print-config was disallowed with --stdin. however, the test didn't have an argument with --print-config, so the command failed option validation and never made it to the logic that it was supposed to test.* chore: avoid dead code branches in config logic* chore: remove dead code in ignored-paths.js* chore: remove dead code path for environments* chore: add istanbul ignore comment for sanity check error* chore: remove dead code from getruleseverity* chore: improve coverage of linter.markvariableasused* chore: remove dead code branch in parseroptions handling* chore: improve coverage of linter.verifyandfix* chore: improve coverage of rulecontext fix merging	True	
build + docs: adding generated resource links to rule docs (fixes #1021)	True	
1.4.0	False	
chore: use `actions/setup-node@v2` (#14816)* chore: use `actions/setup-node@v2`* chore: use actions/setup-node@v2 77937d8	False	
docs: update issue templates (#11163)this updates the issue templates to add the appropriate labels to new issues depending on which template was used.this uses a recently-shipped github feature: https://blog.github.com/changelog/2018-12-05-issue-template-automation-improvements/	True	
sponsors: sync readme with website	True	
8.4.0	False	
new: implement autofixing (fixes #3134)	True	
added rule to check for missing semicolons (fixes #9)	True	
docs: update int rule level to string (#13483)	True	
docs: update new rules policies (#13343)* docs: update new rules policies* update new rule issue template	False	
sponsors: sync readme with website	True	
removing nasty leading underscores	False	
fix: report columns for `eol-last` correctly (fixes #7136) (#7149)	True	
fix: cache is basically not working (fixes #4008)	False	
chore: update sinon calls to deprecated api. (#8310)	True	
update: remove globals present only in jasmine plugins (fixes #1326)	False	
fix: dot-notation autofix produces syntax errors for object called "let" (#8807)the `dot-notation` autofixer previously fixed code like `let.if` to `let["if"]`. however, this is a syntax error because a statement beginning with `let[` is parsed as the start of a variable declaration, not a memberexpression.	True	
chore: refactor to use es6 classes (part 2)(refs #7849) (#7847)	True	
rule: no-self-compare	False	
chore: provide debug log for parser errors (#12474)	True	
docs: add missing deprecation notices for jsdoc rules (#11171)the rules were deprecated in the last release, but the deprecation notices in the documentation are not autogenerated.	True	
fix: correct no-multiple-empty-lines at eof (fixes #4140)	False	
6.7.0	False	
docs: reference .eslintrc.* in contributing docs (fixes #4532)	False	
build: package.json and changelog update for 3.2.0	True	
updated documentation to reflect test changes (refs #417)	True	
build: changelog update for 4.6.1	True	
docs: use backticks for option heading	True	
fix: `no-useless-rename` false positive in babel-eslint (fixes #6266) (#6290)	False	
docs: add table of contents to node.js api docs (#9785)also standardize headers to classname#methodname so that it's easier tokeep track of the context.	True	
chore: avoid monkeypatching linter instances in ruletester (#9276)	False	
docs: fix typo in no-debugger (#7019)	False	
build: package.json and changelog update for 3.10.2	True	
update: separate options for block and line comments in `spaced-comment` rule (fixes #2897)	True	
fix: `indent` does not check functiondeclaration nodes properly (fixes #3173)	False	
chore: upgrade to eslint-visitor-keys@3.3.0 (#15599)	True	
0.7.4	False	
added tests and test cases for a few files	True	
fix: preserve whitespace in multiline-comment-style (fixes #12312) (#12316)* fix: preserve whitespace in multiline-comment-style (fixes #12312)* add support for preserving whitespace in other comment types* handle blank lines in starred-block comments correctly* add more tests* fix starred-block alignment/missing star fixer* use regexp to check for whitespace-only lines* fix up comments	True	
fix: check spacing of class methods (fixes #1989)	False	
chore: switch `new syntax` issue template to forms (#15480)* chore: switch `new syntax` issue template to forms* chore: fix template* chore: use checkboxes* chore: fix typo	True	
upgrade: most dev dependencies	False	
update: support switch statements in padded-blocks (fixes #5056)	False	
fix: add schema to `global-require` rule (fixes #3923)	True	
docs: fix inconsistent spacing inside block comment (#6768)other block comments in this file follow the pattern of a space after the opening `/*` and before the closing `*/`; this one was spaced inconsistently so i modified it to match the spacing shown on the others.	True	
update: add importdeclaration option to indent rule (#8955)* update: add option to adjust indent on import declarations, with tests* docs: add docs for importdeclaration option* chore: add tests and examples for importdeclaration option as a number	True	
docs: correct syntax for default ignores and `.eslintignore` example (#6118)	True	
fix: space-in-brackets import declaration  (fixes #2378)	False	
performance jake task	True	
fix: add class options for `lines-around-comment` (fixes #8564) (#8565)	True	
new: add a comment length option to the max-len rule (fixes #4665)this allows for separate line length restrictions for source and comments.for example, allowing source lines to be up to 100 characters wide, whilerestricting comments to 80 for readability.	True	
ensure that bound function expressions are reported as being used (fixes #510)	False	
upgrade: debug 4.0.1 > 4.3.2 (#14892)* updated debug library version to avoid vulnerabilities scan error* update	True	
docs: fix possible typo (#10060)	False	
fix: invalid token checking in computed-property-spacing (fixes #12198) (#12533)* fix: invalid token checking in computed-property-spacing (fixes #12198)* add more test cases	True	
chore: enable no-else-return on eslint codebase (#7986)* chore: enable no-else-return on eslint codebase* move a comment after a brace	False	
update: amend keyword-spacing to validate `default` keywords (#11097)* fix: amend keyword-spacing to validate `default` keywords* chore: add keyword-spacing test for `default` keyword	True	
chore: eslint-config-eslint enable comma-dangle functions: "never" (#11434)	False	
sponsors: sync readme with website	True	
docs: dedent needlessly indented example in getter-return docs (#15363)	False	
build: changelog update for 7.15.0	True	
fix: parse later es files in `eslint --init` (fixes #10003) (#10378)* fix: parse later es files in `eslint --init` (fixes #10003)* update: remove question of asking es2015 globals	False	
docs: add more examples for no-func-assign (fixes #13705) (#13777)	True	
update: added shared builtins list (fixes #2972)	False	
update: add missing `additionalproperties: false` to some rules' schema (#13198)	True	
docs: fix missing footnote	False	
docs: use `object.prototype` in examples (#7755)* update: using object.prototype for no-prototype-builtins example* update: adding usages of object.prototype and array.prototype to docs	True	
fix: rule no-duplicate-case problem with callexpressions. (fixes #2499)	False	
sponsors: sync readme with website	True	
0.11.0	False	
docs: add angularjs-eslint link into the integration docupdate previous commit. bad copy/paste	True	
docs: improve the documentation for the autofix api (#7716)* docs: improve the documentation for the autofix apisome of the guidelines for fixes were incorrect or misleading now that multipass autofix exists.* clarify that fixes from the same rule can conflict with each other	True	
docs: fix incorrect environment ref. in rules in plugins. (fixes #5421)	False	
chore: use precalculated counts in stylish formatter (#8251)	True	
1.5.1	False	
fix: sort-keys in an object that contains spread (fixes #10261) (#10495)	True	
sponsors: sync readme with website	True	
build: package.json and changelog update for 2.11.0	True	
update: fixes multiline no-warning-comments rule. (fixes #9884) (#10381)	False	
fix missing code exittitle says all	False	
fix: validate the type of severity level (fixes #5499)currently, for example, [ "error" ] is also regarded as a valid severity. this is a totally unexpected behavior.	True	
breaking: check unnamed default export in func-names (fixes #12194) (#12195)* breaking: check unnamed default export in func-names (fixes #12194)* docs: add that default export functions are checked* revert "docs: add that default export functions are checked"this reverts commit 036ce5335f65a34bcadd54e8b2457daaca964eb0.* docs: add a note that export default functions needs name	False	
docs: make it clear which rules are recommended (fixes #3398)	False	
fix: broken jsx test	False	
docs: add documentation for /* exported */ (fixes #7998) (#8065)added information about using line comment and a code example forcorrect usage.	True	
fix: add parentheses in no-extra-boolean-cast autofixer (fixes #7912) (#7914)	True	
3.3.1	False	
fix: no-self-assign false positive with rest and spread in array (#12099)	False	
update: add an ignoreregexpliterals option to max-len (fixes #3229) (#7346)	True	
build: add jsdoc generation (fixes #1363)	False	
update: add fixer for dot-notation (fixes #7014) (#7054)	True	
build: bundle dependencies in package.json (fixes #5013)this adds the bundleddependencies section to package.json and alsoupgrades eslint-release to the version that will update the bundleddependencies as part of the release.	True	
change message for brace-style rule (fixes #490)	True	
feat: update padded-blocks for class static blocks (#15333)updates the `padded-blocks` rule to apply to class static blocks.refs #15016	True	
fix: no-extra-parens crash when code is "((let))" (#11444)this issue was detected by the fuzzer in https://travis-ci.org/eslint/eslint/jobs/498031437.	False	
chore: reorganize code structure of utilities (refs #10599) (#10680)* chore: mv lib/ast-utils => lib/util/ast-utils (refs #10559)* chore: rename *-util => *-utils (refs #10559)	False	
update: remove preferglobal from package.json (fixes #1877)	True	
8.6.0	False	
chore: enable no-prototype-builtins in codebase (fixes #10660) (#10664)* chore: enable no-prototype-builtins in codebase* chore: fix hasown linting errors* chore: hasown => object.prototype.hasownproperty* chore: rm hasown* chore: add tests	True	
fix: trailing commas in object-curly-spacing for import/export (fixes #3324)	True	
add escaping \= test	False	
fix: failed to parse `/*eslint` comments by colon (fixes #6224) (#6258)it came to use optionator to parse the comments by the same way asparsing cli option. but optionator cannot parse commaless notation, sothere is a fallback for that.	True	
fix fall-through rule with nested switch statements (fixes #430)	False	
build: fix prerelease logic in blog post generation (fixes #10578) (#10581)	False	
split gh-332 rule into space-unary-word-ops and space-return-throw-case	True	
docs: place id-match rule at correct place in readme.md (fixes #3245)	False	
update: fix uglified object align in key-spacing (fixes #11414) (#12472)	False	
7.18.0	False	
fix: array-bracket-spacing for empty array (fixes #4141)	True	
docs: small typo fix in no-useless-call documentation	False	
docs: add the "fixable" icon for `no-useless-return` (#7480)	True	
docs: add contributor model (fixes #1341)	True	
update: check extra boolean calls in no-extra-boolean-cast (fixes #3650)	False	
sponsors: sync readme with website	True	
fix: only remove arrow before body in object-shorthand (fixes #11305) (#11307)	True	
update: add fixer for newline-before-return (fixes #5958) (#7050)* update: add fixer for newline-before-return (fixes #5958)* update: improve canfix() logic and add more tests (refs #5958)* update: make fixer a bit smarter and add more tests (refs #5958)* update: update docs and fix coding style issue (refs #5958)	True	
update: quote var name in `no-unused-vars` error messages (refs #3526)	False	
update: add fixer for new-parens (fixes #6994) (#7047)	True	
docs: fix incorrect `api.verify` jsdoc for `config` param (refs #5104)	True	
fix: `space-after-keywords` not working for `catch` (fixes #3654)	True	
add quotes rule and test coverage for configuration options	True	
chore: clean up new issue workflow (#14040)	False	
fix: ensure --stdin flag works when stdin is piped asynchronously (#10393)	False	
fix: improves performance (refs #3530)	True	
docs: ensure cli doc sections match command line help order (#10144)* docs: moving --fix, --fix-dry-run to new "fixing problems" section* docs: moving "caching" section lower in cli docs* docs: extracting options related to inline config comments	True	
scripts/bundle: output bundle+map to /build directory	True	
new: cliengine#getrules() (refs #6582) (#9782)	False	
docs: clarify prefer-destructuring array/object difference (fixes #9970) (#11851)	False	
minor style changes to lib/rules/space-infix-ops.js as requested in #444	True	
docs: update rule descriptions (fixes #5912) (#7152)	False	
8.0.0-beta.2	False	
docs: changing npm to npm	True	
update: improve report location for no-empty-function (refs #12334) (#13121)	True	
docs: update readme team and sponsors	True	
update: add no-magic-numbers 'ignoredefaultvalues' option (#12611)* fix: add no-magic-numbers 'ignoredefaultvalues' option* test: add cases for `no-magic-numbers` array destructuring* chore: consistent function parameters for `no-magic-numbers`* test: default option `no-magic-numbers`* docs: add `no-magic-numbers` array destructuring example* fix: add `no-magic-numbers` additional check* test: add `no-magic-numbers` test* docs: fix typo* chore: move ignoredefaultvalues option check* docs: add line-break* test: add test for default function parameter values* chore: rename function* docs: update jsdoc	True	
fix: ignore unused params for args: 'none' (fixes #1026)	True	
docs: remove `docs` script (fixes #14288) (#14971)* chore: remove `docs` script (fixes #14288)* chore: remove `docs` script* docs: remove `npm run docs` reference	False	
fix: --init with vue.js failed (fixes #11970) (#11985)* fix: --init with vue.js failed (fixes #11970)* move 'naming.js' to 'shared' directory* use naming utility	True	
docs: 3.0.0 migration guide (#6521)	False	
docs: fixed a typo on lines-between-class-members doc (#9603)	False	
sponsors: sync readme with website	True	
docs: fix typo	False	
fix: handle comment lines in newline-after-var (fixed #2237)this fixes a regression in how the `newline-after-var` rule handlescomments on the next line. since switching from a regex to token-basedinspection, if the line after a `var` declaration contained a comment,this was not seen by the rule and would cause a false-positive. thesolution here was to add some additional checks for the presence of acomment if no token exists on the next line.* expand test examples to catch additional corner cases* dry-up tests	True	
fix: arrow-parens & destructuring/default params (fixes #3353)	False	
docs: correction in prefer-reflect docs (fixes #7069) (#7150)	False	
breaking: traverse into type annotations (fixes #7129) (#8365)	True	
docs: remove note outdated in 1.0.0remove "off by default" that has no meaning since all rules are off by default since 1.0.0.	True	
fix: valid-jsdoc no more warning for multi-level params (fixes #925)	True	
docs: create support.md (#9031)github now displays a notice about [`support.md` files](https://github.com/blog/2400-support-file-support) when people create new issues (similar to `contributing.md` files). this commit adds a file encouraging people to ask questions in the gitter channel.	True	
removed unicode zero width space character from messages (fixes #857)	False	
simplify no-empty-class rule	False	
fix: `--no-ignore` should not un-ignore default ignores (fixes #5547)	False	
docs: update installation instructions on readme (#6569)	False	
removed console.log in tests.note: check why `npm test` didn't catch these.	True	
new: `no-return-await` rule. (fixes #7537) (#7547)	False	
update: no-useless-escape / exact locations of errors (fixes #5751)	False	
rule 'no-unused-var' in functional expression with identifier (fixes #775)	False	
chore: make the `object-shorthand` tests more readable (#7580)	False	
8.7.0	False	
docs: clarify that `es6` env also sets `ecmaversion` to 6 (#7067)reading the docs, it is not clear why eslint's parser will stop complaining about es6 specifics when `es6` env is set and `ecmaversion: 6` is omitted.it is actually done [on purpose](https://github.com/eslint/eslint/blob/e1187285f137d685bcfc9e2a771fa059ef9637a9/conf/environments.js#l98-l103), but the documentation didn't mention this at all.	True	
fix: scoping issues for no-unused-vars (fixes #1741)	True	
docs: documents the functionality to load a custom formatter from a file	True	
docs: fix no-invalid-regexp docs regarding ecmaversion (#13991)	False	
update: support multiple fixes in a report (fixes #7348) (#8101)	False	
build: package.json and changelog update for 3.17.0	True	
update: fix ignored nodes in indent rule when using tabs (fixes #9392) (#9393)when a node is ignored by the indent rule, it ought not to matterhow it???s indented. but the ignoring of nodes was implemented insuch a way that the *type* of indentation (tabs vs spaces) wasbeing checked. for example in "tab" mode, an ignored line indentedby four spaces would cause the error ???expected indentation of 4 tabsbut found 4 spaces???.in particular, this is a problem with ???tabs for indentation, spacesfor alignment??? styles, where we want to allow code like:var x = 1,y = 2;where the second line is aligned using four spaces.the implementation is taken from not-an-aardvark???s commenthttps://github.com/eslint/eslint/pull/9393#pullrequestreview-67356950all tests pass.fixes #9392.	True	
update: fix indentation of jsxexpressioncontainer contents (fixes #8832) (#8850)previously, the `indent` rule handled jsxexpressioncontainer nodes by only setting the first token's offset, incorrectly assuming that all the other tokens in the expression would be dependent on the first token. (this had been a problem since jsx support was added to the rule.) as a result of an unrelated, correct fix in b5a70b4e8c20dc1ea3e31137706fc20da339f379, the bug ended up also appearing for binaryexpressions in jsxexpressioncontainers.this commit updates the jsxexpression logic to offset all of its inner tokens.	True	
fix: check yieldexpression argument in no-extra-parens (fixes #4608)	False	
fix: make the default of `options.cwd` in runtime (fixes #5694)	False	
fix: `no-loop-func` crashed (fixes #6130) (#6138)	False	
docs: corrected noun to verb. (#9438)	True	
docs: fix example for require-atomic-updates (#14562)	True	
ci: remove node 16 ci prerelease workaround (#14935)refs #14933* build: upgrade to v8-compatible jsdoc plugin* build: remove npm force install in cithis reverts the change from #14933 now that all peer dependencies arevalid with eslint v8.0.0.	True	
3.14.0	False	
update: suggest missing rule in flat config (fixes #14027) (#15074)* update: suggest missing rule in flat config (fixes #14027)* switch to older syntax* fix error messages	True	
update: check computed keys in no-prototype-builtins (fixes #13088) (#13755)	True	
fix: consider comments in object-curly-spacing (fixes #11656) (#11657)	False	
3.1.0	False	
chore: ignore deprecated rules in fuzz tests (#11710)	False	
readme: remove stray asteriskit got rendered as literal inline text at the end ofthe preceding item.	False	
updated config file with new no-caller id	False	
rule: function has too many parameters	True	
feat: handle logical assignment in no-self-assign (#14152)* fix: handle logical assignment in no-self-assign* ignore `&=` and `|=`	False	
fix: escaping for square brackets in ignore patterns (#15666)* fix: escaping for square brackets in ignore patternsfixes #15642* remove file to fix its filename* re-add file to fix its filename* use github:eslint/eslintrc main branch* use @eslint/eslintrc@1.2.1	True	
fix: `comma-dangle` was confused by type annotations (fixes #7370) (#7372)	False	
build: gensite target supports rule removal (refs #1898)generated documentation will now include the version in which a rule wasremoved, if applicable. i included a step to convert the `versions.json`cache in a backwards-compatible way, so the cache won't need to beregenerated for those of you who already have it.conveniently, `space-unary-word-ops` was already removed, so i used itas a dry run and brought it in sync with the removal sequence in #1898.	True	
build: add ci release scripts (fixes #6884) (#6885)	False	
new: no-unsafe-optional-chaining rule (fixes #13431) (#13859)* new: `no-unsafe-optional-chaining` rule (fixes #13431)* add checking 'in'* fix type & add example* add check* add examples* make it handle logical expression* fix logical error* fix typo* fix typo* fix tests format and false positive* fix review- add test cases (*=, /=)- improve rule details doc- fix wrong example- add unary, assignment operation test cases- edit test cases - move optional chain to right side- change to use set- fix jsdoc typo and type- add examples on docs- handle conditional, sequence expressions- remove useless check- fix doc- add test cases- fix typo* fix title* edit description* fix docs* fix review- add test cases- fix docs* add example* add example* handle await* add test cases, fix docs* fix test cases, docs	True	
feat: fix logic for top-level `this` in no-invalid-this and no-eval (#15712)* feat: fix logic for top-level `this` in no-invalid-this and no-eval* add test with `this.eval` to no-invalid-this* update docs to clarify `no-invalid-this`	True	
fix: always make globals an object (fixes #1049)	False	
update: turn on comma-style for project (fixes #1316)	True	
docs: fix minor typo in no-extra-parens doc (#6992)	False	
docs: remove broken links to jslinterrors.com (fixes #7368) (#7369)	True	
update: add option "allowinparentheses" to no-sequences (fixes #14197) (#14199)* new: add option "allowinparentheses" to rule "no-sequences"* added documentation* [no-equence]: switch default of "allowinparentheses" to true* restored removed sentence* changes from code review* code review	True	
docs: add duplicate keys limitation to accessor-pairs (#12124)	True	
fix: set proper exit code for node > 0.10 (fixes #4691)	True	
fix: `quote-props` false positive on certain keys (fixes #5532)this patch ensures the "tokenized" version of the key is an exact matchto avoid any false positives when the key includes spaces around of itor has "comment blocks" in it such as `//..` or `/*..*/`	True	
docs: update rollup integrations (#15142)* update rollup integrationsupdate rollup eslint plugin* docs: update rollup integrationspdate rollup eslint plugin	False	
update: use xml-escape instead of inline helper (ref #848)	False	
update: fix no-restricted-imports importnames reporting (fixes #12282) (#12711)* process importnames* update test cases* fix rebase issue* update importnames logic* remove useless funcs, update tests* fix naming, fix everything imported w/o importnames* fix typo, fix specifier clause, fix rebase issue* process importnames with the same name* clean code in receiving specifier data, remove debug* fix type def, add empty name check, replace concat with push	False	
docs: fix default value of `keyword-spacing`'s overrides option.from https://gitter.im/eslint/eslint?at=56c06da7fa79226456fa478e	False	
fix: stop path analyzer on unknown nodes (#13305)	True	
update: allow to omit semi for one-line blocks (fixes #4385)	True	
update: adding some tests for no-redeclare to test named functions (fixes #2953)	True	
feat: update eslint-scope to ignore `"use strict"` directives in es3 (#15595)* feat: update eslint-scope to ignore `"use strict"` directives in es3* update package.json with eslint-scope@7.1.1	True	
no extend native	False	
docs: clarify that ignorepattern should be a string (refs #13029) (#13718)* docs: clarify that ignorepattern should be a string (refs #13029)* clarify ignorepattern option adds to default patterns	True	
chore: add missing `ecmaversion` 2020/11 type value (#12833)this is a minor fix for shared type definition.thanks!	True	
match messages to js[lh]int where appropriate, and ensure consistent message formatting (closes #163)	True	
docs: add modified variable examples for no-loop-func (fixes #9527) (#10098)	True	
upgrade: old chalk.js deprecated method (fixes #5716)	False	
docs: add info about closing accepted issues to docs (fixes #6979) (#7089)	True	
rule: no-inner-declarations (fixes #587)adds a new rule, `no-inner-declarations`, that enforces placingfunction declarations and, optionally, variable declarations at theroot level of the program body or a function body. by default,misplaced function declarations result in an error, and variabledeclarations are not checked.	True	
fix: add tests to cover default magic number tests (fixes #5385)	True	
show npm version	False	
fix: `quote-props` should not crash for object rest spread syntax (fixes #3595)	True	
fix: add comma-dangle allow-multiline (fixes #1984)	False	
fix: consider tabs for space-in-parens rule (fixes #2191)	True	
build: add perf check into travis build to better monitor performanceregressions (fixes #732)	True	
fix fatal error handling to work more like regular error handling	True	
breaking: remove jsx support from no-undef (fixes #2093)	False	
docs: language tweaks	False	
update: add a couple jsx tests	False	
fixes lint rules for unchecked test file	True	
add no-extra-semi to configuration (fixes #386)	True	
fix: allow fallthrough comment inside block (fixes #14701) (#14702)* fix: allow fallthrough comment inside block (fixes #14701)* address comments	False	
docs: update readme team and sponsors	True	
upgrade: espree@^3.4.2 (#8526)since i had espree@>=3.4.0 <3.4.2 on my system, npm install never updated the package. with eslint freezing the parser options/config object, seems we are relying on 3.4.2's bugfix not to set ecmafeatures.impliedstrict. so this dependency really should be at 3.4.2.	True	
upgrade istanbul	False	
build: use browserify to create browser-ready eslint (fixes #119)	True	
fixing indent in gruntfile	False	
no-unused-expressions rule: add test and doc mention for `a && b()`	True	
check for empty switch statements with no cases.	True	
fix: prefer-destructuring error with computed properties (fixes #9784) (#9817)	False	
fix: column position in space-infix-ops rule (fixes #2354)	False	
update: add event to browser globals (fixes #1474)	True	
chore: enable max-statements-per-line on eslint codebase (#8321)	False	
docs: improve options description in `no-params-reassign`	False	
fix: fixer to not overlap ranges among fix objects (fixes #4321)	True	
build: changelog update for 8.4.1	True	
chore: remove loose-parser tests (fixes #14315) (#14569)	False	
chore: ignore `yarn-error.log` and `.pnpm-debug.log` (#14925)	False	
docs: update semantic versioning policy (#6935)	False	
update: prefer-const; change modified to reassigned (fixes #5350)	True	
new: add context.report({ messageid }) (fixes #6740) (#9165)* new: add context.report({ messageid }) (fixes #6740)* chore: extract out loop variables in rule-tester.js* new: ruletester checks the messageid of expected errors* chore: extract the {{ }} substitutions into a separate file* chore: test interpolate()* docs: document messageids* fix: node 4 compatibility* docs: specify `node` in messageids example* update: throw if a rule uses a messageid, but doesn???t have meta.messages* fix: don???t mutate the descriptor* chore: use hop instead of object.keys().indexof* docs: add explanation for messageids* chore: fix lint errors* docs: show how to use placeholders in messages	True	
fix: point eqeqeq error at operator (fixes #1029)	True	
docs: distinguish examples in rules under best practices part 1	False	
docs: update code of conduct link (#7599)	False	
docs: document the exception in no-unsafe-negation (#12161)	False	
docs: fix description of exported comment	False	
fix: include execscript in no-implied-eval rule (fixes #2873)	False	
fix: no-extra-label autofix removes comments (#12298)	True	
docs: fix typo	False	
breaking: fix config loading (fixes #11510, fixes #11559, fixes #11586) (#11546)	False	
fix: don't report comparisons of two typeof expressions (fixes #7078) (#7082)	True	
0.0.2-4	False	
docs: key-spacing fixable documenation notes (fixes #6375) (#6376)	False	
fix: add a restproperty test of `no-undef` (fixes #3271)	False	
list available formatters (fixes #533).	True	
add env flag to cli options summary (fixes #752)	True	
fix: strict should check function expressions (fixes #1244)	False	
chore: run tests on node.js v14 (#13210)* chore: run tests on node.js v14* run tests on  v12* add 13.x back, exclude 14.x on windows/mac* simplify matrix	False	
fix: table@4.0.2, because 4.0.3 needs "ajv": "^6.0.1" (#10022)the different version of "table" dependency is causing a conflict with eslint 4.18.1 that requires "ajv": "^5.3.0"	True	
docs: add spacing in comments for no-console rule (#12696)	True	
docs: expand  `--debug` option description in the cli documentation (#15308)* docs: expand `--debug` option description* update command-line-interface.md	False	
individual perf tests for rules	True	
fixes #249	False	
rule block-scoped-var works correct with object properties (fixes #755)	False	
build: changelog update for 6.0.0-rc.0	True	
fix: avoid magic numbers in rule options (fixes #4182)	False	
docs: update pages to fix rendering of lists and fenced code blocks	True	
breaking: support new regex d flag (fixes #14640) (#14653)* update: support new regex d flag (fixes #14640)* upgrade regexpp* update lib/rules/no-invalid-regexp.jsco-authored-by: jordan harband <ljharb@gmail.com>* upgrade espreeco-authored-by: jordan harband <ljharb@gmail.com>co-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>	False	
update: add eslint version to error output. (fixes #9037) (#9071)* update: add eslint version to error output. (fixes #9037)* use  pkg.version.* fix: accept review suggestions.	True	
fix: error severity for rules with options.this fixes an issue where rules that accept options would be unable to report an error severity.as the todo has and continues to say, we should refactor how we get error severity in the formatters.fixes #229	True	
docs: update description of exported comment (fixes #3916)	False	
docs: add comments to code block in example (#13089)	True	
fix: no-func-assign should not fail on import declarations (fixes #2060)	False	
docs: add issue template (fixes #5313)	False	
docs: correct documentation errors for `id-length` rule.refs #2784	True	
update: cliengine results include warning and error count (fixes #1732)	False	
fix: directory ignoring should work (fixes #3812)	True	
docs: fix broken url in docs (#13815)	False	
fix: traverse `experimentalspread/restproperty.argument` (fixes #3157)	False	
docs: add ecmascript 2020 to readme (#13510)	True	
docs: added missing "are"	False	
docs: document homedir is a configuration root (#15469)fixes #14972	False	
sponsors: sync readme with website	True	
new: add worker environment (fixes #2442)	False	
removing jake, adding grunt, travis now runs grunt	False	
build: fix prerelease script (fixes #4919)	False	
fix: dot-notation autofix produces errors on parenthesized computed keys (#8330)this commit updates the dot-notation autofixer logic to ensure that parenthesized computed keys are handled correctly. previously, the rule didn't account for the possibility that a computed key might be parenthesized, so it ended up using the parens instead of the square brackets for the fix range.	True	
update: add iife to padding-line-between-statements (fixes #10853) (#10916)	True	
docs: typo fix 'colum' -> 'column' (#6306)	False	
don't report no-empty warnings when a parent is functionexpression / functiondeclaration(fixes #70)	False	
docs: describe options in rules under possible errors part 1	False	
fix: check division operator in astutils.cantokensbeadjacent (#12879)* fix: check division operator in astutils.cantokensbeadjacent* add try-catch and shebang check* upgrade espree, use latestecmaversion	True	
update: drop @typescript-eslint/eslint-recommended from `eslint --init` (#13340)`@typescript-eslint/recommended` now extends from `@typescript-eslint/eslint-recommended`:https://github.com/typescript-eslint/typescript-eslint/releases/tag/v3.0.0	False	
docs: corrected typo in line-comment-position rule doc (#7097)	False	
give the `env` flag type `[string]`, improve code (fixes #748)	False	
docs: add docs for no-new-object (refs #562)	True	
build: changelog update for 4.10.0	True	
fix: update no-invalid-this and no-eval for class static blocks (#15300)fixes false positives of rules `no-invalid-this` and `no-eval` in cases where `this` is used in class static blocks.refs #15016	True	
update: makefile.js now uses shelljs-nodecli	False	
docs: remove links to terminated jscs.info domain (#10706)	True	
update: enforceforclassfields in class-methods-use-this (refs #14857) (#15018)* update: update options in class-methods-use (refs #14857)* fix default option* fix review* fix* remove unnecessary listener* update docs/rules/class-methods-use-this.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update docs/rules/class-methods-use-this.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update docs/rules/class-methods-use-this.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update docs/rules/class-methods-use-this.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update docs/rules/class-methods-use-this.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update docs/rules/class-methods-use-this.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update docs/rules/class-methods-use-this.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* change example orderco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
fix: `indent` error message (fixes #3220)	False	
docs: note that pr requires accepted issue (refs #6568) (#6604)	False	
fix: `id-length` properties never option (fixes #4347)	False	
fix: load .eslintrc from home (fixes #1262)`path.resolve` doesn't expand the tilde character so let's use `user-home` and`path.join` instead (which supports multiple operating systems).	True	
new: `max-len`: `ignorestrings`+`ignoretemplateliterals` (fixes #5805) (#7049)	False	
sponsors: sync readme with website	True	
#595 fix rule message and add more tests	False	
fixes #495: holey arrays cause no-comma-dangle rule to throw	True	
fix: `id-length` does not work for most of the new es6 patterns (fixes #3286)	True	
docs: document the optional defaults argument for ruletester (#7548)	True	
fix: refactor comma-spacing (fixes #1587, fixes #1845)the comma-spacing rule now searches for the comma tokens directlyat the "program" level, in the same fashion as no-multi-spaces.this handles a few corner cases: default parameters (#1845),sparse arrays (#1587), line breaks and destructuring.	True	
docs: update no-proto.mdmarkdown interpreter was converting the double underscore into bold. imarked the term as code to prevent the misinterpretation.	True	
fix: crash in `constructor-super` (fixes #5319)	True	
fix: `quote-props` rule should ignore computed and shorthand properties (fixes #3557) (fixes #3544)	False	
breaking: remove autofix from eqeqeq (fixes #4578)	True	
fix: `no-return-assign` warning nested expressions (fixes #5913) (#6041)	False	
docs: load badge from httpssee #4489	False	
update: add never option to arrow-body-style (fixes #6317) (#6318)* update: add never option to arrow-body-style (fixes #6317)arrow functions that return object literals can look very similar to arrow functions with brace bodies.  some syntactic ambiguity can be avoided by disallowing block-style arrow functions in favour of es5 function expressions.**outcome**the following patterns are considered problems:```/*eslint arrow-body-style: ["error", "never"]*//*eslint-env es6*/let foo = () => {return 0;};let foo = (retv, name) => {retv[name] = true;return retv;};```the following patterns are not considered problems:```/*eslint arrow-body-style: ["error", "never"]*//*eslint-env es6*/let foo = () => 0;let foo = () => ({ key: 0 });```* update documentation* define bejaviour with unit tests* fixup! update documentation	True	
update: option to ignore top-level max statements (fixes #4309)	True	
upgrade: `globals` to 11.0.1 (fixes #9614) (#9632)* upgrade: `globals` to 11.0.1 (fixes #9614)* revive deleted globals	True	
fix: camelcase duplicate warning bug (fixes #10801) (#10802)	False	
build: run tests on node 11 (#11008)node 11 came out today. this adds it to the travis build config.	True	
feat: add `ignoreoninitialization` option to no-shadow rule (#14963)* fix: remove warning  in initialized variables (fixes #12687)* fix: remove warning  in initialized variables (fixes #12687)* fix: remove warning  in initialized variables (fixes #12687)* docs: add invalid ambiguous example in doc (fixes #12687)* docs: add invalid ambiguous example in doc (fixes #12687)* fix: adding option for variables on intialization (fixes #12687)* fix: adding option for variables on intialization (fixes #12687)* fix: adding option for variables on intialization (fixes #12687)* fix: adding option for variables on intialization (fixes #12687)* fix: adding option for variables on intialization (fixes #12687)* fix: adding option for variables on intialization (fixes #12687)* fix: adding option for variables on intialization (fixes #12687)* fix: adding option for variables on intialization (fixes #12687)* fix: adding option for variables on intialization (fixes #12687)* fix: adding option for variables on intialization (fixes #12687)* feat: adding option for variables on intialization (fixes #12687)* feat: adding option for variables on intialization (fixes #12687)* feat: adding option for variables on intialization (fixes #12687)* feat: adding option for variables on intialization (fixes #12687)* feat: adding option for variables on intialization (fixes #12687)* feat: adding option for variables on intialization (fixes #12687)* feat: adding option for variables on intialization (fixes #12687)* feat: adding option for variables on intialization (fixes #12687)* feat: adding option for variables on intialization (fixes #12687)* feat: adding option for variables on intialization (fixes #12687)* feat: adding option for variables on intialization (fixes #12687)* feat: adding option for variables on intialization (fixes #12687)	True	
update: do not recommend require-atomic-updates (refs #11899) (#12599)	True	
fix: `semi` false positive before regex/template literals (fixes #7782) (#7783)	True	
update: enforcefornewinmemberexpressions no-extra-parens (fixes #12428) (#12436)	True	
breaking: drop node.js 6 support (fixes #11456) (#11557)	False	
docs: add docs for no-undef-init (refs #562)	True	
7.26.0	False	
fix: indent.js to support multiline array statements. (#7237)	True	
update: backticks support for quotes rule (fixes #2153)	True	
build: fix broken .gitattributes generation (fixes #3566)	False	
update: optional chaining support (fixes #12642) (#13416)* update deps (to branch)* trivial fix for debug output* update code path analysis* update accessor-pairs* update array-callback-return* add tests for camelcase* add tests for computed-property-spacing* update dot-location* update dot-notation* update func-name-matching* update global-require* update indent* add tests for getter-return* update new-cap* update newline-per-chained-call* update no-alert* update no-extend-native* update no-extra-bind* update no-extra-parens* update no-eval* update no-implicit-coercion* update eslint-utils* update no-implied-eval* update no-import-assign* update no-magic-numbers* update no-obj-calls* update no-prototype-builtins* add tests for no-restricted-syntax* update no-self-assign* update no-setter-return* update no-unexpected-multiline* update no-unused-expression* update no-useless-call* update no-whitespace-before-property* update operator-assignment* update padding-line-between-statements* update prefer-arrow-callback* add tests for prefer-destructuring* update prefer-exponentiation-operator* update prefer-numeric-literals* update prefer-promise-reject-errors* update prefer-regex-literals* update prefer-spread* update use-isnan* update yoda* update wrap-iife* remove __proto__* fix no-import-assign for delete op* update eslint-visitor-keys* fix no-unexpected-multiline to just ignore optional chaining* update func-call-spacing* update constructor-super* update dot-location for unstable sort* update no-extra-boolean-cast* update func-call-spacing* update no-extra-parens for false positive on iife* update array-callback-return* update no-invalid-this (astutils.isdefaultthisbinding)* update radix* update a comment in no-implicit-coercion* update comments in no-extra-bind* remove unnecessary change from array-callback-return* update dot-notation for autofix about `let?.[`* update new-cap* update wrap-iife* update prefer-arrow-callback* change issamereference to handle `a.b` and `a?.b` are same* fix code path analysis for `node.arguments.length == 0` case* update `astutils.couldbeerror`* update `astutils.ismethodwhichhasthisarg`* improve coverage* fix ismethodwhichhasthisarg* update no-self-assign* upgrade: espree@7.2.0co-authored-by: kai cataldo <kai@kaicataldo.com>	True	
new: add suggestions api (#12384)* new: initial suggestions support in the linter* docs: update some docs with info about suggestions* chore: add some tests for suggestions* new: add support for suggestion messageid-based descriptions* new: wip add suggestions for no-useless-escape* chore: update no-useless-escape suggestions to use messageids* new: support output option for rule-tester tests of suggestions* chore: respond to pr feedback* chore: update rule-tester suggestion testing capabilities and tests* fix: bug in no-useless-escape suggestions* chore: use messageid more for suggestion example* chore: update rule-tester suggestion support* chore: remove rule-tester support for testing fix object	True	
new: require-unicode-regexp rule (fixes #9961) (#10698)	False	
fix: sanitise jekyll interpolation during site generation (fixes #2297)	False	
fix: `space-before-blocks` had conflicted `arrow-spacing` (fixes #3769)i made `space-before-blocks` ignoring spacing which is between `=>` and`{`.	True	
fix: allow comma-last with object properties having line breaks (fixes #1314)	False	
upgrade: lodash@4.17.19 (#13499)	False	
fix: no-extra-parens invalid autofix in for-of statements (#8337)this commit fixes a bug in the `no-extra-parens` autofixer where if the right side of a `for-of` predicate had extra parens, it would sometimes get combined with the `of` token.	True	
7.22.0	False	
build: remove pending tests (fixes #5126)	False	
mark functions as used when any method is called on them	False	
fix: strip unicode bom of config files (fixes #6556) (#6580)	False	
docs: add missing word in processor documentation (#9106)	True	
chore: convert stubmoduleresolver in config tests to es6 class (#8265)unlike the modules described in https://github.com/eslint/eslint/issues/8231, stubmoduleresolver is not exposed as part of the public api, so this is not a breaking change.	True	
sponsors: sync readme with website	True	
fix: id-match schema (fixes #4155)	False	
2.10.2	False	
revert "build: remove support for node v5 (fixes #6743)" (#6758)	True	
sponsors: sync readme with website	True	
build: package.json and changelog update for 3.0.0	True	
sponsors: sync readme with website	True	
update: implement auto fix for no-multi-spaces rule (fixes #3979)	True	
breaking: convert sourcecode to es6 class (refs #8231) (#8264)* breaking: convert sourcecode to es6 class (refs #8231)this converts sourcecode to an es6 class. this will not break clients that were using sourcecode as documented, but it could break clients that are relying on undocumented behavior in sourcecode (e.g. enumerable methods).* make sourcecode a subclass of tokenstore* convert private tokenstore fields to symbols* clean up jsdoc comments in lib/token-store/index.js	True	
update: fix id-length false negatives on object.prototype property names (#13670)	True	
docs: use double quotes for better win compatibility (fixes #5796)	True	
feat: implement flatruletester (#15519)* feat: implement flatruletesterimplements flatruletester as a way to allow devs to test their rulesagainst flat config.refs #13481* more test fixes* finish tests* remove todo comments* added subclassing tests* add flatconfigarray test* incorporate feedback* fix comment* incorporate feedback* fix up typedefs* fix parser wrapping in all scenarios	True	
fix: no-constant-condition false positive (fixes #4737)	False	
docs: update ambiguous for...in example for guard-for-in (#10114)	True	
chore: avoid using private linter apis in astutils tests (refs #9161) (#9173)this updates the tests for `ast-utils` to use the public `linter#definerule` api rather than the private `linter#on` api.	True	
fix: make no-unused-vars ignore exports (fixes #1903)	False	
docs: fix broken links in developer guide (#13518)	False	
new: the `no-const-assign` rule (fixes #2719)	False	
update: change order in `eslint --init` env options (fixes #5742)	False	
fixes #446: join paths without additional delimiters	False	
docs: updated documentation for developing rules	True	
build: changelog update for 8.5.0	True	
0.1.0-dev	False	
update: add "allow" option to allow specific operators (fixes #3308)new "allow" option has been introduced to allow specific operators.	True	
fix: autofix quotes produces invalid javascript (fixes #4380)	True	
update: add env 'nashorn' to support java 8 nashorn engine (fixes #3874)	True	
fix: `sort-imports` warned between default and members (fixes #5305)in sorting members, this rule should ignore the default specifiers.	True	
fix: lines-around-comment in eslint repo, part 2 (refs #5188)	False	
4.0.0-beta.0	False	
build: package.json and changelog update for 3.9.1	True	
docs: update cla link on pull requests page (#8642)this is the same as https://github.com/eslint/eslint.github.io/pull/354, but it's retargeted to the eslint repo so that it doesn't get overwritten the next time the site is generated.	True	
update: add airbnb-base to init styleguides (fixes #6986) (#7699)	True	
rule no-nested-ternarythe `no-nested-ternary` rule disallows the use of nested ternaryexpressions.var thing = foo ? bar : baz === qux ? quxx : foobar;	False	
rule: no-empty-label	False	
build: fix test failure on node 11 (#11100)this is a workaround for https://github.com/tschaub/mock-fs/issues/256. it seems like we might eventually need to find an alternative to mock-fs for future node versions, but this workaround should make the build pass in the meantime.	True	
fix: support empty if blocks in lines-around-comment (fixes #4339)	False	
update: allow template string in `valid-typeof` comparison (fixes #7166) (#7168)	True	
docs: fix spelling mistake	False	
upgrade: table to version 5 (#10903)	True	
docs: update issue triage to include blocked column (#14275)	True	
docs: correct link to rules page (#fixes 6553) (#6561)	True	
fix: brace-style rule incorrectly flagging switch (fixes #4002)	False	
update: allow string severity in config (fixes #3626)	False	
docs: adds missing "not" to semi.md	True	
chore: apply memoization to config creation within glob utils (#9944)* chore: apply memoization to config creation within glob utils* code review updates* safer memoization* safer memoization	True	
update readme.md	False	
docs: fix typos in issues section of maintainer's guide (#7114)	False	
docs: fix wrong config in id-length (#10196)	False	
update: use `object.assign()` polyfill for all object merging (fixes #2348)	True	
docs: array destructuring example for no-unused-vars (fixes #7838) (#7839)	True	
allow config files to have any name (fixes #486).currently require is used to load and parse the config file. unfortunately this forces the filename extension to be .json.as discussed in https://github.com/eslint/eslint/issues/486, the consensus was that since config files should be json and not executable code, the .json restriction is unnecessary and it is preferable to parse the file ourselves instead of using require (which ultimately does exactly what this commit does).	True	
fix: no-undef and no-underscore-dangle to use double quotes (fixes #2258)	True	
new: `require-yield` rule (fixes #2822)	False	
new: add id-length rule (fixes #2784)	False	
docs: update issue closing policy (fixes #6765) (#6808)	False	
build: match rule id at beginning of heading (refs #5774) (#6089)	False	
update: add fixer for no-div-regex rule (fixes #11355) (#11744)adding fixer for no-div-regex-rule and use [=] instead of \= as suggestion to avoid conflicting with no-useless-escape error.	True	
chore: refactor regex in config comment parser (#12662)	True	
build: switch to using eslint-release (fixes #5223)	True	
update: add fixer for `operator-assignment` (#7517)	True	
docs: remove periods in rules' readme for consistency.	True	
docs: fix broken links in node.js api docs toc (#14296)* docs: fix broken links in node.js api docs toc* fix link	True	
fix: avoid moving comments in implicit-arrow-linebreak (fixes #11521) (#11522)currently, the implicit-arrow-linebreak rule contains a lot of logic to determine how comments should be adjusted in code when an autofix is needed. the goal is to be able to autofix cases where there is a comment between an arrow token and the start of an arrow function body. most other core rules simply decide not to fix cases when there is a comment interfering with the fix.this logic accounts for a large fraction of the code in the rule, and seems to require a lot of different code for many individual cases. unfortunately, bugs keep being reported identifying problems in the rule (e.g. #11268, #11521) and it's not clear that the fixes are moving us closer to making the rule correct in general, given that there are always more cases than we can explicitly account for.to address those problems, this commit updates the implicit-arrow-linebreak rule to just skip autofixing when comments interfere, rather than trying to do an autofix anyway and find an alternate location for the comments. i'm reluctant to make this change given that a lot of time has been invested in the autofixing logic, but i think this is ultimately a better solution than trying to guess where the user wants their comments to go, and crashing/producing incorrect code if we get it wrong.	True	
docs: clarify cache file deletion (fixes #4943) (#6712)	False	
renamed count-spaces to regex-spaces	True	
remove unused code	False	
increased test coverage for no-shadowremoved an unreachable block of code, which increased test coverage. because `checkforshadows` is called only by `functiondeclaration` and "functionexpression` and those will both always have an upper scope (`program`, at the top level), it's unnecessary to check to `node.upper`.	True	
fix: ruletester to show parsing errors (fixes #4779)	True	
update: add `beforestatementcontinuationchars` to semi (fixes #9521) (#9594)	True	
added new test for fix to #582 (fixes 582)	True	
build: package.json and changelog update for 3.1.0	True	
build: changelog update for 8.0.0-rc.0	True	
refactoring plus better way of testing rules	True	
new: `endline` and `endcolumn` of the lint result. (refs #3307) (#6640)	False	
fix: camelcase rule with {properties: never} shouldn't check assignment (fixes #2189)	False	
docs: update issue_template.md (#9504)	False	
build: changelog update for 5.13.0	True	
fix: no-plusplus allow comma operands in for afterthought (fixes #13005) (#13024)* fix: no-plusplus allow comma operands in for afterthought (fixes #13005)* allow deep sequence operands	True	
docs: add code fences to the issue template (#7254)	True	
fix: `max-statements-per-line` false positive (fixes #6173, fixes #6153) (#6192)	False	
3.2.1	False	
build: add auto-update of release tag on github (fixes #2566)	True	
update: handle indentation of custom destructuring syntax (fixes #8990) (#9027)	True	
created brace-style rule.the brace-style rule enforces the one true brace style, meaning that the opening curly brace of a block must be placed on the same line as its corresponding statement or declaration.the rule is defaulted to off.	True	
docs: remove unneeded semicolons in arrow-parens.md (#8249)	False	
sponsors: sync readme with website	True	
docs: fix examples for no-multi-str (#13966)* docs: fix examples for no-multi-str* change 'line' to 'text'	True	
chore: fix lgtm alerts. (#8611)	False	
chore: mark sourcecode getcomments() method as deprecated (fixes #13293) (#13296)	True	
update: callback-return allows for object methods (fixes #4711) (#6277)	True	
update: correctly indent jsxtext with trailing linebreaks (fixes #9878) (#10055)this fixes a bug in the `indent` rule where a line comparison with the end of a token would use the end location of any trailing whitespace in the token, rather than the location of the last non-whitespace character in the token. this behavior went against user intuition for tokens with trailing whitespace.	True	
0.2.0	False	
fix: no-var autofix syntax error in single-line statements (fixes #7961) (#7962)	True	
updated `camelcase` rule documentationupdated the documentation for the `camelcase` rule to match the other rules. added a link to camelcase.md in the rules readme.md.	True	
docs: wrap `buffer()` in backticks in `no-buffer-constructor` rule description (#10084)	True	
update: accept array for `ignorepattern` (fixes #3982)* add support, tests, documentation for accepting array for`ignorepattern` and `--ignore-pattern`.* add verifycliengineopts() helper to cli test file. move and update note aboutadding new tests.* add note to documentation about specifying array options in general.	True	
chore: replace is-my-json-valid with ajv (#8852)* upgrade: replace is-my-json-valid with ajvthis pr replaces the validation functionality.epoberezkin needs to have a look into how to handle the error message formatting.* fix: error message code and messages in tests* chore: use one instance of ajv, json-schema draft-04 compatibility* chore: use meta-schema in ajv, disable default meta-schema validation* chore: validate config-schema against meta-schema* chore: compile config-schema only once* fix: ruletester error message for invalid schema* fix: ignore missing $ref in schemas for backward compatibility	True	
build: package.json and changelog update for 3.11.0	True	
update: fix false negative of `no-multiple-empty-lines` (fixes #7312) (#7313)this commit is intended to change as little of the rule's logic as possible in order to fix the issue. i think this rule could use refactoring, which i plan to do afterwards. i made this commit based on the old logic to allow for an easier revert if the refactoring goes wrong somehow.bug explanation: the rule stores a list of strings containing the lines of a file, with whitespace trimmed from the start and end of each line. it detects an empty line by checking whether the trimmed line in its list is an empty string.the rule also has to account for empty lines in template literals (see https://github.com/eslint/eslint/issues/2605). in order to do this, for each line in the file that overlaps a template literal, the rule tries to overwrite the corresponding value in its list of lines with something other than an empty string, to prevent it from detected as an empty line.due to a logical error, the rule was overwriting the strings at the *beginning* of its list of lines, rather than the lines that actually contained template literals.	True	
build: allow revert commits in commit messages (fixes #4452)	False	
docs: fix code in correct example. (#10195)	False	
build: package.json update for eslint-config-eslint release	True	
disable rules by setting them to 0 in eslint.json	True	
docs: link to jsdoc eol blogpost in valid-jsdoc and require-jsdoc (#11191)	True	
docs: update new-cap docs (fixes #3798)	False	
breaking: validate eslintrc properties (fixes #8213) (#8295)* breaking: validate eslintrc properties (fixes #8213)* disable failing test (refs #8291)* cleanup based on pr feedback.* remove unused property args.* remove `global` option and `globals` array.* add test for unknown or invalid properties.* improve validation error messages* improve error message when multiple types are expected* remove note from migration guide	True	
breaking: some rules recognize bigint literals (fixes #11803) (#12701)* update no-magic-numbers to recognize bigint* update yoda to recognize bigint* add a no-extend-native test* update ci.yml temporary (this pr is blocked by #12700)* add astutils.isnumericliteral and use it in some rules* update no-dupe-class-members* update no-magic-number to support bigint in options* update some rules to use getstaticpropertyname* update quote-props* revert no-useless-computed-key change* revert "allowing {type: 'bigint'}" and update no-magic-number* no-magic-number 'ignores' allows negative bigint	True	
docs: added instructions for running npm run profile	True	
update: add enforceforswitchcase option to use-isnan (#12106)	True	
build: changelog update for 6.5.0	True	
docs: correct the comment in an example for `no-mixed-requires` (#8686)	True	
update: deprecate sourcecode.getcomments() (fixes #8408) (#8434)* update: deprecate sourcecode.getcomments() (fixes #8408)* refactor common code into separate method* update jsdoc comments* one more jsdoc comment fix for consistency	True	
use proper node declarations and __proto__ exception	True	
allow empty catch/finally blocks (fixes #514) and update documentation (fixes #513)	False	
docs: rewrite prefer-arrow-callback documentation (fixes #8950) (#9077)	False	
docs: fix links in configuring eslint (#6421)	False	
fix: document and fix metadata (refs #5417)	False	
better wording for the error reported by the rule "no-else-return" #6411 (#6413)* better wording for the error reported by the rule "no-else-return" #6411* fix: better wording for the error reported by the rule "no-else-return" (fixes #6411)signed-off-by: olivier thomann <olivier_thomann@ca.ibm.com>* fix: better wording for the error reported by the rule "no-else-return" (fixes #6411)signed-off-by: olivier thomann <olivier_thomann@ca.ibm.com>	True	
build: package.json and changelog update for 3.1.1	True	
fix: update optionator, --no in help (fixes #1134)- updated optionator to 0.5.0boolean options with 'default: true' now display their negated variantin help. eg. --no-eslintrc, --no-ignore, --no-color- updated help messages work with that eg. 'disable' rather than'enable'- updated command line interface docs with new help output- rearrange docs to be in alphabetical order- fixed various formatting issues with the docs- added option 'color' to docs, was missing before	True	
docs: clarify how to run local eslint installation (#8463)	True	
update: added typescript-eslint/recommended configs for init (#13235)	True	
doc md update: false -> `false` (#8825)	False	
fix: avoid indent and no-mixed-spaces-and-tabs conflicts (fixes #7248) (#7266)	False	
fix: empty schemas forbid any options (fixes #4789)previously, an empty schema `[]` would allow any number and type ofoptions after the severity. it will now warn if options are passed torules that don't accept options.	True	
docs: note no-empty applies to empty block statements (fixes #5105)	True	
fix: space-in-brackets to work with modules (fixes #2216)	True	
update: `no-extra-parens` supports async/await (refs #7101) (#7178)	False	
upgrade: glob to 6.x (fixes #4991)	True	
docs: move `sort-imports` to 'ecmascript 6'	True	
new: add init-declarations rule (fixes #2606)	False	
upgrade: updated puppeteer version to v4.0.0 (#13444)added architecture check to set chrome_bin pathsigned-off-by: odidev <odidev@puresoftware.com>	True	
4.0.0-alpha.0	False	
add globals property to the environments.	True	
update: check allman-style blocks correctly in indent rule (fixes #8493) (#8499)* update: check allman-style blocks correctly in indent rule (fixes #8493)previously, there was a bug in the indent rule where allman-style blocks with function bodies would be indented by one too many levels. this commit fixes the issue and updates the blockstatement indentation handler to use the same logic as other lists of nodes (e.g. arrays).* update explanation comment about blockstatements	True	
docs: fix misspelling in changelog (#10216)	False	
update: key-spacing rule whitespace fixer (fixes #6167) (#6169)	False	
0.8.0	False	
docs: update cla info (#15370)* docs: udpate cla info* docs: update contributing.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* fix: lintco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>	False	
fix: object-shorthand computed props (fixes #2937)	False	
docs: update doc for class-methods-use-this (fixes #8910) (#9374)	True	
docs: clarify no-mixed-operators options (fixes #9962) (#9964)	True	
update: auto-fix for `comma-style` (fixes #6941) (#6957)	True	
docs: fix wrong options in examples of key-spacing	False	
docs: fixed typo	False	
fix: `sourcecode.gettokenafter` shouldn't skip tokens after comments (#8055)	True	
chore: update token logic in rules to use ast-utils (#8288)	True	
fix: allow useless escapes in tagged template literals (fixes #7383) (#7384)	False	
updated readme for v0.1.0	True	
update: update comment parser to read rule slashes (fixes #1116)update: update comment parser to read rule slashes (fixes #1116)update: update comment parser to read rule slashes (fixes #1116)	True	
warn on finding the bitwise not operator	True	
fix: no check for shadowed object (fixes #12809) (#13115)	True	
new: add space-before-blocks rule (fixes #1277)	True	
update: fully enable jsx support (fixes #1640)	False	
fix: id-blacklist should ignore objectpatterns (fixes #12787) (#12792)* fix: ignore destructured object property reassignments. (fixes #12787)* updated to ignore blacklisted id's in objectpattern nodes.* remove console.log.* added tests for nested destructuring and destructuring function parameters.* fix typo.* undo accidentally auto-fixed comment indent.	True	
update: use characters instead of code units for `max-len` (#7299)* update: use characters instead of code units for `max-len`* note the counting method in the docs* remove extra sentence about code units vs codepoints* s/unicode/unicode/	True	
docs: remove reference to rules enabled by default (fixes #5100)the entire line can be safely removed because the effects on exit codeare already discussed at the top of the section.	True	
chore: add some rules to eslint-config-eslint (#14692)* chore: add some rules to eslint-config-eslintnote: this is a breaking for eslint-config-eslint* chore: fix some linting problems* update lib/eslint/eslint.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* chore: update testsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
fix: check for objects or arrays in array-bracket-spacing (fixes #4083)	True	
build: remove jshint files (fixes #2222)	False	
chore: use process.exitcode instead of process.exit() in bin/eslint.js (#7569)	False	
fix: newline before eof when creating config via --init (#12952)* fix: newline before eof when creating config via --init* add test* make a dedicated test (with a bit of duplication)	True	
fix no-unused-vars to report correct line numbers	True	
chore: enable object-curly-spacing on eslint codebase (refs #7725) (#7770)	False	
fix: make sure shebang comment node is removed (fixes #1352)	False	
update: logical-and is counted in `complexity` rule (fixes #8535) (#9754)	False	
docs: clarify closure type hint expectation (fixes #5231) (#6714)	False	
docs: update pages to fix rendering of lists	True	
sponsors: sync readme with website	True	
upgrade: eslint-plugin-node to 7.0.1 (#10612)	True	
update: add more specific linting messages to space-in-parens (#11121)this also updates the rule description to be clearer, and refactors thecode to use messageids instead of constants. removes some superfluouscode.	True	
docs: add further reading to rule (#13084)this article really is the clearest explanation of this rule and how to understand it.	True	
fix: no-multiple-empty-lines bof and eof defaults (fixes #6179) (#6180)bof and eof variables now set as intended and both can be larger can than the max option	False	
chore: update header info in `indent` (#8926)the header of the `indent` rule says "ported from nodeca", but there isn't anything left in the rule that actually came from nodeca, so the line is probably more misleading than useful for people reading the file.	True	
docs: add installing prerequisites in readme. (#9401)	False	
change 'no-spaced-func' message (fixes #762)	False	
fix: '.md' to '.html' with anchors (fixes #1415)	True	
fix: `object-curly-spacing` for type annotations (fixes #6940) (#6945)	True	
fix: check for node property before testing type (fixes #4298)	True	
fix: `indent` shouldn't check the last line unless it is a punctuator (fixes #3498)	True	
update: ignore end of function in newline-after-var (fixes #3682)	False	
update: add returnassign option to no-extra-parens (fixes #6036) (#6095)	True	
fix: iife and arrow functions in no-invalid-this (fixes #9126) (#9258)	False	
update: semi-spacing should check do-while statements (#13358)	False	
update: add metadata to existing rules - batch 3 (refs #5417)add metadata to the existing rules. batch 2.	True	
chore: fix indentation errors in indent-legacy (#8424)	False	
8.11.0	False	
2.5.2	False	
fix: include logicalexpression in indent length calc  (fixes #6731) (#7087)	False	
fix indentation per code conventionshttps://github.com/nzakas/eslint/wiki/code-conventions	False	
test node 0.11 unstable but allow it to failwill allow advanced notice if new node changes may break something,without failing a build	True	
docs: change sails.js integration to active npm package (#7675)	True	
upgrade: pinned down js-yaml to avoid breaking dep (fixes #4553)	True	
build: fix md to html conversion regex (fixes #1525)	True	
docs: be consistent about deprecation statusthis marks the space-in-brackets rule as deprecated consistently in thedocs.related: #2656	False	
upgrade: doctrine@^2.0.2 (#9656)	False	
6.5.0	False	
build: changelog update for 5.6.0	True	
fix: make tests compatible with windows (fixes #4315)	False	
rename to create an 'index' file in gh web view	True	
fix: check if next statement is on newline when warning against extra semicolons. (fixes #1580)	False	
update: report rename id destructuring in id-blacklist (fixes #12807) (#12923)* update: report rename id destructuring in id-blacklist (fixes #12807)* check restelement, arraypattern, computed* check assignment pattern, computed property* add option* remove dupe condition	False	
added tests and test cases for a few files	True	
docs: mention character classes in no-useless-escape (#15421)* docs: mention character classes in no-useless-escape* make it clear which of the brackets needs escaping	False	
upgrade: ajv@^6.0.1, still using json schema draft 04 (#9856)* upgrade: ajv@^6.0.1, still using json schema draft 04* upgrade: table@^4.0.3 (resolves peer dep warning)* chore: using schemaid: "auto" instead of "id"this retains compatibility with json schema draft-04 as well as draft-06 and draft-07. previous setting unintentionally restricted compatibility to draft-04.	True	
chore: fake config hierarchy fixtures (fixes #6206) (#6402)	False	
fix: update rule message of no-throw-literal (fixes #11637) (#11638)	False	
docs: fix wrong node.js version in getting started (#11993)	False	
docs: propose fix typo for function (#9965)	True	
new: add json formatter (fixes #3036)	True	
upgrade: doctrine to 1.2.2 (fixes #6121) (#6231)	True	
docs: remove trailing spaces, enable corresponding markdownlint rule.	False	
add date.utc to allowed capitalized functionsthis commit changes the `new-cap` rule to allow the capitalized function `date.utc`.the ast node is checked to see if the callee name is utc and it is a member of object date.this fixes a problem where the `date.utc` function is flagged because it begins with a capital letter.fixes #1211	True	
new: adding in rule for irregular whitespace checking. (fixes #1024)fix: line issue in getsourcelines()	True	
build: package.json and changelog update for 3.15.0	True	
5.7.0	False	
docs: update instructions for adding tsc members (#9086)	True	
fix: on --init, print message when package.json is invalid (fixes #6257) (#6261)* fix: on --init, print message when package.json is invalid (fixes #6257)* clean up tests	True	
update: check renaming identifier in object destructuring (fixes 12827) (#12881)* update: check renaming identifier in object destructuring (fixes 12827)* fix wrong error type* ignore properties options on object pattern, ignore computed prop* modify docs, add test cases* add test cases* remove wrong test cases* change to ignore destructuring on properties never* update documentation* fix typo* fix documentation* include error loc, data info	True	
chore: pin mock-fs dev dependency (#7466)	False	
docs: fix rule name in example configuration	False	
chore: update blogpost template (#12154)	False	
build: package.json and changelog update for 3.3.0	True	
more tests	False	
build: changelog update for 7.21.0	True	
fix: `no-cond-assign` had needed double parens in `for` (fixes #4023)	True	
breaking: add new rules to eslint:recommended (fixes #12911) (#12920)	True	
8.9.0	False	
docs: fix duplicate punctuation in cli docs (#11528)	False	
fixes #143	False	
fix: location info in `dot-notation` rule (fixes #5397)	False	
update: add "consistent" option to array-bracket-newline (fixes #9136) (#9206)	True	
fixed cli output on serial programatic executionsthis commit fixes an issue where calling the `execute` function on the cli multiple times would produce the incorrect output because the results array was not being cleared out between executions.	True	
fixing disabling rules with invalid comments closes #435	False	
add license url	False	
upgrade: espree v3.5.1 (fixes #9153) (#9314)	False	
fix: no-extra-parens incorrectly reports async function expressions (#9035)	False	
breaking: ruletester improvements (refs eslint/rfcs#25) (#12955)* breaking: ruletester improvements (refs eslint/rfcs#25)* use object.defineproperties* rename comment to token in error messages	True	
chore: test `foo( )` with space-in-parens option "always" (#13986)	False	
docs: fix arrow name typo (fixes #3309)	False	
build: changelog update for 7.28.0	True	
pull code coverage up by removing unused method	False	
fix: prevent crash from swallowing console.log (fixes #5381)	True	
update: fix indentation of multiline `new.target` expressions (#9116)	False	
upgrading escope version and fixing related bugs	False	
fix: brace-style false positive for keyword method names (fixes #7974) (#7980)	True	
feat: update no-use-before-define for class static blocks (#15312)updates logic related to class definition evaluation with class static blocks.refs #15016	True	
build: fix commit message validation (fixes #5340)	False	
chore: update eslint-fuzzer ecmaversion to 2018 (#10255)	True	
new: add support for extending configurations (fixes #1637)	True	
update: add autofix for `lines-around-comment` (fixes #5956) (#6062)	True	
docs: missing paren on readme (#8640)	False	
build: upgrade eslint-release to v3.2.0 to support conventional commits (#15246)	True	
chore: update eslint-config-eslint's required node version (#13379)it is a breaking change in eslint-config-eslint; tagged `chore` to avoid eslint's major release.	True	
build: fix release script	False	
fix: lib/config.js tests pass if personal config exists (fixes #6559) (#6566)	True	
update: option type for mixed tabs and spaces (fixes #1374)instead of using a boolean, this commit changes it to use a string constantlike the rest of the builtin rules.	True	
new: the `no-invalid-this` rule (fixes #2815)	False	
docs: add '/', forgotten in first commit (fixes #931)	True	
update: no-restricted-imports to check re-export (fixes #9678) (#11064)* fix: no-restricted-imports to check re-export (fixes #9678)* add export as use case	True	
build: changelog update for 4.1.1	True	
docs: added less confusing explanation for func-style (fixes #12900) (#13004)* docs: added less confusing explanation for func-style* docs: updated func-style allowarrowfunctions info	True	
chore: fixed typo in client-engine (#15497)	False	
fix: regression no-catch-shadow (1.1.0) (fixes #3322)	False	
new: add no-extra-bind rule to flag unnecessary bind calls (fixes #982)	True	
fix: ensure exit code is 1 when there's a syntax error (fixes #1239)	False	
new: `one-var-declaration-per-line` rule (fixes #1622)	False	
fix: add parens for sequence expr in arrow-body-style (fixes #11917) (#11918)	True	
breaking: update `eslint:recommended` (fixes #5103)	False	
fix: don't pass default parseroptions to custom parsers (fixes #8744) (#8745)afbea78d4b94839ec6d59d2c98321901aeb76313 accidentally introduced a regression where parsers would get passed additional "default" options even when the user did not specify them. this updates the default parseroptions to prevent any unexpected options from getting passed to parsers.	True	
sponsors: sync readme with website	True	
fix: don't try to strip "line:" prefix from parser errors with no such prefix (fixes #2698)	True	
docs: correct `arrow-spacing` overview.	False	
update:warn message use @return when prefer.returns=return (fixes #3889)(refs #3872)	False	
docs: add missing pull request step (fixes #6595) (#6597)	False	
upgrade: eslint-release to v0.11.1 (#10156)	True	
new: no-var rule (refs #1617)	False	
1.0.0-rc-3	False	
set unlimited number of listeners for event emitter (fixes #524)	True	
update: add considerpropertydescriptor option to func-name-matching (#9078)* update: add considerpropertydescriptor option to func-name-matching* update: include reflect.defineproperty in considerpropertydescriptor	True	
fix: eqeqeq rule with no option does not warn on 'a == null' (fixes #3699)	False	
fix: renamed no-magic-number to no-magic-numbers (fixes #4053)	True	
docs: fix 'lintinging' typo and ref linksthe [about page][1] currently renders 'code lintinging)' (adds an extra `)`), soswitch to reference links (including npm for consistency).[1]: http://eslint.org/docs/about/	True	
update: expose ecmafeatures on context (fixes #1648)	False	
update: deprecate option `maximum` in favor of `max` (fixes #5685)add the option name `max` to all rules that currently accept an optionname `maximum`, and add deprecation notes to the docs of each of thoserules.	True	
added more tests for func-style	True	
new: add --fix-type option to cli (fixes #10855) (#10912)* new: add --fix-type option to cli (fixes #10855)* chore: update rule types* docs: update nodejs api docs with new cliengine option* chore: fix lint errors* chore: update options message for --fix-type* cliengine validates fixtype values* check for rule.meta when filtering fixes* call getrules() just once when filtering fixes* set no-multiline-str to suggestion* add check for missing rule info in rule-types.json* account for late definition of rules in cliengine* add ruletype data to doc page for rules* remove duplicate test* update spacing rules to be of type style* fix lint issues in update-rule-types.js* change ruletype to rule_type in doc page front matter* update rule type mappings based on feedback* update rules to use 'layout' instead of 'style'* fix update-rule-types script and prefer-arrow-callback* fix lint error* update rule types based on latest feedback* fix bug cliengine* update new rule issue template with category info* final update of rule types* refactor cliengine piece based on feedback	True	
docs: typos in space-before-keywords and space-unary-ops (fixes #4771)	True	
upgrade: pin @babel/code-frame@7.12.11 (#14067)* upgrade: @babel/code-frame@7.12.13* pin 7.12.11	False	
new: advanced handle-callback-err configuration (fixes #1124)	False	
build: readd phantomjs dependency with locked down version (fixes #3026)	True	
fix: `curly` warns wrong location for `else` (fixes #4362)	True	
fix: `key-spacing` not enforcing no-space in minimum mode (fixes #5008)	True	
upgrade: inquirer dependency (fixes #3241)	False	
fixing typo	False	
fixing no-self-compare rule to check for operator	True	
feat: update keyword-spacing for class static blocks (#15289)updates the `keyword-spacing` rule to check spacing around `static` of class static blocks.refs #15016	True	
upgrade: globals to ^8.18.0 (fixes #4728)	True	
bug #582: added check if node.value isn't a string just exit	False	
docs: autogenerated changelog for v2.0.0-beta.3	True	
fix: shebang error in eslint-disable-new-line; add tests (fixes #9238) (#9240)	False	
sponsors: sync readme with website	True	
upgrade: espree to 1.10.0 for classes support	True	
chore: add internal rule to enforce meta.docs conventions (fixes #6954) (#7155)	True	
new: array-bracket-newline rule (#8314)* new: array-bracket-newline* docs: add array-bracket-newline* docs: improved explanation* chore: add output in invalid test cases* chore: refactoring code* fix: do not remove comments on --fix* docs: add blank line on header (fixes #6037)* chore: add default tests* update: change rule default to mulitline: true* chore: add arraypattern tests* docs: update options usage* fix: minitems set to 0* docs: update options usage* update: add null to minitems schema* chore: add minitems: null tests and multiline comment test* docs: clear minitems default value	True	
chore: fix invalid test cases (#8030)	False	
build: changelog update for 8.7.0	True	
docs: consistent example headings & text pt3 (refs #5446) (#6492)* docs: consistent example headings & text pt3 #5446just a single doc in this batch due to variance in changes:headings were already present, however they wereover-complicated; i separated out the old (es3/5) featurefrom the heading and put it in a block quote to distinguishit from the new (reflect api) feature.as per previous batches, ensured text above examples isconsistent as per #5446this pr does not attempt to address issues other thanthose stated above; such issues will be dealt with onsubsequent sweeps of the docs detailed in #6444.* docs: space around fenced code* docs: remove blockquotes (refs #6492)	True	
implement config.globals	False	
docs: add `npx` usage to getting started guide (#11249)* docs: add `npx` usage to getting started guide`npx` is a shorter alternative to navigating to the executable found in `node_modules/.bin`* docs: add caveats of using `npx`* docs: use a suggested alternative phrasing	True	
sponsors: sync readme with website	True	
docs: deprecate experimentalobjectrestspread (#9986)* docs: deprecate experimentalobjectrestspread* reword* add the	False	
chore: improve tests and checking for equality (#10182)this makes sure errors are properly handled, no matter if it ischanged in node.js core or not. it also uses a faster isequalcomparison by feature detecting a new node.js implementation.	True	
chore: remove mistakenly added file (#13710)	False	
new: add --stdin-filename option (fixes #1950)	False	
update: move eslint-tester into repo (fixes #3110)	True	
0.0.7-dev	False	
update: option to exclude afterthoughts from no-plusplus (fixes #4093)	True	
docs: fix typo in v7 migration page (#13778)	False	
update: enforcefororderingrelations no-unsafe-negation (fixes #12163) (#12414)* update: add option to no-unsafe-negation (fixes #12163)* chore: undo autoformatting + rename function* update: code review changes- typos- clarity of docs- extra test cases* fix: fix failing tests* update: code review changes - add backticks* chore: remove comma	True	
docs: clarified pr guidelines in maintainer guide (#8876)	False	
fix: wrong 'plugin-missing' error on node.js 12 (fixes #11720) (#11722)	False	
chore: avoid handling rules instances in config-validator (#9277)handling `rules` instances outside of `linter` is undesirable, because this gives any handler the ability to mutate linters at a distance. this commit updates `config-validator` to avoid handling `rules` instances directly.the long-term goal is to make the `rules` property of `linter` instances private, so that only `linter` handles `rules` instances. however, this isn't possible yet because `plugins` still relies on mutating a `rules` instance that it's provided as an argument.	True	
upgrade: doctrine version to 1.1.0 (fixes #4854)	True	
fix: fix path errors in windows (fixes #4888)	False	
added link to roadmap and jshint feature parity list.	True	
fix: no-unused-expressions directive support (fixes #1185)	False	
removing node 0.11 test - it fails all the time	False	
chore: replace the inquirer dependency with enquirer (#13254)* update: replace dependency inquirer with enquirer (fixes #13208)closes #13208* replace confirm prompts with toggle prompts to match inquirer behaviour* fix skip property typo* add help description* use hint instead of message for usage informatinoco-authored-by: yeonjuan <yeonjuan93@naver.com>* add comment about initial select prompt* update config-initializer.js* update config-initializer.jsco-authored-by: yeonjuan <yeonjuan93@naver.com>	True	
chore: upgrade @eslint/eslintrc@1.2.0 (#15648)	False	
breaking: disallow reserved words in es3 (fixes #15017) (#15046)* breaking: disallow reserved words in es3 (fixes #15017)* use real version	False	
build: changelog update for 8.8.0	True	
update: fix false negative of no-useless-escape in template literal tags (#8238)	False	
update: make default-case comment case-insensitive (fixes #7673) (#7742)	False	
docs: fix code snippet to refer to the correct option (#9313)fixes a small copy-paste mistake.	True	
add test coverage for new foo constructor usage	True	
update: expose `geterrorresults` as a static method on `cliengine` (fixes #3242)	False	
docs: revise contributor documentation on issue labels. (#9469)made this more dry and extended its coverage to previously missing but importantlabels (like `accepted`, `evaluating`, and `blocked`) by referencing maintainerdoc instead of repeating. reorganized labels by the questions they answer forcontributors. incorporated bounty info into priority section. some labels, like`needs bikeshedding`, seem totally undocumented. fixing that could be another task.second commit, squashed, has demoted maintainer guide???s reference to more obviousoptionality, so only particularly inquisitive contributors will feel a need toconsult it.	True	
build: add load performance check inside perf function (fixes #3994)	True	
upgrade: unfrozen @eslint/eslintrc (fixes #15036) (#15146)	False	
breaking: classes default `true` in accessor-pairs (fixes #12811) (#12919)	True	
sponsors: sync readme with website	True	
upgrade: esquery@^1.0.1 (fixes #8733) (#10170)* upgrade: esquery@^1.0.1 (fixes #8733)* chore: add extra tests* chore: fix lint errors* chore: removing accidental copy/paste test	False	
fix: rule options merge (fixes #3175)	False	
docs: address upcoming violation of markdownlint rule md050/strong-style (#15529)	False	
fix: improve `prefer-template` fixer (#15230)fixes #15083	False	
rule no-mixed-requires (fixes #221)	False	
4.1.0	False	
documentation and minor changes	False	
update: add typed arrays into builtin environment globals (fixes #846)	True	
fix: respect generator function expressions in no-constant-condition (#10827)	True	
new: add id-match rule (fixes #2829)	False	
fix: no-useless-return autofix removes comments (#12292)	True	
add back in ability to load rules from a directory	True	
breaking: tweak space-before-function-paren default option (fixes #8267) (#8285)this updates the `asyncarrow` option for space-before-function-paren to be consistent with the other options in the rule. previously, the user had to explicitly opt-in to async arrow function checking, for backwards compatibility.	True	
fix: disregards leading './' in ignore pattern or file name (fixes #1685)	False	
docs: missing allow option in  docs	False	
docs: badges should only refer to master branch	True	
docs: fix max-lines samples (fixes #6516) (#6515)current docs contains invalid samples of `max-lines` rules configuration:`eslint max-lines: ["error", 2, {"skipcomments": true}]`should be`eslint max-lines: ["error", {"max":2, "skipcomments": true}]`	False	
update: enable function string option in comma-dangle (fixes #12058) (#12462)	False	
fix: ignore inline plugin rule config in autoconfig (fixes #7860) (#7919)	True	
added mocha tests for radix and quotes; fixed some of the internals on quotes from vows annotations	True	
build: changelog update for 5.6.1	True	
new: no-param-reassign rule (fixes #1599)	False	
fix: update peerdependencies of airbnb option for `--init` (fixes #6843) (#6846)	True	
fix: edge-cases of semi-style (#9560)* fix: edge-cases of semi-style* fix: remove emptystatement entirely	False	
update: improve report location for space-infix-ops (#12324)	True	
change default on to be errors instead of warnings (fixes #326)	True	
fix: ensure using correct estraverse (fixes #3951)	False	
fixe #648: wrap-iife rule should actually check that iifes are wrapped	False	
docs: update sentence in fixable rules	False	
docs: update release process (#7127)	False	
adding mimosa-eslint to build system listthanks!	True	
fix: handle await expressions correctly in `no-unused-expressions` (#7175)(refs #7101)	False	
docs: move legacy rules to stylistic (files #4111)	True	
new: array-element-newline rule (fixes #6075) (#8375)	False	
new: accessor-pairs rule to object initializations (fixes #1638)	True	
docs: update typescript parser (refs #11368) (#11369)	False	
chore: enable eslint-plugin/test-case-property-ordering (#9040)* chore: enable eslint-plugin/test-case-property-ordering.* fix: linting errors.	False	
docs: fix typo	False	
update: add comma-style options for calls, fns, imports (fixes #7470)* update: apply comma-style rule to calls, fns, imports (fixes #7470)* update: revert debug stuff (fixes #7470)* update: update documentation (fixes #7470)* update: add missing semi-colons to comma-style rule (fixes #7470)* update: invert evaluation of exceptions for new comma-style checks (fixes #7470)	True	
fix: incorrect location for padded-blocks (fixes #4913)	True	
update: add allowpattern option for dot-notation rule (fixes #1679)if the dot-notation rule is configured with an allowpattern string, the rule will not be enforced if the property name matches the pattern.  this allows the dot-notation and camelcase rule to be used together in situations where data needs to be prepared to be sent to an external api and property names are outside of the developer's control (e.g. they include underscores).	True	
docs: fix broken link in node.js api docs (#13307)as noted in https://github.com/eslint/eslint/pull/13302, this link is currently broken.	False	
chore: remove unneeded devdeps `linefix` and `gh-got` (#8160)	False	
fixes #200: no-octals should not see leading-0 floats as violations	False	
docs: update release blog post template (#15094)	False	
chore: add eslint as a devdependeny (#11654)	False	
build: test node 9 on travis (#9556)	False	
downgrade: escope pegged to 2.0.6 (refs #2001)	True	
chore: update require path for ast-utils (#10693)	True	
docs: make `fix` param clearer (fixes #6366) (#6367)updating the nodejs api docs to avoid surprising developers using the `fix` param.	True	
fix: `--ignore-pattern` can't uningnore files (fixes #6127) (#6253)	False	
chore:  rearrange init options. (#10131)* chore:  rearrange init options.put "use a popular style guide" to be 1st, because users are more likely to use it.* update config-initializer.js* chore: put standard style guide ahead.* chore: add style guide link	True	
docs: ensure all rules have entry on top-level rules index page	True	
fix: no-spaced-func is now an error	False	
3.13.1	False	
update: no-extra-parens overlooked spread and superclass (fixes #8175) (#8209)* update: no-extra-parens overlooked spread and superclass (fixes #8175)* chore: remove a magic number	False	
fixing jshint complaints.	False	
fix: clone config before validating (fixes #12592) (#13034)* fix: clone config data before validation (fixes #12592)* chore: added test  and cloning before validation* chore: test fix* chore: rules tests fixes* update: cloning config using json parse and stringify* update: changed test description* chore: removed unnecessary tests* update: changed clone logic* update: using lodash.clonedeepwith for cloning* update: handling circular ref cases* update: using json method for cloning logic* update: moved clone logic to normalieobjectconfigdata* chore: added comments for cloning reason	True	
fix: space-after-keywords w/ "never" should allow else-if (fixes #1118)	False	
fix the positive case for no-unreachable where there is no returnstatement at all, or if the return is at the end. those cases should notreturn any errors. the error condition was not be checked beforethrowing the rule error.	True	
new: allow regexes in ruletester (fixes #7837) (#8115)* new: allow regexes in ruletester (fixes #7837)* update test description	False	
chore: clean up inline directive parsing (#12375)* give variable name to matched textthis simply makes the code a bit easier to read by giving a name to `match[1]`.* refactor: untangle logic for parsing directivesthere are a few thing going on in this function which were gettingconflated:1. parsing a `directivetype` out of the comment.2. ignoring directives that are in line comments but only support blockcomments.3. warning on and ignoring line comments that span multiple lines.previously these three pieces of functionality were tightly coupledwhich made the code harder to read. after this change each task ishandled independently of the other.* core: consolidate handling disable directivesrather than conditionally set a mutable value and check for it at the end of the switch statement, we can actually just handle it inline by using a fallthrough.	True	
feat: add `destructuredarrayignorepattern` option in `no-unused-vars` (#15649)* feat: add `destructuredarrayignorepattern` option in `no-unused-vars`fixes #15611* docs: add `destructuredarrayignorepattern` option in `no-unused-vars`* fix: remove false positives and false negatives* docs: update* test: add more cases* docs: update* fix: remove false positives* docs: updateco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* feat: improve error message* feat: cover more cases* docs: add more example* refactor: code* fix: check for all references* docs: add more examples* chore: apply suggestions from code reviewco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
sponsors: sync readme with website	True	
update: warn for deprecation in node output (fixes #7443) (#10953)* fix: warn for deprecation in node output (fixes #7443)* reduce complexity of createrulewarnings()* specify the useddeprecatedrules object properties in the docs* add safety checks for createrulewarnings()* document replacedby in working-with-rules* move meta.docs.replacedby to meta.replacedby	True	
fix: no-constant-condition doesn't introspect arrays (fixes #12225) (#12307)* fix: no-constant-condition doesn't introspect arrays (fixes #12225)* update: no-constant-condition allows for narrower scope of varriable arrays* update: no-constant condition now requires direct parent to be binary expression* update: no-contant-contidtion now checks parent type before operator, unit tests include more paths	True	
build: make sure that all md files end with empty line (fixes #2520)	False	
docs: add parseroptions to ruletester section of working-with-rules	True	
docs: clarify jsx option usage (#6132)* make it clear that you need to do more than just enable jsx to get useful linting when jsx is used* remove space that is white* reword note about jsx support to be less react.js-centrix	True	
chore: fix typo in cliengine test name (#9741)	False	
bug: max-len fix to report correct line number (fixes #552)	True	
chore: don't throw if rule is in old format (fixes #6848) (#6850)	True	
build: check-commit now checks commit message length. (fixes #3706)	False	
docs: change when not to use object spread (#10621)object spread is not just syntax sugar. it actually performs better in browsers. the "when not to use it" section should therefore give a more nuanced opinion on when object.assign is desireable.	True	
feat: pass cwd to formatters (refs eslint/rfcs#57) (#13392)* chore: make fixture test assertions more expliciti need to add another formatter to this directory that will shift all ofthese results, so i'm making these assertions more explicit so it'sobvious why a seemingly-unrelated change will cause these to fail.* update: pass cwd to formatters (refs eslint/rfcs#57)* chore: update tests using formatter fixture dir* update docs* fix link to eslint api docsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* remove unused docs.category rule meta fieldco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* fix typo in docs noteco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: brandon mills <mills.brandont@gmail.com>co-authored-by: brandon mills <btmills@users.noreply.github.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
build: automatically convert line endings in release script (fixes #2642)	True	
build: package.json update for eslint-config-eslint release	True	
5.5.0	False	
docs: gitignore syntax updates (fixes #8139) (#10776)* docs: .gitignore syntax updates (fixes #8139)# please enter the commit message for your changes. lines starting# with '#' will be ignored, and an empty message aborts the commit.## on branch gitignore-syntax-updates# changes to be committed:#modified:   docs/user-guide/command-line-interface.md#modified:   docs/user-guide/configuring.md#adds cross links between .eslintignore and --ignore-pattern sections.adds link to --ignore-pattern section directing to .gitignore specs.adds description to .eslintignore section that emphasizes forward slashes being necessary with examples of valid and invalid syntax.adds explicit statements to both sections that support this example.* adds a comma	True	
docs: fix typo in migration guide (#14985)	False	
0.0.4	False	
chore: enable additional eslint-plugin-jsdoc rules (#12336)* chore: enable jsdoc/newline-after-description* chore: enable jsdoc/require-hyphen-before-param-description	True	
0.23.0	False	
update: cache files that failed linting (fixes #9948) (#10571)* chore: extract current cache logic into lint-result-cache module* chore: moved config hash validation to lintresultcache* chore: added tests for lint-result-cache* chore: small cleanup* update: cache files that failed linting (fixes #9948)* chore: remove unused "removeentry" api from lintresultcache* ensure empty source is handled correctly* remove unnecessary test fixture* don't cache files with output property	True	
fix: indent crash on caseless switch (fixes #2144)	False	
fix: `no-extend-native` crashed at empty defineproperty (fixes #4438)	False	
update: restore the "runs" global present in jasmine 1.3 (fixes #1498)	True	
fix: make no-multi-spaces work for every case (fixes #1603, fixes #1659)	True	
chore: enable rest/spread rules on eslint codebase (#10211)this enables the `prefer-rest-params`, `prefer-spread`, and `rest-spread-spacing` rules on the eslint codebase.	False	
build: changelog update for 4.18.2	True	
chore: reorganize cli options and associated docs (#9758)* chore: moved cache options below some more important option sets* chore: created "inline configuration comments" option section* chore: created "fixing problems" option section	True	
upgrade: espree@6.0.0 (#11869)	False	
docs: mention commonjs along with node.js (fixes #3388)	False	
fix: require-atomic-updates reports parameters (fixes #11723) (#11774)	True	
docs: document eslint api (#14934)* docs: document eslint api* update docs/developer-guide/architecture.mdco-authored-by: ??????????????? <weiran.zsd@outlook.com>co-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>co-authored-by: ??????????????? <weiran.zsd@outlook.com>	False	
docs: update license copyright (#14877)	False	
fix: allow duplicated let declarations in `prefer-const` (fixes #7712) (#7717)	False	
build: changelog update for 4.0.0	True	
3.8.0	False	
docs: add note about node.js requiring ssl support (fixes #11413) (#12475)* docs: add note about node.js requiring ssl supportadds a small note that node.js requires ssl to be built in. while this hasn't affected many users, it's good to document in case this comes up in the future. (and the node.js project itself did run into this as a problem.)* docs: update getting started guide with ssl note* chore: rm trailing space	True	
build: remove release notes auto-publish (refs #2640)	True	
docs: add erroronunmatchedpattern option to cliengine (#12834)	True	
5.0.0-alpha.0	False	
add: exception option for `no-extend-native` and `no-native-reassign` (fixes #2355)	True	
fix: clarify documentation on implicit ignore behavior (fixes #12348) (#12600)	False	
created no-dangle rule.created the no-dangle rule, which warns when it encounters a trailing comma in an object literal. the following will raise warnings:var foo = {bar: "baz",}fixes issue #13	False	
chore: extract some functionality to eslintrc (refs #13481) (#13613)	True	
build: package.json update for eslint-config-eslint release	True	
docs: adding a little guidance to rule documentation (#10301)felt like it needed a little more direction to point users in the right direction if they don't want to use a return.	True	
new: `line-comment-position` rule (fixes #6077) (#6953)	False	
fix: `no-spaced-func` had been crashed (fixes #4508)if the `callee` is enclosed with parentheses and arguments parenthesesare omitted, `no-spaced-func` had been crashed.	False	
docs: improve documentation of no-return-await (#13215)* docs: improve documentation of no-return-await* docs: add try/catch caveat to no-return-awaitco-authored-by: kai cataldo <kai@kaicataldo.com>* docs: fix typo in documentation of no-return-awaitco-authored-by: kai cataldo <kai@kaicataldo.com>* docs: apply suggestions from code reviewco-authored-by: kai cataldo <kai@kaicataldo.com>co-authored-by: kai cataldo <kai@kaicataldo.com>	True	
docs: update readme team and sponsors	True	
docs: re-tag jsx code fences (fixes #4020)	False	
2.0.0-beta.3	False	
update: add atomtest env (fixes #4848)	True	
docs: fix error in example code for sort-imports (fixes #8734) (#9245)	True	
optimize findvariable() in no-unused-varsthis is the lowest-hanging fruit - findvariable() was taking asignificant portion of the overall time due to a linear search ofall variables. the first step, with the smallest change to thecode, was to add a map of variable names to indices. look up thevariable by name, then get it by its index in the existing list.	True	
docs: small semantic issue in documentation example (fixes #4937)	False	
5.10.0	False	
docs: update no-tabs to match existing standards & improve readbility (#7590)* docs: update no-tabs to match existing standards & improve readbility* update no-tabs meta data to reflect docs change	True	
sponsors: sync readme with website	True	
chore: remove path-is-absolute in favor of the built-in (fixes #6598) (#6600)	True	
fix: no-useless-rename autofix removes comments (#12300)	True	
build: adding rc release script to package.json (#10456)	True	
update: ecmaversion defaults to 5, and allows "latest" (#14622)* update: set default ecmaversion => 5 and allows "latest"* chore: add more tests	True	
fix: confusing ruletester error message when options is not an array (#8557)	False	
readme: npm i -> npm installalthough `npm i` is shorter to type, having it in the readme adds some unnecessary complexity. i had to stop and think to figure out what the command actually did. as all other projects i've come across uses `npm install`, i think it's better to follow an accepted convention and show the longer command.for people that copy and pastes it won't make a difference, and people that type it out can still use the sort version.	True	
chore: fix small typo (#14951)	False	
update: rewrite tokenstore (fixes #7810) (#7936)* update: rewrite tokenstore (fixes #7810)- refactors tokenstore with es2015 classes.- adds object-style options to every method of tokenstore.e.g. `{includecomments: true, skip: 0, filter: null}`- adds `getfirsttokenbetween` and `getlasttokenbetween` methods.- adds `gettokenorcommentafter` and `gettokenorcommentbefore` methodsto tokenstore for backward compatibility.- removes the tokenstore instance for the mix of tokens and comments.* chore: refactor with new api* docs: update working-with-rules.md* fix: improve tests* chore: simplify `isnot*` functions* chore: fix jsdoc comments.* fix: `iscomment` returns true for shebang* chore: remove unnecessary `isoftoken` function* chore: refactor tokenstore; remove `moveprev` methods* chore: rename variables: start, end, imap* fix: this.predicate() ??? predicate()* chore: typeof ??? in* chore: use lodash.sortedindexby* chore: update jsdoc comments* docs: add a note for skip & filter* chore: fix typo* chore: fix "block" to `.startswith("block")`to change `block` to `blockcomment` in future.* docs: add compatibility notes to jsdoc* chore: modularize tokenstore* chore: fix plural in test descriptions* fix: add assertions for options.skip and options.count* chore: it/ic ??? tokenindex/commentindex	True	
build: changelog update for 7.16.0	True	
fix: block-scoped-var to handle imports (fixes #2087)	True	
build: changelog update for 5.2.0	True	
chore: uncommented test for empty program for no-invalid-meta (#10046)	True	
chore: upgrade deps. (#9289)	False	
fix: `no-trailing-spaces` wrong fixing (fixes #6933) (#6937)if `skipblanklines` option is enabled, counting total length for blanklines was lacking.	True	
update: add deprecated indent-legacy rule as v3.x indent rule snapshot (#8286)* update: add deprecated indent-legacy rule as v3.x indent rule snapshotthe indent rewrite in https://github.com/eslint/eslint/pull/7618 will cause the indent rule to report more errors when it is merged for v4.0.0. to make the migration process easier, this commit introduces an indent-legacy rule as a snapshot of the v3.x version of the indent rule. the indent-legacy rule is immediately deprecated in favor of the indent rule.* ignore coverage for the indent-legacy rule	True	
docs: minor fix for one-var rule	True	
use cache on config files seach	False	
7.32.0	False	
upgrade: chai to 3.5.0 (fixes #5647)	True	
0.21.0	False	
sponsors: sync readme with website	True	
fix: use regexpp's default ecmaversion in no-invalid-regexp (#13968)	False	
fix: allow globalreturn in consistent-return (fixes #1868)when the rule saw a global `returnstatement`, it was attempting to get`returninfo` for a function which didn't exist in global scope. thispr treats the `program` node as a function as well, since it is infact a function body in node.js. when `globalreturn` is not enabled,this will change nothing because the parser will have already caughtany erroneous top-level returns.	True	
new: add rule schemas (refs #2179)	False	
change configinfo to options and add test coverage	True	
update: write the summary in stylish formatter in yellow if no errors (fixes #906); test coloring of messages	True	
fix: apply environment configs last (fixes #3915)	False	
fixes #699: brace-style does not check function expressions	False	
new: `prefer-rest-params` rule (fixes #4108)	False	
build: run phantomjs tests using karma (fixes #6128) (#6178)	True	
fix: prepare config before verifying sourcecode (fixes #4230)	True	
docs: fix typo in configuring docs	False	
docs: fix wrong max-depth example (fixes #11991) (#12358)signed-off-by: gabriel r. sezefredo <g@briel.dev>	False	
docs: removed reference to brace-style stroustrup default (fixes #1000)	True	
0.0.2-3	False	
fix: handle comments in block-spacing (fixes #4387)	False	
docs: clarified that core prs require issue in maintainer guide (#8927)	False	
new: add metadata to few test rules (fixes #4494)	True	
fix: no-unused-vars false pos. with markvariableasused (fixes #10952) (#10954)	False	
8.0.1	False	
sponsors: sync readme with website	True	
fix: generator-star should allow params (fixes #1677)	True	
upgrade: escope to 2.0.7 (fixes #1978)	True	
fix: remove extraneous linefeeds in `one-var` fixer (fixes #10741) (#10955)	False	
docs: added note about node/cjs scoping to no-redeclare (fixes #8814) (#8820)	True	
fixed context.report message parsingfixed an issue where, if passed all available options,`context.report` would fail to properly parse the violation messageand would instead display the raw message.fixes #642	True	
update: remove default overrides in keyword-spacing (fixes #12369) (#12411)* update: remove default property in override scheme* chore: add a "missing after in overrides" test case for keyword-spacing	True	
chore: increase mocha timeout for copying fixtures (#13768)for the last several weeks, our ci jobs have been flaky due to testhook timeouts on the windows and macos runners. i traced most of thefailures to four `before` hooks that copy the test fixtures to atemporary directory. they usually take ~2.5s, but that occasionallyspikes to tens of seconds: in the two times i was able to repro thetimeouts, the slowest copy jobs were 25 and 32 seconds. rather thanincreasing the global test timeout, i instead bumped it just for thesefour hooks that were causing problems.	True	
docs: remove mistaken "off by default"nonwords are not "off" by default, they are "no spaces between" by default.	False	
docs: add linting for second half of rule docs (refs #2271)	True	
update: add `allow` option to `no-shadow` rule (fixes #3035)	True	
docs: use npm's keyword routeuse the purpose-built `/browse/keyword/[keyword]` route than a generic search term.	False	
docs: fixed typo in comment (#15531)	False	
build: changelog update for 6.0.0-alpha.2	True	
docs: delete empty table of links from code path analysis (#6423)	False	
fix: correct error and test messages to fit config search path (#9428)	True	
chore: refactor to use es6 classes (part 1)(refs #7849) (#7846)	True	
docs: fix broken links in configuring/readme.md (#14046)	False	
docs: add note about git's linebreak handling to linebreak-style docs (#8361)this commit adds a note to the linebreak-style docs about how git handles linebreaks on windows, and suggests using a `.gitattributes` file to control git's behavior.(refs https://github.com/eslint/eslint/pull/7823)	True	
3.13.0	False	
fix: `no-invalid-this` false positive (fixes #6824) (#6827)	False	
fix: `space-before-keywords`; allow opening curly braces (fixes #3789)	True	
fix: adds conditional for separaterequires in one-var (fixes #10179) (#10980)	True	
docs: update readme team and sponsors	True	
docs: update jscs faq (#10221)	False	
update: no-inner-declarations false negative in non-block (fixes #12222) (#13062)* fix: consistencies for blockstmt no-inner-fn (fix #12222)* chore: added some more tests* chore: allowing named and default exports and tests* chore: simply the check conditions* chore: simplify checks and ancestor loop* chore: using getupperfunction to get body* chore: added tests and minor changes* docs: eg for both non-blockstatement* chore: right docs example and test refactore	True	
fix: use error templates even when reading from stdin (fixes #7213) (#7223)	False	
update: fix parenthesized callexpression indentation (fixes #8790) (#8802)this fixes a bug in the `indent` rule where the arguments of a call expression were aligned offset the last token of the callee, even when the callee was parenthesized. instead, the rule should offset from the closing paren in those cases.	True	
new: add `parser` as an option (fixes #3127)	False	
docs: add additional examples for memberexpressions in indent rule. (#7408)	True	
fix: allow scoped configs to have sub-configs (fixes #2594)	True	
fix: broken code path of direct nested loops (fixes #8248) (#8274)* fix: broken code path of direct nested loops (fixes #8248)* chore: remove a marker to grep	True	
feat: update block-spacing for class static blocks (#15297)updates the `block-spacing` rule to apply to class static blocks.refs #15016	True	
new rule: no-lone-blocks (fixes #512)removed extra down-traversal in favor of looking up one level atancestors and changed config from warning to error to incorporatepr feedback.	True	
update: multipass should not exit prematurely (fixes #5995) (#6048)	False	
breaking: remove duplicate warnings of `no-undef` from `block-scoped-var` (fixes #3201)	False	
docs: add another example for when not to use no-await-in-loop (#10714)	True	
docs: fixed a typo in brace-style.md	False	
breaking: cliengine abstraction for cli operations; formatters no longerare passed configs (fixes #935)	True	
docs: add newline to no-process-env (fixes #1627)	True	
update about page	False	
fix: check indentation of first line (fixes #1796)	False	
breaking: calculate leading/trailing comments in core (#7516)* breaking: calculate leading/trailing comments in core* fix capitalized-comments* fix trailing comment behavior for empty nodes* refactor lines-around-comment.js* add regression tests for shebangs in capitalized-comments* fix up comments in lib/util/source-code.js* extract shebang matcher regex into ast-utils.js	True	
sponsors: sync readme with website	True	
fix: no-comma-dangle violation in unit test and makefile.js/lint not checking return codes (fixes #1306)	False	
new: getter-return rule (fixes #8449) (#8460)	False	
upgrade: babelify (#10185)	False	
update: remove blank lines at beginning of files (fixes #5045)	False	
breaking: drop `codeframe` and `table` formatters (#14316)* drop `codeframe` formatter* drop `table` formatter* inform user of removaleasy upgrades ftw* fix suggestion* fix test name	True	
update: add configuration option to `space-before-blocks` (fixes #3758)test(space-before-blocks) add es6 module testing export syntaxfeat(space-before-blocks) update schema to accept keywords / function args- maintain previous `always`/`never` syntax, and add alternate syntax toenable separate support for `keywords` and `functions`. modeled after`space-before-function-paren` structure.issue-3758test(space-before-blocks) add valid tests: failing pending changes to rule- add first set of red tests to the valid tests. only the `never` path can tested, as the currentcode reads the object as `always`.- todo: add invalid tests, add `always` path tests.issue-3758test(space-before-blocks) add remaining `valid` tests for `keywordonlyargs` pathfeat(spacing-before-blocks) update rule to allow separate checks against `keywords` and `functions`- add branching logic for when a space is required. check if config given is an object and assignchecks individually. if the config is "never" assign both to false, if the config is "always"assign both to true.- check ancestor node to determine if the block belongs to a function or a keyword and utilizeconfig accordinglyissue-3758test(space-before-blocks) add invalid tests for updates to rule- add invalid tests for each case in space-before-blocks. added tests include one for`keywordonlyargs`, one test for `functionsonlyargs`, and two tests that combine both rules.issue-3758docs(space-before-blocks) update documentation to include optional configuration- add description and examples for optional configuration of functions and keywords.issure-3758	True	
fix: `func-style` should ignore exportdefaultdeclarations (fixes #5183)	False	
new: no-buffer-constructor rule (fixes #5614) (#8413)* new: no-buffer-constructor rule (fixes #5614)* add examples of handling user input	True	
breaking: disallow sourcecode#getcomments() in ruletester (refs #14744) (#14769)* breaking: disallow sourcecode#getcomments() in ruletester (refs #14744)* update lib/rule-tester/rule-tester.jsco-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>co-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>	True	
removing merge originals	False	
sponsors: sync readme with website	True	
fix: incorrect error at eof for no-multiple-empty-lines (fixes #4917)	True	
fixes #332: unary word operators must be followed by whitespace	True	
upgrade: optionator version to 0.8.1 (fixes #4851)	True	
fix: run no-unexpected-multiline only if needed (fixes #8550) (#8551)	False	
chore: fix incorrect error location properties in tests (#8307)	False	
2.0.0	False	
build: lock io.js to v2.1.0 (fixes #2653)	True	
fix: no-octal should report nonoctaldecimalintegerliteral (fixes #11794) (#11805)examples: 08, 018, 08.1	False	
build: disable bundling dependencies (fixes #5687)	False	
new: pass cwd from cli engine (#12389)* new: pass cwd from cli engine* fix linting error	False	
docs: improve eol-last examples in docs (#7227)	False	
fix: multiline-comment-style autofixer added trailing space (#9454)this updates the multiline-comment-style autofixer to avoid adding a space after the `starred-block` asterisk for blank lines.	True	
docs: steps for adding new committers/tscers (#7221)	True	
fix: no-redeclare switch scoping (fixes #2337)	False	
fix: the "../.." folder is always ignored (fixes #10675) (#10682)	False	
update: add ignorecomments option to no-trailing-spaces (#8061)	True	
docs: add missing item to 4.0 migration guide table of contents (#8835)(fixes #8828)	True	
docs: make template link wording more clear (#10219)this wording would help me find the actual template before proposing new rule.pr migrated from https://github.com/eslint/eslint.github.io/pull/462#issuecomment-381397073	True	
6.6.0	False	
docs: `func-style`: clarify when `allowarrowfunctions` is used (#11548)	False	
fix: scoping issues for no-unused-vars (fixes #1733)	True	
new: disable comment config option (fixes #3901)this adds a `noinlineconfig` option, off by default, that disablesinline configuration in comments of a particular file.this disable:* `/*eslint-disable*/`* `/*eslint-enable*/`* `/*global*/`* `/*eslint*/`* `/*eslint-env*/`(fixes #3901)	False	
chore: improve a few comments and fix typos (#14125)	False	
docs: add jasmine rules and eslintplugin npm linksfollowing #1660 (#1668), i've just overhauled [eslint-plugin-jasmine](https://github.com/tlvince/eslint-plugin-jasmine) (previously eslint-plugin-no-exclusive-tests) and thought i'd do a bit of shameless self-promotion :wink:it might also be nice to start highlighting others' efforts. i've also added a link to the eslintplugin tag on npm.	True	
added emacs/flycheck integration	False	
docs: make marking a default option consistent with other rules (#10650)	False	
fix: `prefer-const` got to not change scopes (refs #5284)	True	
docs: fix broken links (#9488)	False	
docs: cleaning dead links	False	
chore: remove checkbox from pr template prerequesites (#13330)	False	
docs: fix use of wrong word in configuration doc	False	
added ability to retrieve scope using escope.added the `getscope` function to `eslint.js`. in the context of a rule, calling `getscope` will return an object representing the current scope.	True	
docs: improve options description in `no-redeclare`	False	
update: add fixer for prefer-arrow-callback (fixes #7002) (#7004)	True	
4.18.0	False	
build: changelog update for 7.1.0	True	
chore: fix comment spacing in tests (#8405)	False	
fix: improve pref of globbing by inheriting glob.globsync (fixes #6710) (#6783)	False	
docs: clarify behavior if `meta.fixable` is omitted (refs #13349) (#13493)	False	
sponsors: sync readme with website	True	
upgrade: espree to 2.2.0 (fixes #3011)	True	
revert "docs: update readme for legend describing rules icons (refs #4355)"	True	
update: handle crlf line endings in spaced-comment rule (fixes #2884)	False	
added documentation for `guard-for-in` rule	True	
update: support class fields in the `complexity` rule (refs #14857) (#14957)* update: support class fields in the `complexity` rule (refs #14857)* use code path analysis* remove an extra empty line	False	
chore: make parsejsonconfig() a pure function in linter (#9186)this updates the `parsejsonconfig` function in `linter` to return a result object rather than pushing problems to a provided list of messages. the goal of this change is to give the `verify` method sole control of the `messages` array. this will make the code easier to follow (since the array won't be mutated from a distance), and it will also allow the array to be replaced with a local variable rather than an instance property.	True	
update: add es2021 environment (refs #13602) (#13603)* update: add es2021 environment (refs #13602)* add no-undef test	False	
docs: make clear how rule options are overridden (fixes #14962) (#14976)* docs: make clear how rule options are overridden (fixes #14962)* docs: use always double quotes for uniformity	True	
docs: update readme info about jshint (#6027)	False	
chore: add object-property-newline tests to increase coverage. (#9553)	True	
chore: remove undocumented linter#markvariableasused method (refs #9161) (#9266)	False	
docs: update documentation for max-len to include description of second option (fixes #1006)	True	
upgrade: `js-yaml` to v4 (#14890)* upgrade: js-yaml to v4https://github.com/nodeca/js-yaml/blob/master/changelog.md#400---2021-01-03* allow python licenses	True	
docs: standardize on '*' for unordered lists, enable corresponding markdownlint rule.	True	
build: turnoff ci branch build (fixes #8804) (#8873)* build: turnoff ci branch build (fixes #8804)* add node 8 check* remove docs build* remove doc comment	False	
fix: no-constant-condition should not flag += (fixes #2155)	False	
docs: clarify how to use configs in plugins (#11199)	True	
docs: mention allowed semicolons in "never" mode for 'semi' rule (fixes #931)	True	
upgrade: espree to 3.5.0 (#9074)	True	
build: automatically generate rule index (refs #2860) (#6658)	True	
sponsors: sync readme with website	True	
feat: catch `undefined` and `boolean()` in no-constant-condition (#15613)identify `undefined` and `boolean(somethingconstant)` as both being constant.	True	
3.8.1	False	
docs: fixed a typo (fixes #11999) (#12000)	False	
docs: distinguish examples in rules under stylistic issues part 5 (#6291)	False	
7.8.1	False	
7.17.0	False	
docs: update readme team and sponsors	True	
update: for `yoda`, add a fixer (#7199)	True	
update: eslint --env-info output os info (#14059)* update: eslint --env-info ouput os info* chore: rm pkg os-name* chore: resotre original os.platform & os.release	True	
fix: remove unnecessary file exists check (fixes #1831)	False	
build: changelog update for 8.11.0	True	
fix: refactor `no-duplicate-case` to be simpler and more efficient (fixes #3440)	True	
fix: `indent` to not crash on empty files (fixes #3570)	True	
docs: fix wording in docs for no-extra-parens configwithout this exact wording, the following code example was not styled properly.	True	
fixes #333: add rule to disallow gratuitously parenthesised expressions	True	
new: `require-await` rule (fixes #6820) (#7435)* new: `require-await` rule (fixes #6820)* fixes fileoverview tag.* extracts `isemptyfunction` to ast-utils.	True	
fix: markvariableasused() should work in node.js env (fixes #2089)	False	
docs: replace ecmafeatures with parseroptions in working-with-rules	False	
build: changelog update for 4.18.0	True	
update: improve report location for linebreak-style (refs #12334) (#13317)	True	
fix: improve report location for no-tabs (#12471)	True	
added documentation for `complexity` rule	True	
fix: revert config cloning (fixes #13447) (#13449)* revert "fix: replace infinity with number.max_safe_integer (fixes #13427) (#13435)"this reverts commit de77c11e7515f2097ff355ddc0d7b6db9c83c892.* revert "fix: clone config before validating (fixes #12592) (#13034)"this reverts commit 7fb45cf13e9908d489bd6d5fba3b7243c01508b9.	True	
fix: handle try/catch correctly in `no-return-await` (fixes #7581) (#7582)* fix: handle try/catch correctly in `no-return-await` (fixes #7581)* use a while loop instead of recursion	False	
breaking: stop checking jsx variable use, expose api instead (fixes #1911)	True	
new: multiline-ternary rule (fixes #6066) (#6590)	False	
docs:  adding a section about disable rules for some files (#10536)	True	
build: package.json and changelog update for 3.12.1	True	
update: fix `lines-around-directive` semicolon handling (fixes #7450) (#7483)	False	
fix: `cachelocation` handles paths in windows style. (fixes #4285)	False	
docs: no use eslint.linter in code example (#12037)`eslint.linter` exists for backwards compatibility, but we do not recommend using it because any mutations to it are shared among every module that uses `eslint`. instead, please create your own instance of `eslint.linter`.	True	
update build system to generate eslint.org during release	True	
fix: `no-useless-return` false positive on conditionals (fixes #7477) (#7482)	False	
7.25.0	False	
fix: `no-extra-parens` false positive at iife with member accessing (fixes #3653)	False	
change some documentation extensions from js to md	True	
fix: stylish formatter blue text -> white text (fixes #607)	True	
add `npm run profile`.* this should open up a new window (ideally chrome).* pop open the dev tools. click on the profile tab.* hit escape to view the console as well.* once the profile "all" is complete, you should be able to inspect the run.of note: v8 has a sampling profiler -- so if the stacks look a bit odd, it's usuallybecause the sampling caught at a weird moment. by default the benchmark is configuredto run each of:1. large: unminified, concatenated jshint codebase.2. medium: unminified, concatenated jquery 2.1.0 codebase.3. small: unminified, concatenated knockout codebase.	True	
fix: update vars-on-top for class static blocks (#15306)fixes the `vars-on-top` rule to allow `var` declarations at the top of class static blocks.refs #15016	True	
docs: remove a misleading example (#11204)remove one of the misleading examples for incorrect usage	True	
build: update markdownlint dependency to 0.1.0 (fixes #4988)	True	
fix: no-useless-computed-key false positive with `__proto__` (#7934)	True	
sponsors: sync readme with website	True	
docs: typo in `sort-imports`	True	
fix: not check for punctuator if on same line as last var (fixes #3694)	True	
sponsors: sync readme with website	True	
docs: fix incorrect example comments for unicode-bom rule (fixes #11937) (#11938)* docs: fix incorrect example comments for unicode-bom rule (fixes #11937)* docs: add explicit default option in "never" examples (fixes #11937)	True	
docs: fix in semi.md: correct instead of incorrect (#7779)	False	
update: make `indent` report lines with mixed spaces/tabs (fixes #4274) (#7076)	False	
docs: add doc on parser services (fixes #8390) (#8795)* docs: add doc on parser services (fixes #8390)* fix doc* add one update to doc* fix sentence* correct custom from customer	True	
chore: add linting to git commit (#11556)* chore: add linting to git commit* use local eslint* add support for markdown linting* add markdown linting	True	
breaking: fix comma-dangle schema (fixes #13739) (#14030)	False	
chore: remove references to parser demo (#12644)	True	
sponsors: sync readme with website	True	
fix a broken link in the docs	False	
2.10.0	False	
fix: handle one-var with no semicolon (fixes #10330) (#10371)	False	
fix: update the message to include number of lines (fixes #4342)the message returned was a bit confusing as it says "multiple blank lines not allowed." even when multiple blank lines are allowed. minor update to the message to include the number of blank lines allowed.	True	
breaking: report fatal error for linting nonexistent files (fixes #7390) (#10143)* breaking: report file not found errors (fixes #7390)* improve error message for missing files* move empty-string pattern filtering to cli-enginethis ensures that `globutil.resolveglobfilepatterns` returns an array with the same length as its input, which is important so that the original glob can be retrieved by index.* ensure error is thrown when linting empty directories* ensure error is thrown when all files in a glob are ignored* fix typos in test names* update unit test names* fix broken tests in cli-engine and cli* improve error message for file-not-found errors	True	
new: globals@7.1.0 (fixes #2682)this brings an update the the global package, which includes the newenvironmens mongo and applescript, as well as a few variable updates.	False	
fix: always resolve default ignore patterns from cwd (fixes #9227) (#10638)this fixes an issue where the default ignore patterns, such as `/node_modules`, would always be resolved from the location of an `.eslintignore` file. as a result of the bug, the `node_modules` folder in the project root directory would not be ignored if an `.eslintignore` file in a subdirectory was being used.	True	
docs: add object pattern to first section of computed-property-spacing (#15679)	True	
docs: fix mistakes in object-curly-spacing docsthe incorrect rule name was used in two places.	False	
new: computed-property-spacing (refs #2226)	False	
docs: typo in prefer-promise-reject-errors (#7958)	False	
new: generator-star middle option (fixes #1808)	True	
chore: adopt `eslint-plugin/require-meta-docs-url` rule internally (#14823)https://github.com/not-an-aardvark/eslint-plugin-eslint-plugin/blob/master/docs/rules/require-meta-docs-url.md	False	
switch to using shelljs makefile (fixes #418)	True	
docs: add v6.0.0 migration guide (#11515)	False	
upgrade: eslint-tester to 0.8.1	True	
upgrade: eslint-utils 1.4.2 (#12131)	False	
4.18.1	False	
docs: distinguish examples in rules under possible errors part 1	False	
sponsors: sync readme with website	True	
fix: syntax errors from object-shorthand autofix (fixes #7744) (#7745)this refactors object-shorthand's autofixing logic to avoid code duplication, and fixes the following issues:* shorthand async methods would cause a syntax error when fixed to longform properties* longform properties with parenthesized computed keys would cause a syntax error when fixed to shorthand properties	True	
concat-stream known to be vulnerable prior 1.5.2 (#8228)* concat-stream known to be vulnerable prior 1.5.2https://snyk.io/vuln/npm:concat-stream:20160901?utm_source=slack* update: concat-stream known to be vulnerable prior 1.5.2https://snyk.io/vuln/npm:concat-stream:20160901	True	
update: move executeontext() tests to the correct describe block (fixes #2648)	True	
docs: add docs for no-underscore-dangle (refs #562)	True	
docs: typo fixchanged article from "an" to "a" in front of "string".	True	
docs: add info about non-capturing groups to prefer-named-capture-group (#15009)fixes #15007	True	
0.10.2	False	
fix: load .eslintrc in directory with $home as an ancestor (fixes #1266)	True	
build: stringify payload of release notes (fixes #2640)	False	
sponsors: sync readme with website	True	
fix: check space after yield keyword in space-unary-ops (fixes #2707)	False	
docs: clarify that -c configs merge with `.eslintrc.*` (fixes #9535) (#9847)* docs: clarify that -c configs merge with `.eslintrc.*` (fixes #9535)users must use --no-eslintrc to prevent `.eslintrc.*` files from being used* fixing cli help output in docs/user-guide/command-line-interface	True	
breaking: add some rules to eslint:recommended (refs #14673) (#14691)* no-loss-of-precision* no-unsafe-optional-chaining* no-useless-backreference* no-nonoctal-decimal-escape	True	
new: function-call-argument-newline (#12024)	False	
new: multi-line option for the curly rule (fixes #1812)	True	
5.0.0-alpha.3	False	
fix: invalid env keys would cause an unhandled exception.(fixes #3265)	True	
docs: fix a wrong option	False	
breaking: simplify rule schemas (fixes #3625)	False	
update: no-lone-blocks does not report block-level scopes (fixes#2119)	False	
upgrade: table@6.0.4 (#13920)	False	
update: basic valid-jsdoc default parameter support (fixes #5658)improve tests	False	
rule to warn on use of math and json as functions	True	
4.14.0	False	
build: changelog update for 7.0.0-rc.0	True	
upgrade: glob-parent version in package.json (#14658)	True	
build: changelog update for 7.2.0	True	
fix: false positive about es2018 regexp enhancements (fixes #9893) (#10062)* update package.json* update no-control-regex* update no-empty-character-class* update no-invalid-regexp* update no-unexpected-multiline* update no-useless-escape* update no-irregular-whitespace* fix node 4 problem	True	
sponsors: sync readme with website	True	
fix: add end location to report in no-prototype-builtins (refs #12334) (#13087)	True	
docs: fix category descriptions for site generation (fixes #12894) (#12930)	True	
updating look up algorithm for local config files* local config files must now be named `.eslintrc`* options specified in local config files will be merged with base,default eslint.json config* local config files will be looked up relative to each file beinglinted* local config files are cached by directory for performance	True	
fixes #252: semi rule errors on variabledeclarations in forinstatements	True	
docs: added no-floating-decimal docs (refs #562)	False	
chore: fix output assertion typos in rule tests (#8129)several rule test files have typos preventing output from being asserted properly. this commit fixes the typos.these typos were discovered with the [`consistent-output`](https://github.com/not-an-aardvark/eslint-plugin-eslint-plugin/blob/090091e0d36b2a739dbee736ccf732ea2c9f10ab/docs/rules/consistent-output.md) rule.	False	
fix: recognise multiline comments as multiline arrays (fixes #9211) (#9369)	False	
chore: enable `typeof` check for `no-undef` rule in eslint-config-eslint (#7103)	True	
1.7.3	False	
sponsors: sync readme with website	True	
docs: specify language for all code fences, enable corresponding markdownlint rule.	True	
build: changelog update for 5.4.0	True	
docs: io.js is the new node.jsafter the merger of io.js and node.js, the framework is now called as node.js.	False	
fix: avoid `camelcase` false positive with newexpressions (fixes #7363) (#7409)	False	
docs: array-bracket-spacing examples used space-in-brackets	False	
chore: enable a modified version of multiline-comment-style on codebase (#9452)this makes the following changes:* creates a project-specific `multiline-comment-style` rule,which is the same as the built-in `multiline-comment-style` ruleexcept that it ignores the banner comments that we use at the top offiles.* enables the `multiline-comment-style` rule on the eslintcodebase	True	
update: backslashes in path (fixes #1818)executing a command like "eslint --format c:\path\to\formatter.jstest.js" on windows failed, because eslint only looked for forwardslashes in the path. with this fix, backslashes are replaced by slashes.	True	
fix: handle number literals correctly in `no-whitespace-before-property` (#7185)	True	
fix: no-trailing-spaces now handles skipblanklines (fixes #2575)	False	
fix: tests failing due to differences in temporary paths (fixes #4324)	True	
update: space-in-brackets to allow exceptions (fixes #1142)	True	
update: `new-parens` false negative (fixes #6997) (#6999)	False	
fix: func-call-spacing "never" reports wrong message (fixes #13190) (#13193)	False	
docs: fix typo (#10223)	False	
docs: clarify rule example in readme since we allow string error levels (#6061)	True	
build: check commit message format at end of tests (fixes #3058)	True	
3.15.0	False	
chore: remove incorrect comment (#11769)	False	
new: multiline-comment-style rule (fixes #8320) (#9389)* new: multiline-comment-style rule (fixes #8320)this code is currently messy and incomplete. there are also some edge cases that the rule's design needs to address (e.g. allowing "banner" comments which are created from several consecutive line comments).* chore: add multiline-comment-style in eslint:recommended.* finished :(* fix: review suggestionssquashed commits:[914bea1] fix: fixer would cause invalid syntax.[a4dd76c] fix: isjsdoc checking each line starts with "*".[e16985a] prefer fixer.replacetext()..* update multiline-comment-style.md	True	
4.8.0	False	
update documentation for no-unused-vars	True	
docs: change links of templates to raw data (#7288)	True	
fix: `--print-config` return config inside subdir (fixes #6329) (#6385)	False	
chore: remove currentscopes property from linter instances (refs #9161) (#9187)the `currentscopes` property is undocumented, and is redundant with the `scopemanager` property. this commit removes it.	False	
update: search parent directories for .eslintignore (fixes #933)	True	
chore: small refactor config-validator (#10565)	True	
rule: valid-typeoffor a vast majority of use-cases, the only valid results of the `typeof` operator will be one of the following: `"undefined"`, `"object"`, `"boolean"`, `"number"`, `"string"`, and `"function"`. when a user compares the result of a `typeof` operation against a string that is not one of these strings, it is usually a typo. this rule ensures that when the result of a `typeof` operation is compared against a string, that string is in the aforementioned set.typeof foo === "strnig"fixes #715	True	
fix: `object-curly-spacing` had been crashing on an empty object pattern (fixes #3658)	False	
4.6.0	False	
added documentation for the `new-parens` rule	True	
update: no-void add an option to allow void as a statement (#12613)* update: no-void add an option to allow void as a statement* test: add extra options test	True	
docs: update indent.mdcorrected that the example enables case indentation, not verification.  it is verified even without the switchcase option.	False	
update: make `eslint:all` excluding deprecated rules (fixes #6734) (#6756)	False	
docs: add non-attending tsc member info (#11411)	False	
build: exclude readme/index from rules resources generation (fixes #1072)	True	
feat: report only lines that exceed the limit in max-lines-per-function (#15140)* update: reports exceeded lines (fixes #15098)* update lib/rules/max-lines-per-function.jsco-authored-by: nitin kumar <snitin315@gmail.com>* update: added loc property to context.report()* update lib/rules/max-lines-per-function.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update: loc property improved* higlights only the exceeded lines* highlight only exceeded line with skipsomelines too* skipcomments working fine* update lib/rules/max-lines-per-function.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update lib/rules/max-lines-per-function.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update lib/rules/max-lines-per-function.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update lib/rules/max-lines-per-function.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update lib/rules/max-lines-per-function.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: nitin kumar <snitin315@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
chore: remove undocumented defaults() method (refs #9161) (#9237)	False	
docs: add alberto as reviewer	True	
docs: sort-imports add single named import example (#15675)added examples of a single named import. clarifying that it should be grouped with the default/single imports and not with the named/multiple imports.i find the current behavior confusing and so do others #14259 #14570 #14735 #13655 #13222 #11159 #10878.	True	
update: better error message for plugins (refs #5221)	True	
1.2.1	False	
upgrade: eslint-scope@^5.0.0 (#12011)	False	
rule: no-loop-func	False	
fix: object curly spacing incorrectly warning for import with default and multiple named specifiers (fixes #3370)	True	
fix: `ignorerestsiblings` option didn't cover arguments (fixes #8119) (#8120)	False	
docs: improve id-match usage advice (#9544)	False	
fixes #482: brace-style bug with multiline conditions	False	
update: add configurability to generator-star-spacing (#8985)	True	
build: package.json and changelog update for 3.5.0	True	
chore: increase camelcase test coverage (#11299)	False	
build: changelog update for 8.9.0	True	
7.15.0	False	
update: depcrecate isspacebetweentokens() (#12519)	True	
update: func-names `as-needed` false negative with assignmentpattern (#12932)	False	
new: add rule for padded blocks (fixes #1278)	True	
update: check class fields in no-extra-parens (refs #14857) (#14906)	False	
fix: `no-undef` false positive at new.target (fixes #5420)	False	
rule: no-catch-shadowthe `no-catch-shadow` rule disallows a catch clause parameter with the same name as a variable in the outer scope. ie 8 and earlier will leak the catch clause parameter into the outer scope and overwrite the outer scope variable value.var err = "x";try {throw "problem";} catch (err) {}console.log(err)    // err is 'problem', not 'x'this rule matches jshint rule w002.	True	
chore: add equaltokens in ast-utils. (#9500)	True	
fix: `indent` on variable declaration with separate array (fixes #5237)indent was behaving incorrectly when there's an array on a separate deepinside a variable declaration with an expression node wrapping it as theparent.	False	
fix: ensure messages are sorted by line (fixes #1343)	True	
added acceptance criteria for rules to docs	True	
docs: add valid example that shows vars in a block scope (#14230)* docs: add valid example that shows vars in a block scopeall the current valid examples show hoisting the var to the function scope. this example makes is clear that this rule allows you to declare vars inside a block scope, just not use them out of that scope.* docs: add corresponding invalid example to block-scoped-var	True	
increased test coverage for `lib/cli.js`.created a test case that increased the test coverage of the cli.	True	
chore: improve performance of `:function` selector (#15181)	True	
docs: remove incorrect info about issue requirements from pr guide (#7691)(refs https://github.com/eslint/eslint/issues/7589#issuecomment-260212518)	False	
adding ability to separate rules with comma	True	
fix: `no-invalid-this` had been missing jsdoc comment (fixes #3287)	False	
add problem count to compact formatter	True	
converting to a switch statement and declaring variables.	True	
update: add `props` option to `no-self-assign` rule (fixes #6718) (#6721)* chore: add `getstaticpropertyname` to ast-utils* update: add `props` option to `no-self-assign` rule (fixes #6718)* chore: use `astutils.getstaticproperty` for some places.	True	
updated contribution guidelines	False	
update: improve null detection in eqeqeq for es6 regexes (fixes #8020) (#8042)* update: improve null detection in eqeqeq for es6 regexes (fixes #8020)* also update astutils.isnullorundefined* check node.regex instead of node.raw	True	
breaking: fix plugin resolver in extends (fixes #9904) (#10236)* breaking: fix plugin resolver in extends (fixes #9904)* fix for nested overridenativeresolve()	True	
docs: fix broken link for stylish formatter (#7386)	True	
new: add callback-return rule (fixes #994)	False	
chore: remove leche (fixes #13287) (#13533)* remove leche* fix cli engine tests* remove fs from config file tests, use simple mock with write file sync for tests* fix stubs for fs write file in eslint spec* remove leche from package	True	
fix: deprecation warning in ruletester using node v11 (#11009)	False	
increase test coverage for strict-related rules (refs #361)	True	
sponsors: sync readme with website	True	
docs: update complexity.md (#10867)	False	
update: add uninitialized and initialized options (fixes #2206)	False	
build: changelog update for 6.7.0	True	
fix: missing undeclared variables in jsx (fixes #1676)	False	
chore: remove `npm run check-commit` script (#9513)* chore: remove `npm run check-commit` scriptthe check-commit npm script seems useful in theory, but it doesn't accurately reflect the current commit conventions. for example, it still instructs users to squash their commits, when we no longer advise this. additionally, the commit message on a branch is sometimes irrelevant to the commit message that gets created when a pr is merged (only the pr title matters when a branch has more than two commits).* remove unused variables	True	
build: changelog update for 4.8.0	True	
update: add requireparamtype option to valid-jsdoc (fixes #6753) (#10220)	True	
chore: fix typo (#13660)	False	
build: package.json and changelog update for 3.10.0	True	
fix: `no-unreachable` with the code path (refs #3530, fixes #3939)	False	
1.3.0	False	
docs: no-lone-blocks - show non-problematic (and problematic) label	False	
update: no-warning-comments matches on whole word only (fixes #1709)	False	
build: package.json and changelog update for 3.13.1	True	
fix: manage severity of 1 with tap reporter (fixes #11110) (#11221)when using tap reporter, both messages with severity of 1 or 2 were listed as errors (`not ok`). this changes aims at reporting warnings as `ok` messages.	False	
docs: fix broken markdown on configuration page	False	
update: allow custom messages in no-restricted-syntax (fixes #8298) (#8357)* update: add new schema to no-restricted-syntax (fixes #8298)* address review suggestions	True	
update: add fixer for `prefer-template` (fixes #6978) (#7165)	True	
chore: use local function to append "s" instead of a package (#11293)this matches the way other formatters handle pluralization, whichseems simple enough to not require an additional package.	True	
update: support more options in prefer-destructuring (#8796)* update: support more options in prefer-destructuring (fixes #7886)* fix up* add comment to doc	True	
docs: lintmessage.line and column are possibly undefined (#15032)in `lib/linter/linter.js`, the `parse()` function's exception handlertranslates the exception's message to a `lintmessage`. it also passesthrough the exception's `linenumber` and `column`, but the exception isnot guaranteed to have those properties. in that case,`lintmessage.line` and `column` can be `undefined`.in eslint/eslint-plugin-markdown#191, the processor would crash whenattempting to map messages without a line.normally widening a type like this would be a breaking change, but sincethis is only updating the docs to reflect reality, i think this can be asemver-patch change.	True	
breaking: remove special exception for linting empty files (fixes #9534) (#10013)	True	
update: add new ignore pattern options to no-unused-vars (fixes #2321)	True	
fix: getnamelocationinglobaldirectivecomment end location (refs #12334) (#13086)	False	
update: fast-path for empty input (fixes #546)	True	
fix: speed up getscope() (refs #1212)instead of reverse()ing, iterates parents backwards.indexes scopes for direct random lookup rather than linear search.	True	
docs: updating migration guide for single-line disable (#9385)	True	
7.1.0	False	
new: add space-unary-ops rules (#1346)	False	
chore: fix failing cli test (#15041)	False	
docs: add some missing rule docs (refs #562)	True	
build: add linting of markdown files to "npm test" script (fixes #2182)lint all markdown files in the project.suppress rules that may be controversial or deliberately violated.	True	
fix: ensure getjsdoccomment() works for all function declarations (fixes #638)	True	
update: no-empty to check trystatement.handler (fixes #1930)	True	
upgrade: espree@6.2.1 (#13026)	False	
revert "chore: rewrite parselistconfig for a small perf gain." (#9325)* revert "4.7.0"this reverts commit 439e8e697f761bebeb3dab085ba85139829397b2.* revert "build: changelog update for 4.7.0"this reverts commit 2ec62f97b4ce0de077c39f98b59d0e9c2fbe1713.* revert "upgrade: espree v3.5.1 (fixes #9153) (#9314)"this reverts commit 787b78bb61944ef6cc0e653f9c1fe10213c6fdc8.* revert "update: run rules after `node.parent` is already set (fixes #9122) (#9283)"this reverts commit 1488b511f3be3220d6f187f48c8b22075c6bbd30.* revert "docs: fix wrong config in max-len example. (#9309)"this reverts commit 4431d689d255ef345b1625acc6b836868911f51f.* revert "chore: revert "avoid handling rules instances in config-validator" (#9295)"this reverts commit 9d1df92628dd4dd1e70fbb19454008e146387435.* revert "docs: fix code snippet to refer to the correct option (#9313)"this reverts commit 7d24ddec18063c2150bedac7aa1d4ff41dc7bec4.* revert "chore: rewrite parselistconfig for a small perf gain. (#9300)"this reverts commit 12388d449f8d86358c22a2e39c9fe98bd3715823.	True	
chore: fix lint failure in jsdoc comment (#12489)we merged a pr that had been waiting for a while, and we had added alint rule since it had been opened that caused the build to fail oncemerged to master.	True	
docs: remove for deleted npm run profile script (#13931)the script was deleted in https://github.com/eslint/eslint/pull/11854after it stopped working when we moved from browserify to webpack. thiscommit removes the leftover docs and two of the three benchmark files.`large.js` is used by a test case ensuring we can read > 4k data fromstdin. if we eventually add in a new profile command, we'll likely wantnew examples anyway that contain more modern js rather than just the es5examples we had before.	True	
7.8.0	False	
upgrade: bump lodash to fix security issue (#13993)this commit updates lodash to remove a security vulnerability related to prototype pollution, see: https://snyk.io/vuln/snyk-js-lodash-590103	True	
update: the rule spaced-line-comment now also allows tabs and not only spaces as whitespace. (fixes #1713)	True	
fix: invalid syntax from prefer-arrow-callback autofixer (fixes #8541) (#8555)previously, the `prefer-arrow-callback` autofixer would simply replace a function expression with an arrow function. however, arrow functions have a different precedence than regular functions, so this was sometimes creating invalid syntax. this commit updates the fixer to parenthesize the arrow functions if necessary to avoid a syntax error.	True	
fix: dot-notation autofix produces invalid syntax for integer properties (#8332)previously, when fixing a computed property access from a number literal, the dot-notation autofixer would place a dot immediately after the number literal. however, a dot after a decimal integer literal gets parsed as a decimal point, not a property accessor. this commit updates the fixer to insert a space before the dot when the object is a decimal integer literal.	True	
fix: handle personal package.json without config (fixes #5496)	True	
fixes #431: no-unused-expressions should not flag statement level void	False	
docs: reference no-unexpected-multiline in semi (fixes #4114)	False	
upgrade: beefy to ^2.0.0, fixes installation errors (fixes #4760)	True	
chore: update deprecated rules in conf/eslint.json (#7467)	True	
chore: use eslintrc overrides(dogfooding) (#10566)* chore: use eslintrc overrides(dogfooding)* chore: rm unnecessary /*global xx*/	False	
upgrade: globals@8.0.0 (fixes #2759)this adds support for the globals escape and unescape, which werepreviously unrecognized but are present in all browsers and node.	True	
new: max-statements-per-line (fixes #5424)	False	
fix: allow bind call with a single spread element in no-extra-bind (#12088)	False	
fix: max-len to report correct column number (fixes #2926)	True	
chore: suggest demo link in bug report template (#15557)refs #15552	False	
fix: circularjson dependency warning (fixes #11052) (#11314)	True	
docs: mention bundling multiple shareable configs	False	
docs: remove inconsistent colon in pull request docs (#15303)	False	
build: package.json and changelog update for 3.11.1	True	
fix: indent false positive with multi-line await expression (#8837)	False	
1.10.2	False	
put all rules into strict mode and update docs accordingly	True	
chore: convert non-lib/test files to template literals (refs #6407) (#7329)	True	
sponsors: sync readme with website	True	
rule: no-new-array and no-new-objectthese rules suggest the literal notations of array ([]) and object({})	False	
chore: add a fuzzer to detect bugs in core rules (#8422)* chore: add a fuzzer to detect bugs in core rulesthis commit adds a fuzzer to detect bugs in core rules. the fuzzer can detect two types of problems: crashes (where a rule throws an error given a certain syntax) and autofix errors (where an autofix results in a syntax error).the fuzzer works by running eslint on randomly-generated code with a random config. the code is generated with [eslump](https://github.com/lydell/eslump), and the config is generated with the existing autoconfig logic.the fuzzer can be run with `npm run fuzz`. eventually, i think we should add the fuzzer to the normal `npm test` build.* pin eslump version* update linter logic with new apis from eslint 4* upgrade eslump to 1.6.0	True	
fix: semi rule incorrectly flagging extra semicolon (fixes #840)	False	
docs: clarify default ignoring of node_modules (#10092)when using eslint from the root of a mono repo `node_modules` needs tobe explicitly added to `.eslintignore` for eslint to ignore for example`packages/*/node_modules`. clarified this in the configuringdocumentation.	True	
build: changelog update for 6.7.1	True	
upgrade: upgrade lodash dependency (fixes #11992) (#11994)issue in lodash filed at lodash/lodash#4348	False	
fix: no-multiple-empty-lines crash on space after last \n (fixes #8401) (#8402)* fix: no-multiple-empty-lines crash on space after last \n (fixes #8401)previously, no-multiple-empty-lines would crash if it tried to remove a trailing newline followed by a space from the end of a file. this commit fixes the crash.* fix code duplication	True	
docs: add missing documentation for scoped modules in sharable config developer-guide (#8610)* docs: add missing docs for scoped modulesadded missing documentation for npm scoped modules in sharable configuration developer-guide (refs #3136) (#4800)* docs: update docs to add disclaimers about resolution errorsupdate the documentation to add additional information of cases where conflicts could happen between scoped modules* docs: fix typo in shareable-config developer-guide	True	
new: make mergeconfigs() merge plugin entries (fixes #1111)	False	
8.13.0	False	
fix: `valid-jsdoc` false positive at default parameters (fixes #6097) (#6170)	False	
docs: fix a minor typo in a prefer-const example	False	
0.16.2	False	
docs: update url in no-wrap-func.md to resolve 404	True	
update: factor ignores out of config (fixes #958)	True	
update: config-validator should validate overrides (#10357)	True	
fix: no-debugger autofixer produced invalid syntax (#8806)this updates the `no-debugger` autofixer to not remove `debugger` statements that are in a position where a statement is required (e.g. the direct descendent of an `if` statement).	True	
build: changelog update for 6.3.0	True	
sponsors: sync readme with website	True	
fix: make separaterequires work in consecutive mode (fixes #10784) (#10886)	False	
fix: unused recursive function expressions (fixes #10982) (#11032)	False	
chore: update incorrect tests to fix build failing (#11354)codes like export {foo} could pass using earlier acorn, but acorn@6.0.7 fixes it.	True	
added link to no-global-strict doc in readme	True	
converting formatter tests and core	True	
fix: ignore return statements in dead code (fixes #11647) (#11688)	False	
fix: `indent` param function fix (fixes #4165, fixes #4164)	False	
update: fix operator-linebreak overrides schema (#13199)	True	
update: use `globals` module for the `commonjs` globals (fixes #3606)	True	
chore: use default chromium binary in m1 mac tests (#15371)on m1 macs, we're able to use the chromium binary that puppeteerdownloads as part of its install step.	True	
chore: use github actions (#12144)* chore: use github actions* fix syntax error* fix syntax error* fix fuzz test* change triggers* remove badge* add badge* re-add azure pipelines files and badge	False	
fix: location of extra paren message (fixes #1814)	False	
feat: suggestions support for `prefer-regex-literals` (#15077)* new: autofix support to prefer-regex-literalsfixes #15029* use cantokensbeadjacent* fix for null* switch to validatepattern and validateflags* fix for unicode* apply a few suggestions from code review* fix: double escaping?* tests and fixes for no-unicode regexp* new: drop usage of getstaticvalue* fix: remove whitespace changes, fix jsdoc type, and convert to suggestion for unexpectedregexp* new: more test cases for .* remove meta.docs.suggestionco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* fix linting* don't fix null* remove redundant wrapping suggestions for now* string.raw can have problematic chars* remove fixable* fix messed up char increase* apply suggestion from code reviewco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* chore: use characternode.raw instead of characternode.value* chore: do a bit of simplification of oncharacterenter* apply suggestions from code reviewco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* chore: more changes following code review* chore: use reliable way of testing if spacing neededco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* diff msg for suggestion than main warning* chore: stricter testing* apply suggestions from code reviewco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
update: add capisconstructor option to no-invalid-this (fixes #12271) (#12308)* update: add capisconstructor option to no-invalid-this (fixes #12271)* update isdefaultthisbinding description* remove newline in docs	True	
docs: add 4.0.0 migration guide (fixes #8306) (#8313)* docs: add 4.0.0 migration guide (fixes #8306)* fix typos* remove unneeded "summary" header* add eslint:recommended section* remove section about missing file errors* add note about `global` property in linter.verify() api* add section about shebang comments* use consistent wording in section headers* note that config validation is still a work in progress	False	
fix: check shareable config package prefix correctly (fixes #3146)	False	
fix: don't check object destructing in integer property (fixes #8654) (#8657)	False	
fix: ensure template string references count (fixes #1542)	False	
docs: fix example in no-restricted-modules docs (#11454)this rule doesn't allow passing an array of paths like this.	False	
docs: fix link to rule no-useless-rename (#11165)	True	
docs: add note for arrow functions in no-seq rule (#14578)	True	
update: improve reported location of arrow-parens (fixes #11773) (#11775)	False	
fix: `no-unmodified-loop-condition` false positive (fixes #5445)previously, this rule has been checking whether every binaryexpressionwas modified or not. but this way has been reporting wrong warnings inchaining binary expression (e.g. `foo + bar < 1`).now, this rule came to check whether the top of binaryexpressions wasmodified or not.	True	
0.1.3	False	
docs: update readme team and sponsors	True	
docs: fix typo for no-unsafe-finally (#10945)	True	
update: make `no-restricted-properties` more flexible (fixes #7137) (#7139)	False	
build: changelog update for 8.0.0-beta.1	True	
added consistent-this rule	False	
fix: ignore space before function in array start (fixes #4569)	True	
chore: remove eslint comment from no-octal-escape tests (#13846)	False	
fix: id-blacklist false positives on renamed imports (#12831)	False	
upgrade: levn@0.4.1 (fixes #9366) (#13140)* upgrade: levn@0.4.1 (fixes #9366)* use string.raw to improve readability of tests* address feedback* update optionator@0.9.1	True	
update: check indentation of multi-line chained properties (refs #1801) (#5940)the end user can choose whether and how much to indent.	True	
build: changelog update for 6.2.0	True	
fix: don't break node offsets if hasbang present (fixes #1078)	False	
docs: add intellij plugin to integrations	True	
docs: fix the examples for space-before-function-paren.i was confused about whether es6-style functions were considered namedor anonymous.i also fixed a typo that had gotten in there.	True	
2.6.0	False	
update: space-infix-ops reports violating operator (#10934)	True	
docs: `avoid-escape` does not allow backticks (fixes #5147)	False	
docs: mention eslint-tester in migration guide	False	
5.1.0	False	
3.12.1	False	
chore: fix typo in large.js (#14589)wether -> whether	False	
implement rule to flag use of alert (fixes #10)	True	
feat: support arbitrary module namespace names in no-useless-rename (#15493)* feat: support arbitrary module namespace names in no-useless-renamerefs #15465* remove extra blank line	False	
fix: new-cap should allow defining exceptions (fixes #1424)when exceptions are provided the defaults shouldn't be dropped.	False	
update: add exceptionpatterns to id-length rule (fixes #13094) (#13576)* add #13099 to continue* delete unnecessary 'parseroptions'* add invalid test with an identifier that doesn't match configured pattern* add valid test with multiple exception patterns* add a function that extracted 'return' below* docs: add "exceptionpatterns" to "id-length" rule* add a function that extracted 'return' belowdocs: add "exceptionpatterns" to "id-length" rule* update : modify wrong example* update: all regexp instance create in "create(context)"* update: more simpler by refactoring some codes* update docs/rules/id-length.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update: modify the function name* update: add a valid test with multiple patterns where the first doesn't match.co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
fix: adding options unit tests for --ignore-pattern (refs #4507)	True	
fix: handle fixing objects containing comments (fixes #8484) (#8944)references rule object-curly-newline. avoid fixing line breaks when thetoken after opening brace is a comment or token before closing brace isa comment.	True	
sponsors: sync readme with website	True	
update package.json details	True	
docs: fixes object type for `rules` in "use a plugin" (#12409)	True	
update: add webextensions environment (fixes #4051)	False	
fix: multiline-comment-style fix produces invalid code (fixes #9461). (#9463)* fix: multiline-comment-style fix produces invalid code (fixes #9461).* report error, not autofix.	True	
update: add `keywords` flag to `consistent-as-needed` mode in `quote-props` (fixes #3532)	True	
update: improve error message for rule-tester (fixes #5369)	True	
fix: speed up no-unreachable (fixes #1135)	False	
6.8.0	False	
upgrade: globals to v12.1.0 (#12296)	True	
docs: state that functions option only applies in es2017 (fixes #7809) (#8468)add documentation for the comma-dangle rule that states that requiringtrailing commas in parameter lists may cause errors in pre-es2017 code.	True	
fix: `sort-imports` crash (fixes #5130)	True	
update: fix indentation of emptystatements (fixes #8882) (#8885)the `indent` rule contains some logic to ensure that semicolons at the start of a line are indented correctly when using semicolon-free style. for example, in the following code the semicolon on the second line is not indented, even though it's part of the `bar()` statement.```jsif (foo) bar(); [1, 2, 3].map(foo)```due to a bug, this logic also applied to semicolons in `emptystatement` nodes, resulting in an incorrect indentation for those semicolons. this commit fixes that bug.	True	
fix: cleanup package.json	True	
docs: autogenerated changelog for v2.0.0	True	
update: add `allow` option for `no-underscore-dangle` rule (fixes #2135)	True	
docs: remove list of users from readme (fixes #3881)	False	
5.8.0	False	
chore: remove unused method from filefinder (fixes #6344) (#6345)	False	
docs: fix examples for no-useless-escape (#9853)	True	
fix correct config merge for array values (fixes #819)	True	
docs: document linebreak-style as fixable.	False	
fix: adds clamping to getsource beforecount (fixes #1427)- without the clamping in place, there is the possibility of passingnegative values to string.slice and winding up with odd results.	True	
build: increment eslint-config-eslint	False	
sponsors: sync readme with website	True	
fix: estraverse/escope to work with unknowns (fixes #5476)	True	
fix: invalid operator in operator-assignment messages (#15759)	True	
rule: no unused variables	False	
update: report assignment expression location in no-cond-assign (#12465)* update: report assignment expression location in no-cond-assign* report assignmentexpression as the node	False	
new: add no-useless-constructor rule (fixes #4785)	True	
revert "update: ecmaversion defaults to 5, and allows "latest" (#14622)" (#14711)this reverts commit 831f6b30270a37800e61e6c668bfa71a39064d2e.	True	
fix: combine all answers for processanswers (fixes #5220)	True	
chore: update copyright and license info (#9599)	False	
fix: reuse the ast of source code object in verify (#9256)	True	
fix: do not report global references in `id-match` rule (#15420)* fix: do not report global built-in references in `id-match` rulefixes #15395* test: add more cases* refactor: code* fix: do not report global references* fix: use the global scope* refactor: move scope call to `program`	True	
fix: key-spacing crash on computed properties (fixes #2120)	False	
fixes #500: no-array-constructor should not flag 1-argument construction	True	
1.7.1	False	
update: use 'readonly' and 'writable' for globals (fixes #11359) (#11384)	True	
update: fix indent errors on multiline destructure (fixes #8729) (#8756)	False	
chore: rm unused dep string.prototype.matchall (#10756)	True	
breaking: remove warnings of readonly from `no-undef` (fixes #4504)	False	
fix: space-before-function-paren autofix removes comments (fixes #12259) (#12264)	True	
new: add no-restricted-exports rule (fixes #10428) (#12546)* new: add no-restricted-exports rule (fixes #10428)* remove `fixable` from meta* change configuration	False	
doc: correct the spelling of alberto's surname	True	
fix: detect for...in in no-loop-func (fixes #1573)	True	
add cli option to output version	True	
fix: `curly` with `multi` had false positive (fixes #3856)	False	
added documentation for the `max-params` rule	True	
docs: reporting level 2 is an error (fixes #843)	False	
renaming new-parens rule	False	
fix: add end location to report in no-useless-concat (refs #12334) (#13110)	True	
ensure getscope() works properly when called from program node (fixes #148)	False	
sponsors: sync readme with website	True	
7.0.0-alpha.1	False	
new: add no-nonoctal-decimal-escape rule (fixes #13765) (#13845)* new: add no-nonoctal-decimal-escape rule (fixes #13765)* remove extra blank line* add spec link	False	
change context-var to block-scoped-var	True	
fix: correct default for indentation in `eslint --init` (fixes #5698)	True	
docs: update migration guide with latest changes (#10212)this adds a note about the changes to globals and `context._linter`.	True	
update: curly multi-or-nest flagging semis on next line (fixes #12370) (#12378)* update: curly multi-or-nest flagging semis on next line (fixes #12370)* chore: add more tests to the multi-or-nest option for curlycheck that multi-or-nest it fixes cases likeif (foo) {dosomething();}and that it ignores cases with an empty statement likeif (foo);	True	
build: pin sinon version (fixes #2742)	False	
1.4.2	False	
a bit of cleanup	False	
fix: `getnodebyrangeindex` performance issue (fixes #4989)	True	
globals are not good, declare len	False	
breaking: brace-style now disallows block statements where curlies are on the same line (fixes #758)	False	
update: enabled 'no-trailing-spaces' rule by default (fixes #1051)	False	
change quotes option to avoid-escapes and update docs (fixes #199)	True	
docs: fix typography/teriminology in indent doc (fixes #6045) (#6044)	False	
fix: correct typos in no-alert.md and lib/ast-utils.js (#7905)	False	
add options for rule 'no-unused-vars' to check all arguments in functions (fixes #728)	True	
fix: avoid double warnings for strict rule (fixes #1011)	True	
docs: update readme team and sponsors	True	
chore: add object option test cases in yield-star-spacing (#12679)	False	
docs: add missing space to `create` in `no-use-before-define` (#8166)	True	
update: add default to `max-nested-callbacks` (fixes #4297)	True	
sponsors: sync readme with website	True	
chore: upgrade mock-fs@4.5.0 (#10325)	False	
update: handle multiline parents consistently in indent (fixes #8455) (#8498)previously, the indent rule was inconsistent about handling cases where a multiline node had a child that followed it on the same line. this commit fixes the rule to handle these cases consistently.for example, the rule considers the following code to be valid:```js// case 1foo.bar({ok: true}).baz({ok: true});// case 2it(['foo''bar'], function() {baz();})```however, it previously considered the following cases to be invalid (it expected another two indentation levels for the last two lines):```js// case 1if (foo) baz({ok: true});// case 2['foo','bar'].foreach(function() {baz();});```in both cases, the node on line 3 starts on the same line as its parent ends on. however, the rule treated them differently because it had a special case for `memberexpression` nodes. as a result of this change, all four code samples are valid.```	True	
upgrade: espree v3.4.0 (#8019)	False	
docs: fix grammar issue in rule-changes page (#6761)	False	
docs: add docs for no-fallthrough rule	True	
docs: fix misleading no-prototype-builtins description (#10666)	True	
chore: refactor --no-ignore flag logic (#10146)	True	
fix: no-duplicate-case false positives on object.prototype keys (#12107)	True	
sponsors: sync readme with website	True	
fix: `prefer-const` false positive at non-blocked if (fixes #5610)	False	
chore: don't require an issue reference in check-commit npm script (#7104)	False	
docs: fix a broken link (#14790)	False	
chore: apply comment require-description and check classdeclaration (#14949)* chore: apply comment require-description and check classdeclaration's* update makefile.jsco-authored-by: bryan mishkin <698306+bmish@users.noreply.github.com>* fix: avoid eslintrc for tests to avoid requiring comment descriptionco-authored-by: bryan mishkin <698306+bmish@users.noreply.github.com>	True	
fix: restrict dot-notation keywords to actual es3 keywords (fixes #2075)	True	
sponsors: sync readme with website	True	
build: changelog update for 7.0.0	True	
upgrade: upgrade various dependencies (fixes #4303)	False	
add global cli flag (ref #692)adds a --global cli flag to define global variables. to definemultiple variables, either separate them using commas, or use theflag multiple times. by default, all variables are read-only, butappending `:true` to the name will mark it as writable.example:eslint --global require,exports:true file.jseslint --global require --global exports:true file.js	True	
update: fix no-restricted-imports export * false negative (fixes #12737) (#12798)	False	
breaking: update eslint:recommended for 4.0.0 (fixes #8236) (#8372)this adds no-useless-escape, no-compare-neg-zero, and array-callback-return to eslint:recommended.	True	
docs: update comment to align with source code it's referencing	True	
docs: add semantic versioning policy (fixes #6244) (#6343)	False	
chore: extract lint result cache logic (refs #9948) (#10562)* chore: extract current cache logic into lint-result-cache module* chore: moved config hash validation to lintresultcache* chore: added tests for lint-result-cache* chore: small cleanup* chore: removing unnecessary comments* chore: remove unnecessary test fixture file* chore: options.cache to this.options.cache	True	
update: fix binaryexpression indentation edge case (fixes #8914) (#8930)this fixes an issue where the indentation of the right-hand side of a `binaryexpression` did not depend on the indentation of the operator. this could result in a situation where the rule would verify the absolute indentation of a node within the binaryexpression, rather than the relative indentation from the operator.	True	
docs: clarify node_modules is ignored by default (fixes #13006) (#13054)	False	
fix: add rule ensuring #1258 is fixed by recent rewrite (fixes #1258)	False	
chore: remove workaround for espree and escope bugs (fixes #5852)	True	
keep test filename inline with rule name`dot-notation` is `dot-notation` in `eslint.json` and the rule is at `lib/rules/dot-notation.js`. this change just keeps the rule test named the same as the rule it represents.	True	
fixes #145: create a browser bundle	False	
fix: avoid exponential require-atomic-updates traversal (fixes #10893) (#10894)previously, the `require-atomic-updates` rule would traverse over every path in the control flow graph, resulting in a runtime that was exponential in the number of edges in the graph. this commit updates the rule to use a lattice-based [dataflow analysis](https://en.wikipedia.org/wiki/data-flow_analysis) algorithm, similar to the algorithms used by optimizing compilers.	True	
fix: support enotdir error code in the folder existence checking utility (#13973)* fix: consider enotdir error code on some platformsgitlab ci throws enotdir instead of enoent. add checking for this condition.* chore: add tests with virtual files for eslint#calculateconfigforfile	True	
chore: refactor space-before-function-paren rule (#8284)this commit refactors the space-before-function-paren rule to avoid using different variables for each option. this should make the options easier to change in the future. it also updates the rule listeners to use selectors.	True	
build: changelog update for 7.8.0	True	
feat: update padding-line-between-statements for class static blocks (#15318)updates the `padding-line-between-statements` rule to apply to the top level of class static blocks.refs #15016	True	
upgrade: eslint-plugin-eslint-plugin@0.8.0 (#9012)	False	
update: `destructuring` option of `prefer-const` rule (fixes #5594)	False	
converting more tests to mocha	True	
docs: grammatical error (#13687)	False	
docs: add new es environments to configuring eslint (#12289)	True	
chore: fix formatter documentation generation (#11767)	True	
added documentation for the `no-alert` rule	True	
lint tests on build (fixes #764)	False	
docs: replace all node references to node.js which is the official name	True	
fix: space-after-keywords checks while of dowhilestatement (fixes #1120)	False	
chore: replace deprecated calls to context - batch 1 (refs #6029) (#6034)	True	
version 0.0.9 release	False	
build: use karma-chrome-launcher to run tests (#10898)removed phantomjs dependency from package.json andkarma.conf.js.signed-off-by: ossdev07 <ossdev@puresoftware.com>	True	
fix: semicolon-less style in lines-between-class-members (refs #14857) (#15045)	False	
disabling/enabling rules through comments	False	
added a textmate 2 integration to the docs	True	
adding homepage and bugs links to package.jsonnote, this still throws warnings on http://package-json-validator.com/ saying that "latest" isnt semver-ey:```json{"valid": false,"errors": ["invalid version range for dependency eslint-tester: latest"],"warnings": ["missing recommended field: contributors"],"recommendations": ["missing optional field: engines"]}```	True	
update: option for object literals in `arrow-body-style` (fixes #5936) (#6216)	True	
update: add "allowcall" option (fixes #4011)add new option ???allowcall??? to support nested invocation.	True	
fix: columns of parse errors are off by 1 (fixes #4896)	False	
docs: improve custom formatter docs (#11258)* docs: improve custom formatter docs* fix lint errors and add comment	True	
docs: add @vitorbal and @platinumazure to development team	True	
docs: list another related rule in no-undefined (#8467)* docs: add related rules, context to no-undefined* docs: tweak phrasing of background info for no-undefined rule	True	
docs: use string severity in example (#6601)	False	
update: add `allowparens` option to `no-confusing-arrow` (fixes #5332)	True	
docs: update capitalized-comments with missing letters (fixes #10135) (#10134)	False	
update: add "consistent" option to array-element-newline (fixes #9457) (#10355)	True	
docs: add note about shell vs node glob parameters in cli	False	
update: add "ignore" override for operator-linebreak (fixes #4294)to support "ignore" in overrides for specific operator/s.	True	
fix: fixes no-unused-vars to check /*globals*/ (fixes #955)	True	
docs: distinguish examples in rules under best practices part 3	False	
6.2.1	False	
added description of -v option	False	
docs: mention the `globals` key in the no-undef docs (#9867)* mention the `globals` key* docs: mention specifying globals* docs: mention the globals key in the no-undef rule details section	False	
3.10.1	False	
docs: spell checking and one extra closing curly in code example	False	
docs: add .md to link(for github users) (#9529)	True	
docs: correct option name in `no-implicit-coercion` rule	False	
docs: fix changelog versions (#13410)	False	
created no-label-var rule.the no-label-var rule disallows creating a label that shares an identifier with a variable.see: http://jslinterrors.com/a-is-a-statement-label/fixes #29	False	
fix: add severity flag for ignored file warning (fixes #1401)	True	
chore: revert "avoid handling rules instances in config-validator" (#9295)this reverts commit 7c95d5d0a44b7f4f7f885621deb7007a7faa3a4b to avoid the performance impact of iterating through all ~200 core rules every time linter#verify is called.	True	
sponsors: sync readme with website	True	
#595 improved func-names documentation	False	
build: remove `eslint-tester` from devdependencies (fixes #3189)	False	
fix: new-cap error that throws on non-string member (fixes #1056)	False	
fix: one-var rule doesn???t have default options (fixes #3449)	False	
chore: report unused eslint-disable directives in eslint codebase (#9371)	False	
new: implement cache in order to only operate on changed files since previous run. (fixes #2998)	True	
docs: use correct encoding for id-match.md (fixes #3246)	True	
fix: remove duplicate error message on crash (fixes #8964) (#10865)	False	
fix: crash with esquery when using jsx (fixes #13639) (#14072)* fix: crash with esquery when using jsx (fixes #13639)* chore: add and change test cases related to esquery options* chore: add test cases related to esquery options	True	
feat: false negative with `onlydeclarations` + `properties` in id-match (#15431)* fix: false negative with `onlydeclarations` in `id-match`fixes #15123* test: add more cases* fix: false positive with computed properties* refactor: code* test: remove invalid test case	True	
increased test coverage for max-depthadded a test case that used the default depth threshold to increase test coverage.	True	
upgrade: escope 3.1.0 (fixes #2310, #2405)- breaking: references of let/const/class are resolved now. so i fixed `no-unused-vars` rule.- fix: makes references in default parameters.- fix: makes references in default values of destructuring.	True	
8.5.0	False	
new: added no-multi-spaces rule (fixes #630)	False	
breaking: show error and warning counts in stylish summary (fixes #1746)before: `x 3 problems`after: `x 3 problems (2 errors, 1 warning)`	True	
add allow-avoiding-escaped-quotes option to quotes rule (fixes #199)	True	
allow return, falls-through comment, and throw for falls-through	True	
added documentation for the `no-new` rule	True	
build: changelog update for 7.12.0	True	
4.10.0	False	
chore: refactor parser-loading out of linter.verify (#10028)	True	
chore: refactor to use messageid in a number of rules (#12715)* chore: refactor to use messageid in a number of rules* chore: use variable for custommessage in no-restricted-global test	True	
fix: valid-jsdoc does not throw on fieldtype without value (fixes #7184) (#7187)	False	
new: add no-promise-executor-return rule (fixes #12640) (#12648)* new: add no-promise-executor-return rule (fixes #12640)* fix eslint comments in docs* change error message	True	
fix: vars-on-top conflict with es6 import (fixes #2099)	True	
fix: sourcecode#isspacebetweentokens() checks non-adjacent tokens (#12491)* fix: sourcecode#isspacebetweentokens() checks non-adjacent tokens* incorporate feedback :)* handle args in reverse order and when args overlap* extract helper function	True	
breaking: upgrade espree to 6.0.0-alpha.0 (fixes #9687) (#11610)	True	
fix: quotes rule ignores jsx literals (fixes #1477)	False	
new no-empty-character class (fixes #2508)	False	
upgrade: @eslint/eslintrc@1.0.1 (#15047)	False	
docs: remove eslint vs jshint from faq (#10108)	False	
new: support shared configs named `@scope/eslint-config`, with shortcuts of `@scope` and `@scope/` (fixes #3123)	False	
update: indent comments w/ nearby code if no blank lines (fixes #9733) (#10640)* update: indent comments w/ nearby code if no blank lines (fixes #9733)also needed to ensure that comments between element lists have desired offsets set if first element is on same line as beginning of element list* add invalid test for comment that must be in "correct alignment"* incorporated feedback from not-an-aardvark's review	True	
new: add no-async-promise-executor rule (fixes #10217) (#10661)	True	
update: no-unused-vars false negative with comma operator (fixes #14325) (#14354)* fix: report error for sequence expression in no-unused-vars (fixes #14325)* chore: add tests* update: suggestions* chore: refactor* chore: refactor* fix: logic* chore: add tests	True	
sponsors: sync readme with website	True	
add api.getancestors	True	
new: newline-before-return rule (fixes #5009)	True	
docs: update parser reference to `espree` instead of `esprima` (#6404)	True	
update: ignore case in jsdoc tags (fixes #4576)	False	
update: adds "functions" option to no-extra-parens (fixes #2477)adds a "functions" option to no-extra-parens to limit the scopeof the rule to function expressions. in this mode, it should beequivalent to no-wrap-func.it also handles a few extra corner cases: computed properties,object literals and double parenthesis around function expressions.	True	
docs: fix typo in cli help messageuse the imperative form like other descriptions.	True	
docs: no-unused-expressions - add more edge unusable and usable examplesavoid using string as example of unusable since it could be a directive depending on context	True	
fix: report better location for padded-blocks error (fixes #2224)	True	
fix: ignore destructuring assignment in `object-shorthand` (fixes #5488)	False	
docs: clarify the cliengine options (#10995)this aims to prevent some of the common pitfalls/points of confusionwhen configuring `cliengine`, such as:* it not being clear that `baseconfig` supports all of the optionsdefined in the `.eslintrc.*` schema, and so can be used for optionsthat are not supported as top-level `cliengine` arguments such as`extends` and `settings.* some of the cliengine options being named the same or almost thesame as their `.eslintrc.*` equivalents, but being a differentdata type.* it not being clear that cliengine silently ignores invalid options(which will hopefully be fixed at some point by #10272).refs:#4402#5179#6605#7247#7967#10272webpack-contrib/eslint-loader#173webpack-contrib/eslint-loader#252neutrinojs/neutrino#1181	True	
chore: typo in pull_request_template.md (#12848)	False	
update: no-unused-vars false negative about destructuring (fixes #8442) (#8459)the rule should warn the variables which are in destructuring even if those exist in non-last parameters because those can always be removed.	True	
build: make the "gensite" target work when docs_dir does not exist (fixes #1530)	False	
sponsors: sync readme with website	True	
update: set environments w/ globals (fixes #1577)	False	
docs: updated working with custom formatters (fixes #9950) (#10592)* docs: updated working with custom formatters (fixes #9950)* updating titleupdated title of last section to "outputting to a standard format for other programs to consume"	True	
chore: remove unused helper method from `indent` (#8901)	False	
fix: escape control characters in xml. (fixes #6673) (#6672)when generating xml report with control characters (like "\b" or "\n", theyare sometimes used in javascript object keys and will cause messages.),some xml parser like sax will crash.escape these characters will avoid crashing.	True	
fix: `init-declarations` ignores in for-in/of (fixes #3202)	True	
docs: add missing quotes in key-spacing rule (#8121)	False	
add color to mocha test reportingthe color highlighting in mocha test reports makes identifyingdifferences between expected and actual values easier. it also makesme happier.	True	
chore: fix bug report template (#15061)	False	
docs: added `eslint-enable` inline	False	
fix: `generator-star-spacing` false positive (fixes #6135) (#6168)	True	
fix: no-extra-parens false positive (fixes: #9755) (#9795)	False	
update readme.mdchanging travis url.	False	
fix: make sure no-unused-vars doesn't get confused by nested functions (fixes #584)	False	
fix: `valid-jsdoc` unneeded require check fix (fixes #4527)	False	
chore: replace `trimleft`/`trimright` with `trimstart`/`trimend` (#15750)	False	
docs: update readme team and sponsors	True	
chore: add missing space in blog post template (#9407)for non-patch releases, template used to generate this string:> this release adds some new features andfixes several bugs found in the previous release.now it generates this string:> this release adds some new features and fixes several bugs found in the previous release.	True	
6.0.0-alpha.0	False	
fix: prefer-destructuring false positive on "super" (fixes #9625) (#9626)	False	
new: add `no-useless-computed-key` rule (fixes #5402)	False	
add support for comment events (fixes #531)	True	
docs: fix missing delimiter in readme linksalso made the markdown a little more organized via judicious use of line breaks.	True	
build: changelog update for 7.29.0	True	
fix: `indent` rule for objects and nested one line blocks (fixes #3238, fixes #3237)	True	
fix: `no-unexpected-multiline` false positive (fixes #5148)also, rename some variables.we're checking opening and closing parens these days,so `paren` isn't a particularly good name imo.	True	
breaking: remove deprecated browser/jest/node globals (fixes #10141) (#10210)this removes deprecated globals from the `browser`, `jest`, and `node` environments.	False	
fix: remove typo that caused a crash (fixes #1963)	True	
fix: no-cond-assign within a function expression (fixes #6908) (#6909)stops checking to see if an assignment is within a condition if the assignment is wrapped in a function expression, making the behavior consistent between "except-parens" and "always"	True	
fixes #90 -- updates docstrings	False	
upgrade: espree 2.0.0 and escope 3.0.0 (fixes #2234, fixes #2201, fixes	False	
chore: fix `.gitignore` for vscode (refs #6383) (#6720)	True	
docs: triage process (#14014)* docs: describe new triage process* docs: update triage process* update docs/maintainer-guide/issues.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>co-authored-by: brandon mills <btmills@users.noreply.github.com>	False	
docs: fix link in no-irregular-whitespace.md (#12196)	False	
fix: prefer-numeric-literals invalid autofix with adjacent tokens (#12387)	True	
docs: autogenerated changelog for 2.2.0	True	
4.4.0	False	
fix: function id missing in parent scope when using ecmafeature `modules` for rule block-scoped-var (fixes #2242)	True	
docs: fix a typo in shareable configs documentation (#8036)	False	
update: apply lazy loading for rules (fixes #3930)	True	
update: add fixer for `no-lonely-if` (#7202)* update: add fixer for `no-lonely-if`* (squash) don't do a fix if it would change semantics due to asi	True	
update: report constructor calls in no-obj-calls (#12909)* update: report constructor calls in no-obj-calls* add tests for globalthis and unexpectedrefcall* remove math and json from no-new-wrappers	True	
docs: autogenerated changelog for v2.0.0-beta.2	True	
chore: update cliengine option desc (fixes #5179) (#6713)	False	
fix: gray text was invisible on solarized dark theme (fixes #4886)there is a long-standing solarized bug [1] where gray text is invisibleon the dark theme.follow chalk's advice [2] and use 'dim' rather than 'gray'.[1] https://github.com/altercation/solarized/issues/220[2] https://github.com/chalk/chalk/issues/40	True	
fix: yoda should ignore comparisons where both sides are constants (fixes #2867)	True	
update: reporting location for semi-spacing (refs #12334) (#13285)* update: reporting location for unexpected space (refs #12334)* update: both start and end for missing semi spacing* update: changed end loc for unexpectedwhitespace* update: changed loc.end anf tests errors object ordering* chore: test refactore* chore: refactoring codebase	True	
build: package.json and changelog update for 2.5.2	True	
7.12.1	False	
fix: report no-spaced-func on last token before paren (fixes #3289)given code like:return _(foo).map((el) => ...).uniq().value ();here the error is on the last line, but since no-spaced-func reported onthe function callee, it reports on the memberexpression and the outputshows the first line.this solves that by instead reporting on `lastcalleetoken`.	True	
chore: refactor populating configs with defaults in linter (#10006)	True	
improve rule test coverage	False	
add back tests for loading rules from a directory	True	
new: add no-useless-backreference rule (fixes #12673) (#12690)* new: add no-useless-backreference rule (fixes #12673)* improve opening section in the docs, fix typo in a comment* reword the opening paragraph	False	
fix: don't error on destructured params (fixes #2051)	False	
fix: allow `baseconfig` to extend preloaded plugin config (fixes #15079) (#15187)* fix: allow `baseconfig` to extend preloaded plugin config (fixes #15079)* remove cliengine#addplugin	True	
docs: fix space-before-blocks correct code for "classes": "never" (#11391)examples of **correct** code for this rule when configured `{ "functions": "never", "keywords": "always", "classes": "never" }`:replaced```jsclass foo {constructor(){}}```with```jsclass foo{constructor(){}}```	True	
sponsors: sync readme with website	True	
fix: block-scoped-var to work with destructuring (fixes #1863)	True	
fix: space-infix-ops doesn't fail for  type annotations(fixes #5211) (#6723)* update: fix #226, adjust `space-infix-ops`test fails and i have no clue how i'm supposed to add`babel-eslint` to the testing stack for single tests.* add stub parser for flow test	True	
docs: add docs for no-new-wrappers (refs #562)	True	
new: add `overrides`/`files` options for glob-based config (fixes #3611) (#8081)	True	
1.1.0	False	
docs: replace joyent org with nodejs	False	
update: include node version in cache (#12582)* update: include node version in cache* add test* fix unit test	False	
new: add allowsinglelineblocks opt. to padded-blocks rule (fixes #7145) (#11243)* new: add allowsinglelineblocks opt. to padded-blocks rule (fixes #7145)* chore: add tests & docs to padded-blocks (allowsinglelineblocks)	True	
fix: improve autoconfig logging (fixes #5119)	True	
fix: no-restricted-imports schema allows multiple paths/patterns objects (#12639)	False	
update: implement auto fix for `space-after-keywords` rule (fixes #3773)	True	
fix: add prototype methods to global scope (fixes #700)	True	
chore: small opt to improve readability (#10225)	True	
update: make jsx-quotes fixable (refs #4377)	False	
new: `context.getdeclaredvariables(node)` (fixes #2801)	False	
docs: put config example in code block (#6005)quotes outside of code blocks are turned into smart quotes, which makesthem impractical to copy&paste into a code editor.also turns error severity from number to string.	True	
docs: organize meta and describe visitor in working with rules (#5967)	True	
use optionator for option parsing, not optimistoptimist is now deprecated, this commit changes option parsingand help generation to be done with optionator.tests are simplified in that they now can pass in a string of arguments,just like on the command line, instead of an array of strings.options are now accessible through the option's full name.eg. `currentoptions.help` instead of `currentoptions.h`a lengthy comment labeled todo is gone since it is no longer an issuewhen using optionator.the responsibility of printing the help text to the console is given tocli.js instead of options.js, which i feel is more appropriate.	True	
fix: make outeriifebody work correctly (fixes #6585) (#6596)	False	
fixing no-unused-var and no-redeclare	False	
sponsors: sync readme with website	True	
build: optimize rule page title for small browser tabs (fixes #6888) (#6904)	True	
fix: cli should not output anything when there are no warnings (fixes #558)	False	
docs: improve documentation for ruletester cases (#8162)this lists the available properties for ruletester cases rather than relying on a usage example.	True	
chore: test formatted integers in no-dupe-keys (refs #13568) (#13626)this adds tests for numeric literal object keys that aren't digit-onlydecimal integer literals, including es6 binary and octal literals,es2020 bigint literals, and es2021 numeric separators. the valid testshave similar-looking literals that are distinct keys, and the invalidtests have differently-formatted literals that result in duplicate keys.	True	
fix: indent rule for allman brace style scenario (fixes #5064)	True	
update: refactor eslint-disable comment processing (#9216)(fixes #6592, fixes #9215)	True	
docs: fix option typo in no-underscore-dangle (fixes #6674) (#6675)	False	
fix: func-name-matching crash on non-string literal computed keys (#8246)* fix: func-name-matching crash on non-string literal computed keysin order to detect whether it should require a function name match, the `func-name-matching` rule checks to see if a computed object key is a string literal, and if so, it performs operations on the value of the string literal. however, the rule was previously only verifying that the computed object key was a literal, without verifying that it was a *string* literal. as a result, if other literals (e.g. `null`) were used as computed object keys, the rule would crash. this fix updates the rule to check that the object key is a *string* literal.* add additional test cases for literals	True	
fix: lint for eslint project in regards to vars (refs #5188)	True	
chore: small opt to improve readability (#10241)* chore: use array.unshift(), to avoid array.reverse()* chore: fix misleading jsdoc param	True	
fix: space-in-parens in template strings (fixes #3182)	False	
update: no-restricted-modules handle templateliteral (fixes #12926) (#12927)* update: no-restricted-modules handle templateliteral (fixes #12926)* add fixture using backslashes* finally understood, i think	True	
fix: leading comments added from previous node (fixes #5531)	False	
update: no-irregal-whitespace in a regular expression (fixes #5840) (#6018)problem:no-irregal-whitespace ignores string literals correctly, but doen'tregular expressions. (#5840)solution:also check that the node is a regular expression inremoveinvalidnodeerrorsinidentifierorliteral().added below options to no-irregal-whitespace- skipstrings (default: true)- skipregexps (default: false)- skiptemplates (default: false)	True	
update rule: implement curly options for single-statement bodies (fixes #511)	True	
docs: autogenerated changelog for 2.4.0	True	
refactored `max-statements` rule.refactored the max-statements rule to push/pop from a function stack to evaluate the number of statements in a function. previously the number of statements were being calculated by recursive traversal. additionally, i've cleaned up a few of the tests.	True	
sponsors: sync readme with website	True	
chore: combine tests in tests/lib/eslint.js and tests/lib/linter.js (#8746)3ec436eeed0b0271e2ed0d0cb22e4246eb15f137 renamed lib/eslint.js to lib/linter.js, but it did not rename the corresponding test file, which remained as tests/lib/eslint.js. when adding tests for linter.js afterwards, we put them in a new tests/lib/linter.js file. this is confusing because the tests for lib/linter.js are now in two different places. this commit combines the two test files into tests/lib/linter.js.	True	
0.10.0	False	
fix: remove autofixer for no-unsafe-negation (#12157)	True	
docs: fix typo in arrow-parens.md (#8132)	False	
make sure namespaces are honored in new-cap	False	
upgrade: eslint-scope@4.0.2 (#11461)	False	
docs: newline-after-var doesn't allow invalid options.	False	
fix false warning from no-undef rule (fixes #283)	False	
docs: fix no-irregular-whitespace description (#11196)	False	
chore: format style guide links so they can be clicked (#12189)* properly format styleguide linkswhen using the initializer and coming to style guide step, visual studio code terminal doesn't properly format style guide links so when user clicks on one of the links it takes them to e.q `https://github.com/airbnb/javascript)` (note the `)` at the end)putting spaces between links and opening and closing braces fixes this.* remove braces around linksremove braces around links and add a colon at the beginning.	True	
fix: issues with named function expressions in no-unused-vars and no-shadow (fixes #662)	False	
docs: add mega-linter to the list of integrations (#14707)	True	
docs: manual changelog update for v2.5.1	True	
fix: handle comments in comma-spacing (fixes #4389)	False	
update: implement auto fix for `space-before-keywords` rule (fixes #3771)	True	
docs: clarify global-require inside try/catch (fixes #3834)	False	
docs: fix semi rule typo	False	
fix: make sure semi reports correct location of missing semicolon (fixes #726)	False	
fix: include files with no messages in junit results (#9093) (#9094)	False	
docs: distinguish examples in rules under stylistic issues part 3	False	
docs: fixed typo (#14007)	False	
docs: fix a wrong examples' header of `prefer-arrow-callback`. (#6020)	False	
fixed: config.getconfig is called either with a file path or with no args (fixes #520)	False	
docs: update no-new documentation (fixes #2044)	False	
adding tap formatter and basic tests	True	
docs: change eol-last examples to <pre> (fixes #1068)	True	
new: `class-methods-use-this` rule (fixes #5139) (#6881)	False	
update: add getnodebyrangeindex method (refs #1755)	False	
docs: add more examples for `array-element-newline` rule (#15427)	True	
fix: don't require a third argument in linter.verifyandfix (fixes #8805) (#8809)previously, `linter.verifyandfix` would crash if no third argument was provided, because some debugging lines assumed that the argument always existed. this updates the method to make the third argument optional.	True	
docs: distinguish examples in rules under node.js and commonjs	False	
docs: explain .eslintignore features (fixes #1094)	False	
sponsors: sync readme with website	True	
build: changelog update for 7.22.0	True	
chore: avoid storing list of problems on linter instance (refs #9161) (#9214)	True	
fix: `indent` rule to check for last line correctly (fixes #3327)	True	
new: `no-dupe-class-members` rule (fixes #3294)	False	
docs: default option from `operator-linebreak` is `after`and not always (#7228)	True	
docs: fix typo in the shareable configs docchange without -> with	False	
new: add ignorepattern, ignorecomments, and ignoreurls options to max-len (fixes #2934, fixes #2221, fixes #1661)the code is a bit messy, but heavily commented and unit testing isincluded to try to capture all of the resulting edge-cases.this breaks eslint-tester because of eslint/eslint-tester#28 andeslint/eslint-tester#24.	True	
0.18.0	False	
docs: update plugins documentation for 1.0.0	True	
fix: empty glob pattern incorrectly expands to "/**" (#11476)* fix: empty glob pattern incorrectly expands to "/**"* chore: move empty pattern ignoring to listfilestoprocessit didn't work inside resolvefileglobpatterns because that functionneeds to return an array of the same length as its input (15d77bd).	True	
fix: duplicated error message if a crash occurs (fixes #8964) (#8965)	False	
chore: typo in no-irregular-whitespace.js (#12847)	False	
5.15.3	False	
fix: ignore hidden folders when resolving globs (fixes #8259) (#8270)this is a performance improvement, but should not be a change to lintingfunctionality.  this is similar to avoiding glob resolution within`node_modules`.  with this change, `node-glob` will not attempt tofind all files within `.dotfolder` folders.  similar to `node_modules`,this can be overridden in a user???s ignore file or in an ignore-pattern.	True	
update: fix false negative of no-extra-parens with newexpression (#13930)	False	
build: package.json and changelog update for 3.8.0	True	
breaking: ignore children of all patterns by adding "/**" (fixes #1069)	False	
fix: avoid mutating node.range in max-len (fixes #1224)	False	
update: add ignorejsx option to no-extra-parens (fixes #7444) (#7926)	True	
7.20.0	False	
fix: `lines-around-comment` multiple errors on same line (fixes #5965) (#5994)	False	
docs: (grammar) "the setup" -> "to set up" (#11117)source: http://www.future-perfect.co.uk/grammar-tip/is-it-setup-set-up-or-set-up/	True	
fix: adding exception for last line (refs #2423)	True	
chore: pin fs-teardown@0.1.1 (#14771)	False	
build: package.json and changelog update for 3.17.1	True	
build: sort rules before dumping them to doc files (#8154)fixes #8013.	True	
fix linting error	False	
update: rm rule no-debugger autofix (fixes #10242) (#10425)	True	
fix: line breaking with just carriage return (fixes #2005)	False	
docs: clarify defaultassignment option, fix no-unneeded-ternary examples (#10874)* contradictions in no-unneeded-ternary documentationsee https://github.com/eslint/eslint/issues/10872* updated examples to more clearly reflect eslint behaviour.* update no-unneeded-ternary.md	True	
build: reset branch coverage target	False	
docs: add jscs-dev.github.io links (#10771)	False	
chore: adding log at beginning of unit tests in makefile.js (#10102)	False	
add tests to config load order: base, env, user.	True	
docs: update readme team and sponsors	True	
fix: fix failing uknown node test since #8569 indents class bodies (#8588)	True	
docs: update cla info (#15058)this doc change removes a reference to the decommissioned jsf cla, and replaces it with the newopenjs foundation cla infra.signed-off-by: brian warner <brian@bdwarner.com>	True	
chore: make minor improvements to `indent` internals (#8947)* get rid of an `if` statement whose condition was always true. (with this change, the `indent` rule now has 100% branch coverage.)* remove the `matchindentof` helper in favor of using `setdesiredoffset` with an offset of 0.* fix outdated or misleading comments* move some function declarations into methods on the listeners object when possible	True	
docs: improve examples for multiline-comment-style (#9440)this updates the multiline-comment-style docs to use separate code blocks for the separate options, to make the differences between the options clearer.	True	
chore: remove unnecessary slice from logging utility (#9343)	False	
fix: no-useless-computed-key edge cases with class fields (refs #14857) (#14903)	False	
update: add markers to spaced-comment (fixes #2588)	True	
update: improve report location newline-per-chained-call (refs #12334) (#13116)* update: improve report location newline-per-chained-call (refs #12334)* set loc.end to callee.loc.end	True	
fix: don't try too hard to find fault in `no-implicit-coercion` (refs #3402)	True	
new: add --env-info flag to cli (#12270)	True	
0.15.1	False	
chore: upgrade `coveralls` to ^2.11.16 (#8161)	True	
6.0.0	False	
chore: enforce jsdoc check-line-alignment never (#14955)	True	
fix: not to override the required extended config object directly (fixes #2487)	True	
chore: adding assign/redeclare tests to no-undefined (refs #7964) (#7965)	True	
new: add sharable rule settings (fixes #1233)	False	
docs: invalid json in `configuring.md`	True	
upgrade: esprima to 1.2.2	True	
docs: specify min eslint version for new rule format (#7501)fixes eslint/eslint.github.io#300	True	
docs: update documentation with linking instructions for eslinttester	True	
update: keyword-spacing unexpected space loc improve (refs #12334) (#13377)	False	
breaking: default no-magic-numbers to none. (fixes #4193)	True	
fix: allow array spread for prefer-object-spread rule (fixes #10344) (#10347)	True	
fix: fix message of function-paren-newline (#12136)	False	
chore: prevent package-lock.json files from being created (fixes #8742) (#8747)this adds an .npmrc file to the project root to prevent npm from creating a package-lock.json file on install.	True	
update: re-enable experimentalobjectrestspread (fixes #9990) (#10230)* update: re-enable experimentalobjectrestspread (fixes #9990)and it generates a deprecation warning to show that the option has beendeprecated.* move warning to config-validator* revert some unnecessary changes* move ecmaversion=9 to resolveparseroptions function* change error code of deprecation warnings* make tests robuster* fix node 6.x problem.* fix node 6.x problem.	True	
docs: `func-name-matching`: update with ???always???/???never??? option (#7536)	False	
build: remove unneeded json config in demo (fixes #8237) (#8242)	True	
build: comment out auto publishing of release notes (refs #2640)	True	
fix: `no-extra-semi` in class bodies (fixes #2794)	False	
chore: avoid parseroptions boilerplate in tests for es6 rules (#7724)many of eslint's rules are only relevant to es6 code. the tests for some of those rules currently use "{ parseroptions: { ecmaversion: 6 } }" for each individual test case, rather than specifying a default object as an argument to the `ruletester` constructor. this commit updates those tests to avoid boilerplate from repeating the same parseroptions over and over.	True	
5.4.0	False	
update: check all assignments for consistent-this (fixes #1513)	True	
docs: fix broken anchor in configuration files (#15223)	False	
update: no-implicit-coercion checks templateliterals (fixes #7062) (#7121)	False	
docs: distinguish examples in rules under stylistic issues part 2	False	
fix: avoid autoconfig crashes from inline comments (fixes #5992) (#5999)	True	
chore: improve performance of `indent` rule (#8905)this updates the `indent` rule to be more performant by storing information ranges of tokens rather than performing operations on many individual tokens one at a time.	True	
fix: install required eslint plugin for "standard" guide (fixes #6656) (#6657)`eslint-config-standard` peer depends on `eslint-plugin-promise`, solet's install that for users.	True	
docs: add 2021 and 2022 to supported ecmascript versions (#14952)	True	
docs: add customink to the list of companies	True	
fix: remove duplicate of eslint-config-eslint (fixes #4909)and pins js-yaml as same version as eslint.	False	
fix: no-invalid-this false positive in class field initializer (#15495)* fix: no-invalid-this false positive in class field initializerfixes #15477* fix jsdoc	False	
docs: add 'when not to use it' section in no-duplicate-case docs (#15563)fixes #15552	True	
docs: clarify triage process (#14117)* docs: clarify triage process* update docs/maintainer-guide/issues.md* update docs/maintainer-guide/issues.md* update docs/maintainer-guide/issues.md* update docs/maintainer-guide/issues.md	False	
4.0.0-rc.0	False	
new: added comma-spacing rule (fixes #628, fixes #1319)	False	
update: added globals for: phantom,jquery, prototypejs, shelljs (fixes #1704)	True	
build: fix formatter docs generation (fixes #3847)	True	
fix: glob pattern from .eslintignore not applied (fixes #3750)fixes #3746fixes #3748	False	
fix: no-multiple-empty-lines and template strings (fixes #2605)	False	
new rule: valid-jsdoc (fixes #536)	False	
fixes #372: disallow negated left operand in `in` operator	True	
fix: astutils.getnextlocation returns invalid location after crlf (#13275)	False	
rule: no-func-assignthe `no-func-assign` rule disallows overwriting functions that were written as a functiondeclaration.function foo() {}foo = bar;this rule matches jshint rule w021.	False	
new: `block-spacing` rule (fixes #3303)	False	
new: padding-line-between-statements rule (fixes #7356) (#8099)* new: newline-between-statements (fixes #7356)* chore: refactor with ast selectors* fix: add more tests.- the kind `directive`  matches to only directive prologue.- the kind `expression` does not match to directive prologue.- the kinds `block-like` and `multiline-block-like` match to do-whilestatements.- the kinds `block-like` and `multiline-block-like` do not match toclasses.* update: change options' form.- it was the array of arrays, but it becomes the array of objects.* update: rename* update: deprecate 3 rules as replaced by this* use astutils.statement_list_parents instead of local regexp.* avoid catastrophic backtracking* improve iife check for unary expressions* fix a bug about semicolon-less style and empty statements* unwrap the array of options* use constants for error messages.* update document* fix plural* fix blankline ??? blankline	True	
docs: mention version for config glob patterns (fixes #8793)	True	
docs: update configuring.md to fix incorrect link.docs linked to old for-of documentation url. this commit updates it tothe current correct url.	True	
docs: remove link to deprecated eslinttester project (refs #3110)	True	
#586 refactor based on https://github.com/eslint/eslint/pull/590#discussion_r9476367	True	
fix: invalid tests with super (fixes #9539) (#9545)this corrects some tests which used `super` in an invalid way, and arenow failing due to an acorn upgrade.	True	
docs: remove outdated notes from migration guide (#10279)	False	
fix: "extends" within package.json (fixes #2754)	True	
update: add end location to report in `consistent-return` (refs #12334) (#14798)* update: add end location to report in `consistent-return`* update: report end location for `function` keyword	True	
fix: arrow-body-style fixer for `in` wrap (fixes #11849) (#13228)* fix: add parens when in operator (fixes #11849)* chore: some more tests* chore: update jsdoc commentsco-authored-by: yeonjuan <yeonjuan93@naver.com>* update: add paren only for forstatement* update: fixed adding extra parens* update: minified traversing using visitor query* chore: isinop to false while existing* update: fixed the logic* update: logic* update: checking inside of for loop* chore: updated is for in checkco-authored-by: yeonjuan <yeonjuan93@naver.com>	True	
docs: no-plusplus.md - auto semicolon insertionthe way this rule is presented in the documentation sounds as if it'sjust a matter of taste regarding code readability. on the other hand,due to automatic semicolon insertion, this may be considered animportant rule. of course, no one will write the code like in theseexamples, but some of us do not prefer whitespace affecting semanticsof the source code, and that's why i believe this rule should be on bydefault.recall the famous example function which returns `undefined`:```jsfunction returningundefined() {return{value: 42}}```	True	
add support for comment events (fixes #531)add :after events for comments	True	
docs: declaring dependency on eslint in shared config (fixes #6617) (#6985)	False	
fix: clarify line breaks in object-curly-newline (fixes #14024) (#14063)* docs: clarify line breaks in object-curly-newline (refs #14024)* docs: clarify line breaks in object-curly-newline (refs #14024)* fix: clarify line breaks in object-curly-newline (fixes #14024)	False	
fix: throw when rule uses `fix` but `meta.fixable` not set (fixes #5970) (#6043)throw an error when a rule uses `fix` but has no `meta.fixable`property set.	False	
fix: install eslint on init if not installed (fixes #5833)	False	
5.2.0	False	
fix: check type to be file when looking for config files (fixes #2790)	True	
update: handle crlf line endings in spaced-comment rule - 2 (fixes #3005)	False	
fix: comma-style autofix produces errors on parenthesized elements (#8331)previously, the autofixer would produce invalid syntax if it encountered a parenthesized element followed by a missing element on the next line. this commit updates the token logic to avoid that error.	True	
docs: fix typo in max-params examples (#6471)original meaning inferred from earlier statements in the file, the header for the immediate example, and the code for the rule itself (on line 49).	True	
fix: radix rule crash on disabled globals (#12824)	False	
5.0.0-rc.0	False	
breaking: require rules to provide report messages (fixes #10011) (#10057)this updates eslint core to throw an error when a rule reports a problem without providing a report message. it is unlikely that many users were relying on the previous behavior, because a reported problem without a message would crash several formatters, including the default formatter. however, it is possible that someone was relying on this with the `json` formatter.	True	
docs: update no-sequences rule docs for clarity (fixes #5536)	True	
changed semi rule to use tokens instead of source	True	
fix: avoid loading core rules dynamically from fs in linter (#11278)	False	
build: changelog update for 5.7.0	True	
upgrade to the latest version of doctrine.	True	
fix: no-whitespace-before-property fixes (fixes #5167)rule ignores whitespace inside brackets, accounts for parentheses, and correctly reports property name	True	
added curly braces to if statment	True	
fix: ensure prefer-const fixes destructuring assignments (fixes #7852) (#7859)	False	
docs: fix broken links (#14756)* docs: remove superfluous whitespace* docs: update links	False	
new: `no-restricted-syntax` rule to forbid certain syntax (fixes #2422)	True	
sponsors: sync readme with website	True	
fix: avoid creating extra whitespace in brace-style fixer (fixes #7621) (#8491)previously, the brace-style autofixer would leave any existing whitespace between tokens when removing newlines. this would result in a large amount of extra whitespace on a line when fixing indented code. users generally don't expect indentation whitespace to be preserved inline when fixing brace styling, so this commit updates the fixer to always output a single space between tokens when removing newlines.	True	
update: allow `space-unary-ops` to handle await expressions (#7174)(refs #7101)	True	
fix: reset to the default color (#12174)	True	
new: linebreak-style rule (fixes #1255)	False	
chore: remove devdependency common-tags (#11455)this is following https://github.com/eslint/eslint/pull/11453.	False	
update: add ignored prop regex no-param-reassign (#11275)uses new `ignoredpropertyassignmentsregex` option.	False	
fix: valid-jsdoc rule to support exported functions (fixes #2522)	True	
update: add requirereturndescription for valid-jsdoc (fixes #1833)	True	
docs: fix two broken links (#14726)	False	
fix: don't use deprecated api (#11689)* fix: don't use deprecated api* update lib/util/relative-module-resolver.jsco-authored-by: teddy katz <teddy.katz@gmail.com>	True	
fix: missing support for json sub configs (fixes #5413)	True	
upgrade: eslintrc for moduleresolver fix (#14577)this incorporates https://github.com/eslint/eslintrc/pull/34, whichallows fixing `cliengine`'s `moduleresolver` import.	True	
docs: wrap placeholder sample in {% raw %} (#7798)	False	
docs: fix anchor links (#13715)fix anchor links to lintresult, lintmessage, editinfo, and formatter	True	
docs: add examples to better show rule coverage. (#9548)	True	
fix: `comma-dangle` with `"always"`/`"always-multiline"` false positive after a rest element (fixes #3627)	False	
fix link to architecture doc in readme	True	
fix: prefer-exponentiation-operator invalid autofix with await (#13924)	True	
docs: rules restricting globals/properties/syntax are linked together (#7743)rules `no-restricted-globals`, `no-restricted-properties`, and `no-restricted-syntax` link to each other in their related rules sections.	True	
fix: don't count else-if in max-depth (fixes #1835)	False	
update: `newline-after-var` allow comment + blank after var (fixes #2852)comments (one or more) are now allowed after a var statement in "always" mode,as long as the comments have a blank line between them and whatever comes after.	False	
0.10.1	False	
docs: add example of diff clarity to newline-per-chained-call (#5986)	True	
docs: add recommended keywords for plugins (fixes #1248)	True	
update: short circuit and ternary support in no-unused-expressions (fixes #2733)	False	
fix: `no-*-assgin` rules support destructuring (fixes #3029)	False	
new: allow the cli parameter "color" and "no-color" (fixes #954)this enables colourised output when piping eslint's output.adds --color and --no-color as allowed argsusage: `eslint --color | head`usage: `eslint --no-color | head`	False	
fix: support boundary spread elements in sort-keys (#11158)* fix: support boundary spread elements in sort-keys* docs: rename "boundary spread operator" term	True	
update: fix memberexpression indentation with "off" option (fixes #8721) (#8724)this fixes a bug where token dependencies were configured incorrectly when the "off" memberexpression option was set, resulting in incorrect behavior for chained expressions.	True	
docs: 1tbs with allowsingleline edge cases (refs #12284) (#12314)add documentation and tests demonstrating iffy edge cases	False	
build: ignore jsdoc folder internally (fixes #5714)	False	
fix: object-curly-newline minproperties w/default export (fixes #10101) (#10103)minproperties only tracks importspecifier and exportspecifier nodes	False	
build: re-run browserify when generating site (#9275)(fixes https://github.com/eslint/eslint.github.io/issues/407)this updates the `npm run gensite` script to run browserify as part of the site generation, rather than using whatever it finds in `build/eslint.js`. this has a few advantages:* the built file will always be up-to-date (previously, it would reflect the state of the repository whenever `npm test` was last run).* the gensite script won't fail if it's run on its own and there isn't a `build/` directory.	True	
docs: fix typo in suggestions section (#14293)	False	
feat: add examples for block-scoped-var with class static blocks (#15302)documents examples for `block-scoped-var` with class static blocks.the code change is only for clarity. it doesn't change the behavior of this rule.refs #15016	True	
update: add ignoredestructing option to camelcase rule (fixes #9807) (#10373)	True	
breaking: switch to espree 3.0.0 (fixes #4334)	True	
new: code path analysis (fixes #3530)	False	
fix: don't validate schemas for disabled rules (fixes #7690) (#7692)	True	
docs: fixes examples for allowtemplateliterals (fixes #7115) (#7135)	True	
build: changelog update for 4.13.0	True	
update: add functionprototypemethods to wrap-iife (fixes #7212) (#7284)	True	
merging no-native-reassign and no-redefine	False	
update: no-unexpected-multiline to flag confusing division (fixes #8469) (#8475)* update: no-unexpected-multiline to flag confusing division (fixes #8469)previously, the no-unexpected-multiline docs mentioned that the division operator could prevent semicolon insertion, but it did not report an error for cases where this happens. this commit updates the rule to report an error when a multiline division operation looks like it was intended to be a regular expression with flags.fixes https://github.com/eslint/eslint/issues/8469* remove duplicate test	True	
fix broken test, ensure tests get run before a release is pushed	True	
sponsors: sync readme with website	True	
fix: unexpected autofix in prefer-const (fixes #12514) (#12521)	True	
fix bug in no-control-regex (fixes #347)	False	
chore: fixing a call to object.assign.apply in linter (#10629)	True	
fix: key-spacing with single properties (fixes #2311)	False	
docs: update no-unused-expressions docs (fixes #3685)	False	
fix: eslint crash with prefer-object-spread (fixes #10646) (#10649)* fix: eslint crash with prefer-object-spread (fixes #10646)* chore: add tests* chore: review suggestions	False	
chore: disallow .substr and .substring in favor of .slice (#9010)this updates eslint-config-eslint to disallow string#substr and string#substring in favor of string#slice.	True	
update: support .eslintrc.cjs (refs eslint/rfcs#43) (#12321)* fix: es module compatibility (fixes #12319)in es module packages w/ "type": "module" defined treat all .js files as es modules. commonjs files contained in an es module package should use the .cjs extension.* fix documentation* add tests* fix lint error	False	
update: handle uncommon linebreaks consistently in rules (fixes #7949) (#8049)* update: handle uncommon linebreaks consistently in rules (fixes #7949)currently, rules that deal with line-splitting need to include a list of js linebreaks in some form (e.g. in a regex character class). as a result, splitting a string into js lines is implemented in 22 different places in the codebase. as described in https://github.com/eslint/eslint/issues/7949, not all of these implementations are correct (many of them forget to account for \r, \u2028, and \u2029.this commit updates ast-utils.js with the following properties:* `astutils.linebreaks`: a set containing all js linebreaks* `astutils.linebreak_matcher`: a regular expression to match js linebreaks* `astutils.creategloballinebreakmatcher`: a function that returns a new global regex to match js linebreaksadditionally, it updates the other line-splitting code to use these constants.observable changes:* the error message for `newline-per-chained-call` will handle property names with \u2028 and \u2029 the same way it handles names with \n.* `no-multi-str` will now report an error for strings that contain \r, \u2028, or \u2029. (previously, it only reported strings containing \n.)* `no-unused-vars` will now report the correct location if a `/* global foo */` comment contains a linebreak other than \n. (previously, it would report an invalid location.)* `spaced-comment` will no longer report an error if a comment contains tokens in the `exceptions` option followed by \u2028 or \u2029.* fix build on node 4* avoid changing whitespace logic in no-multi-spaces	True	
sponsors: sync readme with website	True	
fix: files with no failures get "passing" testcase (#9547)this fixes junit parsing errors which treat no testcases as a failure (e.g. atlassian bamboo).	False	
update: make rules work with arrow functions (fixes #1508, fixes #1509,fixes #1493)	False	
docs: minor rephrase in `no-invalid-this`. (#9542)	False	
fix: class-methods-use-this reports 'undefined' names (#12103)	False	
update: auto fix for space-before-function-paren rule (fixes #3766)	True	
fix: ignore argument parens in no-unexpected-multiline (fixes #4658)	False	
docs: add es 2018 to configuring eslint (#9829)	True	
fix: no-undef-init autofix removes comments (#12299)	True	
fix: overindent in variabledeclarator parens or brackets (fixes #5492)	True	
docs: update comma-style docs (#6039)	False	
upgrade: js-yaml to 3.9.1 (refs #9011) (#9044)	True	
7.31.0	False	
add support for the do-while statement to the curly rule (closes #167)	True	
build: fix typo in blog post template (fixes #11614) (#11782)	False	
fix: `prefer-arrow-callback` false positive at recursive functions (fixes #3454)	False	
new rule: no-constant-condition (fixes #621)	False	
new: capitalized-comments rule (fixes #6055) (#7415)* new: capitalized-comments rule (fixes #6055)* removing capitalize object option and requiring string in schema* renaming to lib/util/patterns/letters.js* modifying docs to account for new schema* fixing typos in capitalized-comments docs* fixing docs and adding license and generated file info to patterns file	True	
fix: node.js scoping in block-scoped-var (fixes #1969)	False	
breaking: remove node from results (fixes #957)	False	
docs: update readme team and sponsors	True	
update: add enforceforjsx option to no-unused-expressions rule (#14012)* update: no-unused-expression flags unused jsxreact's createelement call is side-effect free, as are most jsx pragmas.an unused jsx element indicates a logic error in the same way any unused, side-effect free expression is.this extension the no-unused-expression rule flags unused jsx elements unless the (new) allowjsx configuration option is set* fixup! update: no-unused-expression flags unused jsxreact's createelement call is side-effect free, as are most jsx pragmas.an unused jsx element indicates a logic error in the same way any unused, side-effect free expression is.this extension the no-unused-expression rule flags unused jsx elements when the (new) ignorejsx configuration option is set* fixup! update: no-unused-expression flags unused jsx* fixup! update: no-unused-expression flags unused jsx* fixup! update: no-unused-expression flags unused jsx* fixup! update: no-unused-expression flags unused jsx* fixup! update: no-unused-expression flags unused jsx* fixup! update: no-unused-expression flags unused jsx* fixup! update: no-unused-expression flags unused jsx* fixup! update: no-unused-expression flags unused jsx* fixup! update: no-unused-expression flags unused jsxapply suggestions from code reviewco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
fix: incorrect config message (fixes #5653)update "warning" to "warn"	True	
build: changelog update for 7.18.0	True	
change space-* rule documentation headers to be more descriptive	True	
fix: indent rule variabledeclarator doesn't apply to arrow functions (fixes #3661)	True	
fix: support typescript generics in arrow-parens (fixes #12570) (#13451)	False	
docs: add documentation for quotes rule	True	
chore: remove unused eslint-disable comment (#9251)	False	
update: separate indent options for var, let and const (fixes #3339)	True	
new: add arrow-parens and arrow-paces rule (fixes #2628)	False	
docs: update status of breaking changes in migration guide (#11652)this updates the migration guide to remove the "unimplemented" notice for features that have now been implemented, and it brings the `eslint:recommended` section up to date with the latest decision.	True	
docs: clarify exceptions in spaced-comment (fixes #13032) (#13126)* docs: update exception details to cover newline issue (fixes #13032)* docs: refactore explaination and added example* chore: changed explaination* chore: change from 'line' to 'block' docs eg	True	
update: fix indent bug on comments in ternary expressions (fixes #9729) (#9818)	False	
build: always build docs site on top of origin/master	True	
new: rule indent (fixes #1022)	False	
docs: typo: "eslint-disable-line" not "eslint disable-line" (#6019)	False	
check for use of underscore library as an exception for var declarations	True	
docs: explain global vs. local plugins (fixes #1238)	False	
docs: make `quotes` docs clearer (fixes #3646)	False	
fix: add end location to report in no-extra-bind (refs #12334) (#13083)	True	
fix: no-sequences is reporting incorrect locations (#12241)* fix: no-sequences is reporting incorrect locations* report full location	False	
docs: fix func-style arrow exception option	False	
docs: add links to json schema resources (fixes #3411)	True	
update: "off" options for "space-before-blocks" (refs #10906) (#10907)* update: "off" options for "space-before-blocks" (refs #10906)see https://github.com/eslint/eslint/issues/10906where "always" enforces space and "never" enforces no-space, "off" does not enforce any space preference.it may be useful to add a similar "off" option to other enums only allowing "always" and "never", too, but that is outside the scope of this pr.	True	
new: add allowimplicit option to array-callback-return (fixes #8539) (#9344)* new: add allowimplicit option to array-callback-return (fixes #8539)* chore: add tests* update array-callback-return.md* chore: rename options* update array-callback-return.js* update array-callback-return.js* update array-callback-return.js* improve allowimplicit option description* test explicit return when "allowimplicit": true	True	
docs: update jscs info in readme	False	
upgrade: `eslint-visitor-keys` to v3 (#14902)https://github.com/eslint/eslint-visitor-keys/releases/tag/v3.0.0	True	
docs: add links for issue documentation	True	
update: add popular style guides (fixes #4320)	False	
docs: fix severity type in example	False	
docs: (curly) fix broken code in example(fixes #3539)	False	
fix: track variables, not names in require-atomic-updates (fixes #14208) (#14282)* fix: require-atomic-updates false positives in loops (fixes #14208)* rework & store variables in segmentinfo instead of variable names* skip unresolved references in createreferencemap	True	
update: report double extra parens in no-extra-parens (fixes #12127) (#12697)* fix: report double extra parens in no-extra-parens (fixes #12127)* rename function, add comments* review feedback* add more test cases* apply cond-assign-exception to test node only* add more checking for double parens* move unaryexpression and exponentiation check* change comments* rebase checkclass, add test case for regression* add invalid test case* add double parens check for for-of, sequence expression	True	
sponsors: sync readme with website	True	
fix: make max-len ignorestrings ignore jsxtext (fixes #9954) (#9985)* fix: make max-len ignorestrings ignore jsxtext (fixes #9954)* ignore jsxtext token only if it is a child of a jsxattribute node	True	
docs: fix anchor links in node.js api toc (#12821)	True	
sponsors: sync readme with website	True	
chore: fix typo (#13975)	False	
fix: ignore leading space check for `null` elements in comma-spacing (fixes #3392)	True	
build: changelog update for 8.3.0	True	
sponsors: sync readme with website	True	
docs: fix spelling in valid-typeof example (#9574)	False	
adds smarter-eqeqeq rule	False	
fix: don't throw spurious shadow errors for classes (fixes #2545)	True	
fix: pass internal config paths in fileenumerator default (fixes #13789) (#13792)* chore: repro fileenumerator exception with default args (refs #13789)when `cliengine` instantiates `fileenumerator`, it explicitly passes itsown `cascadingconfigarrayfactory` instance, which now includes valuesfor `builtinrules`, `loadrules`, `eslintrecommendedpath`, and`eslintallpath`. this is the only place that eslint core instantiates`fileenumerator`, so core does not rely on the constructor's defaultvalue for `configarrayfactory`.after `cascadingconfigarrayfactory` was extracted into`@eslint/eslintrc`, it no longer assumed values for`eslintrecommendedpath` and `eslintallpath`, which `cliengine` nowprovides. if those values are not passed, as is the case with thedefault `cascadingconfigarrayfactory` for `configarrayfactory`, fileenumeration will encounter the exception that was reported in #13789.from the perspective of eslint core, the default value for`configarrayfactory` is dead code. however, even though `fileenumerator`is an undocumented api, it's called by `eslint-plugin-import`'s`no-unused-modules` rule, which hits the exception reproduced by thistest.* fix: pass internal config paths in fileenumerator default (fixes #13789)when `cliengine` instantiates `fileenumerator`, it explicitly passes itsown `cascadingconfigarrayfactory` instance, which now includes valuesfor `builtinrules`, `loadrules`, `eslintrecommendedpath`, and`eslintallpath`. this is the only place that eslint core instantiates`fileenumerator`, so core does not rely on the constructor's defaultvalue for `configarrayfactory`.after `cascadingconfigarrayfactory` was extracted into`@eslint/eslintrc`, it no longer assumed values for`eslintrecommendedpath` and `eslintallpath`, which `cliengine` nowprovides. if those values are not passed, as is the case with thedefault `cascadingconfigarrayfactory` for `configarrayfactory`, fileenumeration will encounter the exception that was reported in #13789.from the perspective of eslint core, the default value for`configarrayfactory` is dead code. however, even though `fileenumerator`is an undocumented api, it's called by `eslint-plugin-import`'s`no-unused-modules` rule, which hits the exception reproduced by thistest.	True	
new: `no-unsafe-negation` rule (fixes #2716) (#6789)* new: `no-unsafe-negation` rule (fixes #2716)* update: deprecate `no-negated-in-lhs` rule (refs #2716)	False	
sponsors: sync readme with website	True	
fix: allow references to external globals in id-blacklist (fixes #12567) (#12987)* fix: allow references to external globals in id-blacklist (fixes #12567)* simplify global reference check	True	
fix: `no-useless-constructor` clash (fixes #5573)	True	
docs: update readme faq	False	
update: add newexpression support to comma-style (#9591)	True	
update: fix `brace-style` false negative on multiline node (fixes #7493) (#7496)	False	
expose interface for defining new rules at runtime without fs access	True	
docs: fix config comments in indent docs	False	
update: improve report location for new-cap (refs #12334) (#13136)	True	
fix: handle error when running init without npm (#9169)modify fetchpeerdependencies() function in npm-util to retun null if thenpm process exited with an enoent error.modify installsyncsavedev() function in npm-util to log an error message  if thenpm process exited with an enoent error.write new tests for fetchpeerdependencies() and installsyncsavedev() tocover these scenarios.modify the sync stub in other installsyncsavedev() tests to return an objectmore similar to the child_process object specified in the node.js docs,to avoid undefined field errors.	True	
make sure delete operator isn't flagged as unused expression (fixes #364)	True	
docs: update governance (#13055)	False	
chore: make fuzzer produce minimal reproducible examples of bugs (#11700)when the fuzzer for rules discovers a bug, it outputs source code that reproduces the bug. however, since the source code is autogenerated, it is often extremely complex and contains lots of parts that are irrelevant to the cause of the bug, making it tedious to figure out what the bug actually is.this commit adds a "code sample minimizer" to the fuzzer that tries to remove irrelevant parts of the ast so that the resulting code sample is as small as possible while still reproducing the issue found by the fuzzer.as a demonstration, the minimizer would have reduced the very large code sample from the fuzzing error in [this ci build](https://travis-ci.org/eslint/eslint/jobs/519526960) down to the following simplified code:```js($2 = $3) ?$4 : ($5)```	True	
3.17.1	False	
6.7.1	False	
fix: handle computed class fields in operator-linebreak (refs #14857) (#14915)	True	
5.14.0	False	
update: check allman-style classes correctly in indent (fixes #8493) (#8569)* update: check allman-style classes correctly in indent (fixes #8493)previously, the logic in the `indent` for handling classes was separate from the logic for handling block statements, and there was a bug where the opening curly brace in a class was incorrectly offset from the start of the class. this commit updates the rule to use the same logic for handling block statements and class bodies.* add additional test	True	
breaking: class default `true` computed-property-spacing (fixes #12812) (#12915)	False	
fix: `indent` rule forgot about some callexpressions (fixes #5295)	True	
chore: don't pull default options from eslint:recommended (fixes #8374) (#8381)previously, several internal modules used `conf/eslint-recommended.js` as a source for defaults. this made it confusing to work with `conf/eslint-recommended.js`, because it's ostensibly just a config and it shouldn't have any effect when not extending from `eslint:recommended`.this commit separates the default configuration into its own file and removes some hardcoded defaults from the source code.	True	
adds templating for lint messages and refactors rules to use it	True	
docs: clarify what eslint-config-eslint is (#9582)	False	
fix: line-comment-position "above" string option now works (fixes #7100) (#7102)	False	
new: noinlineconfig setting (refs eslint/rfcs#22) (#12091)* new: noinlineconfig setting (refs eslint/rfcs#22)* fix typoco-authored-by: kevin partington <platinum.azure@kernelpanicstudios.com>* fix typo in tests* add tests for line comments* add config name	True	
fix: curly removes necessary braces between if and else (fixes #12928) (#12943)	False	
fix: `no-extra-bind` false positive (fixes #5058)	False	
upgrade: bump js-yaml dependency to fix denial of service vulnerability (#11550)	True	
chore: use includes instead of indexof (#14607)	False	
fix: support class syntax for line-around-comment rule (fixes #2894)	True	
docs: small fix in quote-props examples	False	
update: --init to create extensioned files (fixes #4476)	True	
5.15.0	False	
docs: fix the format option name in the document (#13770)	True	
update: custom messages for no-restricted-* (refs #8400)following the precedent set by no-restricted-globals, anywhere you can pass a path string, you can also pass an object with a "name" and "message" key. this custom message will be appended to any error message triggered by an import of the "name" value. custom messages are not supported with patterns.	True	
docs: update gyandeeps and add byk	False	
docs: additional computed-property-spacing documentation (fixes #2941)	False	
chore: improve performance of sourcecode constructor (#8054)when generating a list of tokens and comments, the `sourcecode` constructor previously concatenated the list of tokens and the list of comments, and sorted the result. for a file with `n` tokens and `n` comments, this takes `o(nlog(n))` time. however, since the token and comment lists are already sorted, they can be merged in `o(n)` time.the performance impact of this change is most noticable on large files, since they have a large number of tokens. when linting [test-data.js](https://gist.github.com/mysticatea/2fca6bc8c2194f75e4808a884a1e351a) (48000 lines) with no rules enabled, this improved overall performance by about 20%.	True	
docs: improve grammar and style in comma-dangle.md	False	
new rule: no-sparse-arrays (fixes #499)	False	
update: move methods to sourcecode (fixes #3516)	True	
update: fix eslint indentations (fixes #1770)	False	
update: implement flatconfigarray (refs #13481) (#14321)* update: implement flatconfigarray (refs #13481)* upgrade config-array package* add schemas for linteroptions, processor, plugins* continue implementing config schemas* rulesschema start* add initial finalization step* default config* strict mode* start rule validation* finish flatconfigarray implementation* remove too-new syntax* fix default config* fix test* update tests/lib/config/flat-config-array.jsco-authored-by: brandon mills <btmills@users.noreply.github.com>* update tests/lib/config/flat-config-array.jsco-authored-by: brandon mills <btmills@users.noreply.github.com>* update tests/lib/config/flat-config-array.jsco-authored-by: brandon mills <btmills@users.noreply.github.com>* update tests/lib/config/flat-config-array.jsco-authored-by: brandon mills <btmills@users.noreply.github.com>* update tests* fix test* allow old-style plugin names* fix reportunuseddisabledirectives and add jsdoc* add more tests* address review comments* ignore only .git directory* allow null for global settings* writeable -> writable* remove incorrect comment* validate severity-only rule options* add key to global error message* deeply merge parseroptions and settings* rename defaultresultconfig* normalize and fix rule validations* fix rule options merging* fix various errors* rebase onto masterco-authored-by: brandon mills <btmills@users.noreply.github.com>	True	
update: add source property to lintresult object (fixes #7098) (#7304)* update: add source property to lintresult object (fixes #7098)* update: update docs to add  deprecation notice (fixes #7098)	True	
docs: fix typo in command-line-interface.md	False	
chore: update version parameter name (#12402)	False	
build: package.json and changelog update for 2.7.0	True	
0.24.0	False	
update: improve report location for rest-spread-spacing (refs #12334) (#13313)	True	
fix: missing errors in space-in-parens (fixes #4257, fixes #3996)	False	
fix rule name in config	False	
sponsors: sync readme with website	True	
rename no-new-array rule to no-array-constructor; ref #501	True	
breaking: infer endline and endcolumn from a reported node (fixes #8004) (#8234)previously, rules could specify an endline and endcolumn in a report. however, when a rule reported a node without explicitly giving a location, only the start location of the node was included in the final report object. this commit updates the report-handling logic to ensure that the end location of the node is also included.this is considered a potentially-breaking change because if a rule specifies a very large node to report, the report range will be very large, which could cause a poor user experience in editor integrations (e.g. if hundreds of lines are highlighted).	True	
docs: suggest pushing new commits to a pr instead of amending (#8632)	True	
build: changelog update for 4.0.0-alpha.2	True	
docs: mention benefit of providing `meta.docs.url` (#14774)perhaps the top benefit of rules providing the `meta.docs.url` property with a link to their documentation is that ides / code editors can then provide a helpful link on rule violations. developers often find this link useful to better understand a violation and learn how to fix it.however, many rule authors are unaware of this feature and thus exclude the property because they don't see the value of it.mentioning this feature in eslint's rule documentation should help encourage greater adoption of this property.note that there is also a lint rule to require and autofix this property: https://github.com/not-an-aardvark/eslint-plugin-eslint-plugin/blob/master/docs/rules/require-meta-docs-url.md	True	
docs: update comments section of migrating to v4.0.0 (#8486)* docs: update migrating to v4.0.0 with new comment getters* docs: update migrating to v4.0.0 with new comment event behavior* docs: add note about using getcomments() for backwards compatibility and update shebang section* docs: further clarify migrating to v4.0.0 comment documentation* docs: fix typo in  migrating to v4.0.0	True	
update: add allowemptycatch option to no-empty (fixes #5800)	True	
docs: added documentation for semi rule	True	
fix: `keyword-spacing` false positive in template strings (fixes #5043)	False	
ci: use node 16 for browser test (#15569)	True	
fix: `indent` rule for multi-line objects and arrays (fixes #3236)	True	
fix: no-cond-assign shouldn't throw error when there's a for loop with an empty conditional (fixes #53)	True	
docs: correct a few misspelled words	False	
fix: expected order of jsdoc tags (fixes #9412) (#9451)* chore: add tests to validate the jsdoc tag order (refs #9412)* fix: expected order of jsdoc tags (fixes #9412)* chore: improve code readability (refs #9412)create spelling variable names and remove unecessary if statement.	True	
docs: repair broken links and add migration links. (#9473)	False	
docs: update no-multi-spaces.mdadd notes about adding exceptions for `variabledeclaration`s and `importdeclaration`s.(refs #3216)	True	
update: support multiline and singleline options (fixes #4697)besides default (existing) options, we can specify ???singleline??? and???multiline??? options.	False	
chore: remove sourcecode property from linter (refs #9161) (#9363)	True	
fix: make sure no-path-concat doesn't flag non-concat operations (fixes #776)	False	
2.5.3	False	
add "nofunc" option (fixes #829)this adds a `"nofunc"` option to the `no-use-before-define` rule that allows anamed function definition to be used before the location that it is defined.this change was proposed in #829.	True	
update: add cliengine#getconfigforfile (fixes #1309)	True	
build: include prerelease install info in release blog post (#10463)	False	
fix: yoda rule autofix produces syntax errors with adjacent tokens (#13760)	True	
feat: update max-depth for class static blocks (#15316)updates the `max-depth` rule to treat class static blocks as separate contexts when calculating depth.refs #15016	True	
add rules per environments to config.	True	
chore: remove dead code in excuteonfiles (fixes #6467) (#6466)	False	
fix: space-before-function-parentheses and object methods (fixes #1920)	True	
docs: restore intentional spelling mistake (#10459)this was accidentally removed in #9965.	True	
jslint xml formatter now escapes special characters in the evidence and reason attributes.	True	
fix: `context.getscope()` returns correct scope in blockbindings (fixes #3254)	False	
docs: update link	False	
build: changelog update for 4.2.0	True	
fix: `space-before-keywords` had been wrong on getters (fixes #3854)i made `space-before-keywords` ignoring methods, getters, and setters.	True	
fixing -c config option.this fixes an issue with the -c (--config) option where the specified config file's path would be resolved from the cli.js directory path instead of process execution directory path, causing an error.for example, if the user is in `~/project-dir/` and runs `eslint -c special-config.json lint-me.js`, the cli would try to require `special-config.json` from `~/project-dir/node_modules/eslint/lib/special-config.json` instead of the intended `~/project-dir/special-config.json`.changing `__dirname` to `process.pwd()` resolves the issue.	True	
fix: objectrestspread throws error in key-spacing rule (fixes #4763)	False	
fix: support type annotations in array-bracket-spacing (#7445)* fix: support type annotations in array-bracket-spacing* fix per pr comments* use gettokenbefore	True	
revert: "update: rm rule no-debugger autofix (fixes #10242) (#10425)" (#10426)this reverts commit a6df7e6ba4989b547baad9335a142c8731f6a96d.	True	
docs: update readme team and sponsors	True	
new: `no-tabs` rule (fixes #6079) (#6772)	False	
docs: change a broken link in working-with-rules.md (#12732)	False	
update: fix handling of property names in no-self-assign (#12105)	False	
chore: fix glob for core js files for lint (fixes #6870) (#6872)	True	
fix: dot-notation rule flags non-keyword reserved words (fixes #1102)	False	
changed name of no-arg to no-caller	True	
breaking: plugins envs and config removal (fixes #4782, fixes #4952)	False	
build: package.json and changelog update for 2.10.0	True	
docs: specify 'double' as default for quotes (fixes #4270)	True	
moved /config to /conf	True	
breaking: stop using fake `context._linter` property (fixes #10140) (#10209)this removes a compatibility hack for plugins that monkeypatched `linter` instances from rules with the `context._linter` property.	True	
new: rule to enforce newline after each call in the chain (fixes #4538)added new rule (`newline-per-chained-call`) to enforce each call on a new line when chaining the calls.	True	
update: fix no-extra-parens callexpression#callee false negatives (#12743)	False	
fix: correct order of arguments passed to assert.equal (fixes #945)	True	
fix: prefer-object-spread duplicated comma (fixes #10512, fixes #10532) (#10524)* fix: prefer-object-spread duplicated comma (fixes #10512)* add test for #10532* tweak about parens* upgrade eslint-utils to ignore modified globals	True	
5.14.1	False	
new: added no-process-env rule (fixes #657)	False	
docs: fix 'when not to use' in prefer-named-capture-group (refs #14959) (#14969)	True	
docs: fix code-blocks in spaced-comment docs (#7524)	False	
docs: clarify `no-process-env` docs (fixes #3318)	False	
chore: move internal rules out of lib/ (#9448)this moves project-specific rules out of the `lib/` directory andinto `tools`. this prevents the rules from being included in thepublished npm package, and it also allows the rule files to usedevdependencies without linter errors (since the devdependencies arealways present when running the rules).	True	
chore: upgrade eslump@1.6.2 (#10258)	False	
build: `npm run perf` command should check the exit code (fixes #5279)	False	
fix: indent rule with jsx spread props (#12581)	False	
update: add `consistent` option to `object-curly-newline` (fixes #6488) (#7720)when true, it requires that either both curly braces, or neither, directly enclose newlines.	True	
chore: add extra test, improve docs (#12492)* chore: add extra test, improve docs* chore: update test options	False	
docs: rearrange rules for better categories (and improve rule summaries)	True	
fix: prefer-named-capture-group incorrect locations (fixes #12233) (#12247)	False	
feat: code path analysis for class static blocks (#15282)class static blocks are implicit functions. therefore, they should be treated as separate code paths. this adds `class-static-block` code paths. each `staticblock` node will start a new `class-static-block` code path.refs #15016	True	
update: make `baseconfig` to behave as other config options (fixes #3371)	True	
chore: make executeonfile a pure function in cliengine (#9262)this will make it easier to accumulate results from multiple workers, which needs to happen for https://github.com/eslint/eslint/issues/3565.	True	
fix: `no-invalid-this` allows this in static method (fixes #4669)	False	
docs: add rule comment in prefer-rest-params doc (#13191)	False	
update: add fixer for `no-regex-spaces` (#7113)	True	
docs: add spaced-line-comment deprecation notice	False	
chore: enable additional rules on eslint codebase (#9013)this enables a bunch of rules on the eslint codebase for dogfooding and style consistency. almost all of the rules were already being followed everywhere.	True	
update: switch to use espree (fixes #1595)	True	
change reporters to formatters, add format command line option	True	
docs: use consistent terminology & fix link etc. (#9490)+ terminology: node.js, ecmascript, eslint...+ link: http => https, avoid redirect...	False	
fix: problematic installation issue (fixes #11018) (#12309)* fix: problematic installation issue (fixes #11018)* update espree	False	
fix: do not show ignore messages for default ignored files (fixes #4931)	True	
chore: update debug log name to match filename (#10863)	True	
fix: clarify ast and don't use `node.start`/`node.end` (fixes #8956) (#8984)* fix: don't use `node.start`/`node.end` (refs #8956)* docs: clarify ast (fixes #8956)* docs: fix list style in markdown* fix: make it rising errors* docs: add about `literal#raw` property* fix for review.	True	
upgrade: espree to version 1.8.0	True	
fix: no-unused-vars crash from escope workaround (fixes #2042)	False	
fix: brace-style crash with lone block statements (fixes #7908) (#7909)	False	
7.29.0	False	
docs: clarify suggestion's data in working with rules (refs #12606) (#12617)	False	
chore: add test that deprecated rules display a deprecated notice (#14989)* chore: add tests for check deprecated rule* chore: fix lint and refactor* chore: fix regexp* chore: add space* chore: add blank	True	
new: add option `first` for variabledeclarator in indent (fixes #8976) (#11193)* new: add option `first` for variabledeclarator in indent (fixes #8976)* chore: skip some lines of code for perf* chore: add more tests for indent	True	
build: changelog update for 4.19.1	True	
chore: update readme to pull in reviewer data (#11506)* chore: update readme to pull in reviewer data* fix linting errors* fix markdown lint warnings	True	
docs: add typescript-eslint-parser (#8388) (#8534)* docs: add typescript-eslint-parser* update configuring.md	False	
upgrade: upgrade espree to 3.3.1 (#7253)	True	
fix: config file relative paths (fixes #5164, fixes #5160)	False	
update: `props` option of `no-param-reassign` (fixes #1600)	False	
update: allowfunctionparams option in no-underscore-dangle (fixes 12579) (#13545)* #12579 add allowfunctionparams option* #12579 edit doc & function name* #12579 add test case* #12579 add allowfunctionparam rule in docs* #12579 update : test case when option is false* return to origin code* remove comments* edit what was reviewed* update: destructuring param test* update: invalid test case* change initial state to true* #12579 update: edit what was reviewed* #12579 fix a typo* #12579 update : allow option* #12579 update: edit what was reviewed* #12579 update : check type of param* #12579 simplify the code* update : test case* fix : ...bar -> ..._bar	True	
docs: update --no-ignore warningthe option is `--no-ignore`, while the configuring docs call it `--no-eslintignore`. update the error output and description to match current behavior.	True	
docs: add exponentiation operators to operator-assignment documentation (#13577)	True	
docs: show console call with no-restricted-syntax (fixes #7806) (#9376)	True	
build: add prerelease script	False	
fix: incorrect object-property-newline behavior (fixes #6207) (#6213)syntax that wasn't handled correctly / caused errors to be thrown:- computed keys spanning multiple lines- experimental object spread	True	
docs: fix typo in working with plugins docs (#13683)	False	
docs: note to --fix option for strict rule (#8680)	True	
docs: changing eslint to eslint and add missing backtick	True	
docs: fix home directory config description (fixes #4398)	True	
docs: add more fields to bug report template (#14039)	True	
3.12.2	False	
fix: sort-vars rule fails when memo is undefined (fixes #3474)	True	
breaking: check assignment targets in no-extra-parens (#12490)* update: check assignment targets in no-extra-parens* add todo tests	True	
chore: update stale bot settings (#15173)exempt issues and prs with the accepted label	False	
added tests for regex-spaces, strict, unnecessary-strict; fixed some types in overview/author notes in other tests.	True	
update: for-direction detection false positives/negatives (#11254)	True	
update: add ignorenondeclaration to no-multi-assign rule (fixes #12545) (#14185)* update: add an option to ignore non declaration (refs #12545)* doc: add description of the option (refs #12545)* chore: reflect review comments (refs #12545)* chore: modify the document according to comments???(refs #12545)	True	
fix: incorrect error location for space-in-parens (fixes #4956)	True	
new: add no-unreachable-loop rule (fixes #12381) (#12660)* new: add no-unreachable-loop rule (fixes #12381)* add fallthrough switch test	False	
update: check for default assignment in no-unneeded-ternary (fixes #3232)	True	
sponsors: sync readme with website	True	
docs: no-new-func typo	False	
chore: only instantiate fileentrycache when cache flage set (perf) (#8763)	False	
update: fix multiline binary operator/parentheses indentation (#8719)fixes #8666, fixes #8717, fixes #8710previously, the logic for indenting multiline parenthesized expressions assumed that the indentation of every token in the expression other than the first was dependent on the first token. however, this assumption is not always correct. this led to bugs with multiline parenthesized expressions (#8710). additionally, the binaryexpression listener attempted to account for this assumption by always linking its tokens' indentation to the first token's indentation, even when it didn't make sense to do so. this led to other bugs (#8666, #8717). this commit updates the parenthesis logic to avoid making that assumption and check the indentation of all the tokens properly.	True	
fix: make yieldexpression throwable (fixes #12880) (#12897)	False	
fix: --rulesdir option didn't work (fixes #11888) (#11890)	False	
docs: update 7.0.0 migration guide for consistency (#13267)	True	
sponsors: sync readme with website	True	
update: cache-file accepts a directory. (fixes #4241)	True	
added mocha tests semi.js and wrap-regex.js	False	
chore: rename no-extra-parens methods (#8225)	False	
new: multiple processors support (fixes #11035, fixes #11725) (#11552)* new: multiple processors support (fixes #11035)* improve coverage* trivial fix* improve coverage* improve documentco-authored-by: ilya volodin <ivolodin@gmail.com>* improve documentco-authored-by: ilya volodin <ivolodin@gmail.com>* improve documentco-authored-by: ilya volodin <ivolodin@gmail.com>* improve documentco-authored-by: ilya volodin <ivolodin@gmail.com>* add note that `filtercodeblock` option overrides the default behavior* improve document about code block name* extregexp ??? extensionregexp* processor ??? processorname* share unindent function	True	
build: package.json and changelog update for 3.3.1	True	
update: max-params to only highlight function header (#10815)update the max-params rule to only report the location of the method header. some tools, like nuclide, will otherwise highlight the entire body of the method, which makes the rule visually noisy in practice.test plan:npm test	True	
fix curly brace check when an if statement is the alternate.	False	
chore: add collapsible block for config in issue_template (#8872)	True	
docs: new issue template (fixes #3048)	False	
build: changelog update for 5.5.0	True	
new rule: handle-callback-err (fixes #567)	False	
build: ensure fuzzer tests get run with `npm test` (#9590)	False	
fix: check token before using in no-cond-assign (fixes #11611) (#11619)	True	
docs: remove superfluous section from no-unsafe-negation (#10648)	False	
also output source map when generating bundle	True	
8.8.0	False	
build: changelog update for 4.9.0	True	
sponsors: sync readme with website	True	
chore: update issue template with --eslint-fix flag (#12352)	False	
fix: eol-last allow empty-string to always pass (refs #9534) (#9696)note that there are already tests asserting this behavior, but they aren't actually run in the rules. see https://github.com/eslint/eslint/issues/9534	True	
update: declare es6 collections (map, set, weakmap, weakset) as built-in globals (fixes #1189)	False	
build: changelog update for 8.13.0	True	
update: add enforceforfunctionprototypemethods option to no-extra-parens (#12895)	True	
chore: ensure js files are checked out with lf (#7624)	False	
fix: refactor rulecontext to not modify report locations (fixes #8980) (#8997)this refactors `rulecontext` and updates it to simply pass report locations directly to `linter`, rather than modifying them beforehand. `linter` already contains all the necessary functionality for handling locations, so it's not necessary to duplicate any logic in `rulecontext`. the duplication caused a bug where `linter` was modified and `rulecontext` was not.	True	
fixes #673 allow configuration of @return errors via requirereturn - (fixes #673)	False	
context.report now takes optional locationrules reporting a violation may now pass an optional location objectcontaining the line and column numbers. this should improve thereporting of error locations in general.additionally, the ability to test error line number reporting was addedto the eslint tester.	True	
fix: no-shadow rule duplicating error messages (fixes #2706)	False	
docs: add docs on node.js api (fixes #1247)	False	
update: improve report location for template-tag-spacing (refs #12334) (#13203)* update: improve report location for template-tag-spacing (refs #12334)* change always	True	
breaking: drop supporting node.js 4 (fixes #10052) (#10074)change requirement to `^6.14.0 || ^8.10.0 || >=9.10.0`	True	
update: improve report location for max-len (refs #12334) (#13458)	True	
chore: fix separaterequires tests for one-var rule (#12709)	True	
breaking: don't load ~/.eslintrc when using --config flag (fixes #4881)	False	
build: gensite creates prerelease dirs if needed (#10154)	False	
build: add node 5 to travis build (fixes #4310)	True	
update: deprecate no-catch-shadow (fixes #10466) (#10526)	False	
chore: move comment to make tests more organized (#13707)	True	
docs: add missing single-quote	False	
sponsors: sync readme with website	True	
fix: correct [object object] output of error.data. (#9561)stops error.data from being output as [object object] when the data propertyis an object, such as a rule???s options object, by json-stringifying error.data.	True	
fix: space-infix-ops should ignore type annotations in typescript (#8341)* fix: space-infix-ops should ignore type annotations in typescripttypescript allows type annotations in variable declarations. this commitensures they are skipped over and not considered when checking variabledeclaration nodes.for assigment expression nodes we also check if it has a type annotationand we ensure it is skipped over.* make test fixtures more generic	True	
7.3.0	False	
docs: more accurate yoda-speak (#6497)* more accurate yoda-speak* tightening up the yoda-speak to avoid confusion* remove ellipses	True	
upgrade: upgrade devdeps (#10178)* upgrade: update dev dependencies* upgrade proxyquire* upgrade karma* upgrade mocha* upgrade dateformat* upgrade karma-babel-preprocessor	True	
chore: use consistent badge style (#12825)* chore: use flat-square style github actions badge* chore: update readme.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* chore: making the badges styles consistentco-authored-by: kai cataldo <kai@kaicataldo.com>	False	
docs: add docs for no-implied-eval (refs #562)	True	
update: deprecate personal config (fixes #11914, refs eslint/rfcs#32) (#12426)* update: deprecate personal config (fixes #11914, refs eslint/rfcs#32)* update docs/user-guide/configuring.mdco-authored-by: kevin partington <platinum.azure@kernelpanicstudios.com>* update docs/user-guide/configuring.mdco-authored-by: kevin partington <platinum.azure@kernelpanicstudios.com>* update docs/user-guide/configuring.mdco-authored-by: kai cataldo <7041728+kaicataldo@users.noreply.github.com>* update docs/user-guide/configuring.mdco-authored-by: kai cataldo <7041728+kaicataldo@users.noreply.github.com>* update docs/user-guide/configuring.mdco-authored-by: kai cataldo <7041728+kaicataldo@users.noreply.github.com>* update docs/user-guide/configuring.mdco-authored-by: kai cataldo <7041728+kaicataldo@users.noreply.github.com>* update the deprecation note	True	
docs: update readme team and sponsors	True	
fix: report shorthand method names in complexity rule (fixes #3955)	False	
docs: correct a term in max-len.md (fixes #6637) (#6641)	False	
breaking: update escope (fixes #1642)	False	
fix: check function call arguments in comma-spacing (fixes #1515)	False	
0.6.0	False	
fix: no-fallthrough incorrectly flagged falls through annotations (fixes #1353)	False	
fix: no-mixed-tabs-and-spaces fails with some comments (fixes #4086)	True	
avoid accidentally creating a markdown link	False	
fix: allow linting the empty string from stdin (fixes #9515) (#9517)this fixes an issue where `cli` would treat an empty-string argument asmissing.	False	
fix: pluralize 'line' to 'lines' in max-lines-per-function description (#14115)	True	
build: add codeql (#14729)* build: add codeqlrefs: https://securitylab.github.com/tools/codeql* update codeql-analysis.yml	True	
fix: `consistent-return` checks the last (refs #3530, fixes #3373)	False	
fix: no-fallthrough should work when semis are missing (fixes #1447)	False	
docs: remove .html extensions from links in developer-guide (#7805)	False	
fix: syntax errors created by `object-shorthand` autofix (fixes #7574) (#7575)* fix: syntax errors created by `object-shorthand` autofix (fixes #7574)* add additional tests	True	
fix: make chai and mocha as a dependency (fixes #3156)	False	
docs: mention typescript's compiler check (#12903)* docs: mention typescript's compiler check* update no-dupe-class-members.md	False	
2.5.1	False	
fix: multiple message in tap formatter (fixes #4975)support multiple message in tap formatterthe current implementation only display one message.	True	
update: add `indent` options for array and object literals (fixes #7473) (#7681)* update: add `indent` options for array and object literals (fixes #7473)* fix crash with empty arrays	True	
fix: geterrorresults function to not mutate passed parameter (#11592)* chore: changed geterrorresults to not alter passed `results` parameter* chore: added tests for geterrorresultscheck that geterrorresults doesn't mutate passed argument	True	
docs: update docs for token-related methods (fixes #1878)	True	
sponsors: sync readme with website	True	
docs: add an example for the spread operator to prefer-spread.md (#7802) (#7804)* spread example to the docs for prefer-spread* small whitespace mistake in prefer-spread.md* removed excess whitespace per vitorbal's comment* making whitespace more consistant	True	
docs: add links between rules about whitespace around block curly braces (#15625)	False	
fixes #711: eslint reports wrong line number for files with shebangi also took the liberty of moving the shebang stripping to lib/eslint.jsso it is supported through the api, not just the cli. same test shouldcover both.	True	
breaking: upgrade espree and support new class features (refs #14343) (#14591)* update package.json (temporary)* update ast-utils- `getfunctionnamewithkind(node)` ... supports class fields and privateidentifier. and now it uses property names rather than function namesif named function expressions are methods because the property nameis exposed.- `getfunctionheadloc(node)` ... supports class fields. and now returnsthe range of property names instead of the arrow locations if arrowfunctions are at method places.- `issamereference(l,r)` ... supports `privateidentifier`.* update camelcasethis commit includes a large refactoring.previously, the `identifier` node listener handled all cases bychecking parent node types. but because the `identifier` node has sobroad meanings, it's confusing about what kind of nodes it's handling.now it uses variables and references of `eslint-scope`. and it checksproperties, re-exported identifiers, and labels by detailed esqueries.the property check newly supports class fields and private identifiers.this fixes eslint/eslint#13021 as well.* update accessor-pairs (test-only)* update class-methods-use-this* update computed-property-spacing* update dot-location (test-only)* update dot-notation (test-only)* update func-namesfunction expressions at field initializers have inferred names.therefore the `as-needed` option should not report anonymous functionsat field initializers.* update getter-return (test-only)* update grouped-accessor-pairs (test-only)* update indent* update keyword-spacing* update lines-between-class-members (test-only)* update no-dupe-class-members* update no-extra-semi* update no-invalid-this* update no-multi-assign* update no-proto (test-only)* update no-prototype-builtins (test-only)* update no-restricted-properties (test-only)* update no-self-assign* update no-self-compare (test-only)* update no-setter-return* update no-shadow (test-only)* update no-this-before-super (test-only)* update no-throw-literal (test-only)* update no-undef-init* update no-underscore-dangle* update no-unexpected-multiline (test-only)* update no-unreachable* update no-useless-call (test-only)* update no-useless-computed-key* update no-eval* update operator-assignment (test-only)* update operator-linebreak* update padded-blocks (test-only)* update prefer-exponentiation-operator* update prefer-numeric-literals (test-only)* update prefer-object-spread (test-only)* update prefer-promise-reject-errors (test-only)* update prefer-regex-literals (test-only)* update prefer-spread (test-only)* update quotes* update radix (test-only)* update require-atomic-updates (test-only)* update require-unicode-regexp (test-only)* update semi-spacing* update semi-style* update semi* update space-infix-ops* update strict (test-only)* add more tests to no-unexpected-multiline* fix some tests for 7345747708cbea25f00aee01b2f5fc033e53f19c* fix no-invalid-this* fix no-eval* update eslint-scope* upgrade espree* fix eslint-scope references to parser test* fix: id-denylist* update comments* fix: id-match* fix: id-length* update: id-denylist for class fields* update: id-length* update: id-denylist code and docs* docs: id-denylist* update: id-matchco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>	True	
update: no-self-assign should detect member expression with this (#12279)* update: no-self-assign should detect member expression with this* remove redundant condition	False	
docs: configuration hierarchy for cliengine options (fixes #9526) (#9855)update documentation about configuration hierarchy for cliengine options	True	
update: check computed property keys in no-extra-parens (#11952)	False	
upgrade: eslint-release@2.0.0 (#13271)	False	
fix issues with function in no-unused-vars	False	
chore: run fuzzer along with unit tests (#11404)this commit turns on our existing fuzzer tool to run a small number of iterations when the user runs `npm test`. this is intended to prevent bugs like https://github.com/eslint/eslint/issues/11402 where a rule completely breaks when it encounters a particular syntax, but the author doesn't think to test for that kind of syntax.when there are no fuzzing errors, this adds about 5 seconds to the `npm test` time. (when there are fuzzing errors, it takes more time because the fuzzer does extra work to try to find the minimal config that reproduces the bug.)the fuzzer actually has two modes: "crash" (where it only tries to detect rule crashes), and "autofix" (where it additionally tries to detect cases where a rule's autofixer creates a syntax error). for now, this pr just enables "crash" mode, because i remember "autofix" mode had some false positives (although they might have been fixed due to parser upgrades).	True	
chore: rm unused argument (#10400)	False	
fix: sort-keys ignores destructuring patterns (fixes #6896) (#6899)	True	
fix: no-else-return handles multiple else-if blocks (fixes #3015)	False	
fix: bug in no-extra-bind (fixes #4806)	False	
docs: update governance policy (fixes #6452) (#6522)	False	
docs: grammar fixes in rule descriptions (refs #3038)	False	
new rule: consistent-return (fixes #481)	False	
docs: distinguish examples in rules under variables part 2	False	
fix: display singular/plural version of "line" in message (fixes #4359)	False	
docs: fix misleading info about ruletester column numbers (#9830)	False	
fix: indent rule crash on sparse array with object (fixes #7959) (#7960)	False	
docs: added gruntjs plugin on integrations page	False	
docs: add algolia as sponsor to readme	True	
new rule: no-constant-condition- removed switchstatement discriminant check- removed assignmentexpression with right identifier- fixed copy paste error- added dowhilestatement, forstatementbased on discussion: https://github.com/eslint/eslint/pull/624(fixes #621)	True	
fix: consolidate try/catches to top levels (fixes #5243)this also prevents needing to pass the `callback` to each function,instead letting it be handled within the `prompt` function.	True	
new rule: no-labels (fixes #550)	False	
ci: use node `v16` for verify files (#15364)* ci: use node `v16`* ci: keep using node v12 for browser testwe're still using node 12 to build the site (including demo)	True	
build: changelog update for 6.8.0	True	
ci: remove master branch from ci configs (#15501)	False	
sponsors: sync readme with website	True	
update: make it clear that `space-infix-ops` support `const` (fixes #3299)	False	
docs: add related ternary links (refs #3835)	False	
docs: add michaelficarra as committer	False	
fix: warning behavior for executeontext (fixes #6611) (#6632)	True	
fixing eslint warnings, introducing makefile.js (not yet wired in)	False	
fix: space-after-keywords checks finally of trystatement (fixes #1122)	False	
chore: use messageids in some of the core rules (#9648)* chore: update accessor-pairs to use messageids* chore: convert no-alert report() to new-style* chore: update rules starting with 'a' or 'no-a' to use messageids* chore: update rules starting with 'b' or 'no-b' to use messageids* chore: specify type in no-control-regex.getregexp* chore: update rules starting with 'c' or 'no-c' to use messageids* chore: update rules starting with 'd' or 'no-d' to use messageidsexception: no-duplicate-imports has more-dynamic rule message generation, which i don???t want to tamper with.* chore: update rules starting with 'e' or 'no-e' to use messageids* chore: correct the invalid tests in no-empty-function for use with messageids* chore: fix lint errors* inline functions only used once* update message names as suggested by @platinumazure* fix error* preferable	True	
chore: refactor docs to work with docs.eslint.org (#15744)* chore: refactor docs to work with docs.eslint.org* fix makefile.js* fix copying of files* fix edit links and copying commands	True	
fix: curly `multi` reports single lexical declarations (fixes #11908) (#12513)	False	
fix: throw error when --ignore-path not a file (fixes #10076) (#10205)* fix: throw error when --ignore-path not a file (fixes #10076)* chore: change cli-engine test for readability (fixes #10076)	True	
docs: fix unclear example for no-useless-escape (#7781)	True	
new: add `getphysicalfilename()` method to rule context (fixes #11989) (#14616)* new: add `getphysicalfilename()` method to the rule context object* docs: update* chore: add test* chore: update more instances* chore: apply suggestions* chore: apply suggestions* chore: fix typoco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
fix: no-useless-rename handles experimentalrestproperty (fixes #6284) (#6288)* fix: no-useless-rename handles experimentalrestproperty (fixes #6284)* adding output to tests and changing approach* adding comment explaining the approach* removing unnecessary todo.	True	
chore: replace unnecessary function callbacks with arrow functions (#7795)these cases were not caught when we enabled the `prefer-arrow-callback` rule because they use `this`, but the `this`-binding is unnecessary because these functions are called with the binding of the outer scope.	True	
update: add offsetternaryexpressions option for indent rule (#12556)	True	
fix: improve the doc for no-restricted-modules rule (fixes #9437) (#9495)	True	
breaking: change no-global-strict to global-strict and add "always" option (fixes #989)	True	
breaking: remove json support for .eslintignore (fixes #883)	True	
update: clarifying what changes need to be made in no-mixed-operators (#14765)	True	
update: support .js files for config (fixes #3102)	True	
update: add `ignorecomments` option to `indent` rule (fixes #9018) (#9752)* update: add `ignorecomments` option to `indent` rule (fixes #9018)* chore: added basic tests for block comments	True	
new: provide config.parser via `parsername` on rulecontext (fixes #3670)	False	
sponsors: sync readme with website	True	
chore: added lock files to gitignore (#13015)	True	
upgrade: espree to v1.11.0	True	
ensure mergeconfigs() doesn't thrown an error when keys are missing in base config (fixes #358)	False	
update: pass rule meta to formatters rfc 10 (#11551)* update: pass rule meta to formatters (rfc #10)* fix html formatter & unit tests* update cli unit tests to stub getrules* update working-with-custom-formatters.md* update working-with-custom-formatters.md* pr feedback	True	
fix: isspacebetweentokens() recognizes spaces in jsxtext (fixes #12614) (#12616)* fix: isspacebetween() recognizes spaces in jsxtext (fixes #12614)* apply this fix only for isspacebetweentokens()* move tests to the section for nodes* add tests for isspacebetween()* add tests for reversed order	True	
chore: move ignored-paths, report-translator to lib/util (refs #10559) (#11116)* chore: move lib/ignored-paths to lib/util/ignored-paths* chore: move lib/report-translator to lib/util/report-translator	True	
build: changelog update for 6.7.2	True	
build: changelog update for 7.6.0	True	
fix: radix rule should warn (not throw error) when parseint() is called without arguments (fixes #611)	False	
breaking: remove extra rules from eslint:recommended (fixes #10873) (#11357)only explicitly recommended rules will be exported in eslint:recommended configuration.	False	
breaking: no-dupe-class-members checks some computed keys (fixes #12808) (#12837)* breaking: no-dupe-class-members checks some computed keys (fixes #12808)* fix constructor, add more tests	True	
sponsors: sync readme with website	True	
docs: add fast-eslint-8 to atom integrations (userguide) (#15695)	True	
fix: improve file path resolution (fixes #5314)squashed commits:28b1368252360ce1f5e01831f4a4339dd43a79b3 clean up testsfe805b5aa68f63bde521aeee31af94b7224b0efd further test cleanupc8e45c89d4e4bcf27efbf8106d179d2bde3fa53d pull out and fix path resolution for ignored-paths4647bfcb0794fd1cd299d49071e3cc22df3e095a use process.cwd() at time of constructionfb8f2fab0ddb862ad840117d11468a62dd67a2e3 do not ignore files with `../` as dotfilesba2cf77c483e0098e11c67963317030b064c349e consistently use resolved pathsabe62795cf9ea6f6efa9fa89476e80d9a56da5b5 clean up cli.js tests1a347bb1584258ad47012f38a9725e98f78b7fee deal with relative file pathsf02b1ba5ac9b8204d4d96b7067cf0c0ece3a1525 shim path.isabsolute for node 0.108510d639523675e0e14c51fa7ef09c4910ba166b test for file existence before directory check05ff54994f012269945c5712fd98ca1e1f4b1cf1 use path-is-absolute ponyfill34e9a1571bbe686cca7d3e924f4d4b94f9ec4b0c avoid process.chdir in glob-util testsbaaa07e1671eb8515b0a7fb6c3af3cc2c18701ed force posix style pathsa521d6c7f4e5e29ac612e77948978d5bafc1ae26 update to node-ignore 3.x and address pr commentsfc1f56249592c1a94b123d408f015333d37f9221 update shelljs and glob	True	
fix: allow stdout to drain before exiting (fixes #317)	True	
update: add eslint api (refs eslint/rfcs#40) (#12939)* update: add eslint api* refactor* address feedback* make cliengine instance a private property* validate plugin objects* add test clarifying cliengine extensions behavior* add linttext() tests* add lintfiles() tests* update useddeprecatedrules property* update around loadformatter* fix useddeprecatedrules* fix a bug about addplugin method* improve validation* change constructor options* add erroronunmatchedpattern and etc- remove overrideconfigfile- improve overrideconfig* update bin/eslint.js and cli.js to use eslint class* rewrite tests* fix tests* remove compareresultsbyfilepath* fix tests* fix tests* remove deprecated source property* expose the new eslint class* update nodejs-api.md* fix links* fix links* revert "remove deprecated source property"this reverts commit 8421fb3b401087b7036bedb3057b9f5bb8fbcf79.* add author* fix typoco-authored-by: kai cataldo <kai@kaicataldo.com>* add `lintresult#source` to docs* update docs/developer-guide/nodejs-api.mdco-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update lib/eslint/eslint.jsco-authored-by: kai cataldo <kai@kaicataldo.com>* update lib/eslint/eslint.jsco-authored-by: kai cataldo <kai@kaicataldo.com>* update tests/lib/cli.jsco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* add loadformatter description* add about <text>* fix error message* update docs/developer-guide/nodejs-api.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>* update docs/developer-guide/nodejs-api.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>* update lib/cli-engine/cli-engine.jsco-authored-by: brandon mills <btmills@users.noreply.github.com>* update tests/lib/cli.jsco-authored-by: brandon mills <btmills@users.noreply.github.com>co-authored-by: toru nagashima <public@mysticatea.dev>co-authored-by: nicholas c. zakas <nicholas@nczconsulting.com>co-authored-by: brandon mills <btmills@users.noreply.github.com>	True	
update: add int32hint option to `no-bitwise` rule (fixes #4873)	True	
new: added no-mixed-spaces-and-tabs rule (fixes #1003)new: added no-mixed-spaces-and-tabs rule (fixes #1003)	False	
update docs: explicit cli args are exempt from eslintignore exclusions	False	
7.3.1	False	
docs: clarify the no-unused-vars docs (#11195)* clarify the no-unused-vars docs* tweak wording	False	
update: add `always`/`never` option to `eol-last` (fixes #6938) (#6952)	True	
new: array-bracket-spacing (fixes #2226)	False	
fix: syntax error after `key-spacing` autofix with comment (fixes #7603) (#7607)* fix: syntax error after `key-spacing` autofix with comment (fixes #7603)* add a test for adding spacing with comments	True	
update: avoid requiring nan spaces of indentation (fixes #9083) (#9085)this fixes an issue where the `indent` rule would sometimes expect "nan spaces" of indentation when an `"off"` option was used.	True	
fix: max-lines-per-function flagging arrow iifes (fixes #13332) (#13336)	False	
fix: check for null elements in indent rule (fixes #3272)	True	
docs: fix incorrect reference to "braces" in arrow-parens (#14300)	True	
fix: global block-scope-var check should work (fixes #1980)	False	
update: ensure brace-style validates class bodies (fixes #7608) (#7871)	False	
docs: fix unmatched paren in rule description	False	
fix: remove default parser from cliengine options (fixes #6182) (#6183)* fix: remove default parser from cliengine options (fixes #6182)* fix: ensure correct parser is used (fixes #6182)	False	
new: the `prefer-reflect` rule (fixes #2939)	False	
update: add support for custom preprocessors (fixes #1817)	True	
fix: don't warn about destructured catch params (fixes #2125)	False	
chore: add 3rd party parsers in bug_report template (#13606)* chore: add 3rd party parsers bug_report issue template* edit templates/bug-report.md	False	
build: avoid process leak when generating website (#9217)	False	
added some tests for jscheck object	True	
fixes #429: require spaces around infix operators; enabled by default	True	
update: throw error if whitespace found in plugin name (fixes #6854) (#6960)	False	
1.10.0	False	
update: support separate requires in one-var. (fixes #6175) (#9441)* update: support separate requires in one-var. (fixes #6175)* wip.* fix edge case.* docs: add jscs link	False	
chore: fix makefile call to linter.getrules() (#14932)the `linter` object was removed in v8.0.0, so we need to create aninstance of `linter`.	True	
build: changelog update for 7.17.0	True	
new: no-template-curly-in-string rule (fixes #6186) (#6767)* new: wrong-quotes-for-template-string rule (fixes #6186)* review fixes* rename wrong-quotes-for-template-string to no-template-curly-in-string* simplify regex* update error message* use const instead of var* update docs	True	
fix: capitalized-comments fatal error fixed (fixes #7663) (#7664)	False	
build: changelog update for 6.0.0	True	
update: simplify variable declarator indent handling (fixes #8785) (#8801)this fixes the `indent` rule's variabledeclarator logic to correctly handle the case where a declaration has more than one declarator, but neither is on the same line as the start of the declaration.this also updates the variable declarator listener to be slightly more similar to the logic for other nodes. previously, variable declarators were treated as a special case and handling them involved overwriting some of the previously-declared offsets while exiting the node. unfortunately, declarators are still a special case, but their logic isn't quite as different now -- the correct behavior is applied when entering the node, like it is for other node types.	True	
fix: ! negates .eslintignore patterns (fixes #1093)	False	
docs: update pull request steps (fixes #6474) (#6510)	False	
docs: fix grammar mistake in no-caller docs (#11623)	False	
rule: default-case (fixes #787)	False	
fix: revert freezing context object (refs #4495)	False	
fix: make radix rule warn on invalid second parameter (fixes #563)	False	
fixed rule name	False	
docs: fix typo in no-ex-assign documentation	False	
build: update eslint bot messages (fixes #4497)	False	
sponsors: sync readme with website	True	
update: one-var: enable let & const (fixes #2301)previously, there was no way to configure this rule to allow `var` `let`and `const` to be declared in the same function scope.this changes the rule to treat `let` and `const` declarations as blockscoped, and allows each of the three variable declaration types to beconfigured separately.	True	
update: validate void operator in no-constant-condition (fixes #5726) (#6837)	True	
fixes #496: lint ignored files when explicitly specified via the cli	False	
chore: create report translators lazily (#9221)	True	
build: include links to rule pages in release blogpost (#7671)	True	
sponsors: sync readme with website	True	
increased test coverage for `complexity` rule.created a test case that increased the `complexity` test coverage to 100%.	True	
sponsors: sync readme with website	True	
docs: fix typo in max-len ignorepattern example. (#9956)	False	
fix: capitalized-comments: ignore consec. comments if first is invalid (#7835)* fix: capitalized-comments: ignore consec. comments if first is invalidonly applies when `ignoreconsecutivecomments` option is enabled.* adding "never" test case.* docs: fix documentation for consecutive comments* docs: clarify examples	True	
docs: clarify that we only support stage 4 proposals (#7845)* docs: clarify that we only support stage 4 proposals* docs: removing noise.* docs: adding back link to contribution guidelineslink was accidentally removed in previous commit* docs: adding missing right paren	True	
update: ignore eslint comments in lines-arount-comment (fixes #4345) (#8155)* update: ignore eslint comments in lines-around-comment (fixes #4345)* refactor regexp into utils* added tests for custom ignore pattern and disabled default pattern.* update docs* use regexp instead of string for default comments ignore pattern* falls through pattern only applies to line-comment-position* rename option name to applydefaultignorepatterns* missing output	True	
5.11.1	False	
update docs related to running unit tests	True	
0.5.0	False	
5.6.1	False	
build: changelog update for 7.3.0	True	
fix: `eslinttester` path in exposed api (fixes #3149)	False	
fix: init error in extending recommended config (fixes #12707) (#12738)* fix: error in extending recommended config (fixes #12707)* change to push* add test cases* add test case* fix typo, add test case* change to put eslint:recommended at the beginning.	True	
test: add integration tests with built-in configs (#15612)* test: add integration tests with built-in configs* clarify test* fix comment	False	
new: add only to ruletester (refs eslint/rfcs#73) (#14677)* new: add only to ruletester (refs eslint/rfcs#73)* fix variable name typoco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* clarify executable nameco-authored-by: ??????????????? <weiran.zsd@outlook.com>* use this in static accessor for consistencyco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* remove unnecessary spyco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: ??????????????? <weiran.zsd@outlook.com>	True	
fix: dot-location errors with parenthesized objects (fixes #11868) (#11933)	False	
fix: no-extra-boolean-cast invalid autofix for boolean() without args (#12076)* fix: no-extra-boolean-cast invalid autofix for boolean() without args* add test cases* prevent removal of comments	True	
update: remove suggestion if it didn't provide a fix (fixes #13723) (#13772)	False	
fix: indent rule should recognize single line statements with asi (fixes #3001, fixes #3000)	False	
fixes a typo and a broken link in the documentation	False	
ignored files are excluded unless --force is passed on the cliignored files are reported with a warningupdates logic of formatters to treat non-fatal messages about non-existent rules as warnings.updates cli documentation	True	
build: update markdownlint dependency (fixes #3954)	False	
new: `space-before-keywords` rule (fixes #1631)	True	
fix: a test failure on windows (fixes #3968)	False	
change from astw to estraverse	True	
fix: no-param-reassign parameter in ternary operator (fixes #11236) (#11239)	True	
updated contribution guidelines	False	
sponsors: sync readme with website	True	
make sure no-empty also checks for ';;'	True	
rule: do not use constructor for wrapper objects	True	
docs: fix emphasis	False	
docs: clarified how plugin rules look in plugin configs (fixes #6346) (#6351)	False	
update: add fixer for `prefer-numeric-literals` (#7205)	True	
fix: allow html formatter to handle no meta data (#11566)	True	
breaking: merges keyword spacing rules (fixes #3869)also refs #1338, fixes #3878, fixes #4006, fixes #4585.this commit creates a new rule: `keyword-spacing` (merged from`space-after-keywords`, `space-before-keywords`, and`space-return-throw-case`).- `keyword-spacing` rule ignores usage of spacing at some places to notconflict other spacing rules.- `keyword-spacing` rule has `"overrides"` option to configure morepreference.	True	
docs: use eslint-env in no-undef (fixes #3616)	False	
fix: property regex flag checking (fixes #1537)	False	
fix: do not strip underscores in camelcase allow (fixes #11000) (#11001)* fix: do not strip underscores before checking against allow (fixes #11000)* code review comment - test added	True	
build: add version numbers to docs (fixes #1170)	True	
build: changelog update for 4.6.0	True	
upgrade: puppeteer to 7.1.0 (#14122)	True	
docs: typo in generator-star	True	
docs: add prettier to faq (#10222)	True	
change to eslinttester.addruletest (fixes #417)	True	
update: add support for semicolon in comma-first setup in indent rule  (fixes #3423)	True	
fix: allowing u flag in regex to properly lint no-empty-character-class (fixes #2679)	True	
sponsors: sync readme with website	True	
docs: `...` is not an operator (#11232)* docs: `...` is not an operatorthe `...` in function call syntax is not an operator. it's more of a punctuation supported in various places (function call, function definition, array/object definitions, destructuring syntax), but specific to those. it does not produce a value like actual operators do.i'd appreciate it if we can avoid spreading (no pun intended) this misconception.while "spread argument" isn't an official term either, there is none (https://www.ecma-international.org/ecma-262/9.0/index.html#sec-argument-lists), it's probably the closest reasonable term.happy for alternative suggestions though, or to hear the reasons why this shouldn't be corrected.* use "spread syntax"	True	
chore: remove lodash (#14287)* chore: update table to ^6.0.9* chore: remove lodash.lastlodash.last(array)  ->  array[array.length - 1]* chore: remove lodash.getv = lodash.get(a, "b.c")  ->  if (a && a.b && a.b.c) v = a.b.c* chore: remove lodash.nooplodash.noop  ->  () => {}* chore: remove lodash.unionhttps://exploringjs.com/impatient-js/ch_sets.html#union-a-b* chore: remove lodash.intersectionhttps://exploringjs.com/impatient-js/ch_sets.html#intersection-a-b* chore: remove lodash.findlastlodash.findlast(array)  ->  [...array].reverse().find(_ =>_)* chore: remove lodash.oversome* chore: remove lodash.isplainobject* chore: remove lodash.isstringlodash.isstring(str)  ->  typeof str === "string";* chore: remove lodash.range* chore: remove lodash.sortedlastindexhttps://www.30secondsofcode.org/js/s/sorted-last-index* chore: remove lodash.sortedindexbyhttps://www.30secondsofcode.org/js/s/sorted-index-by* chore: remove lodash.samplehttps://www.30secondsofcode.org/js/s/sample* chore: remove lodash.flatmap* chore: remove lodash.flatten* chore: remove lodash.template* chore: remove lodash.escaperegexpadd the escape-string-regexp package* chore: remove lodash.isequaladd the fast-deep-equal package* chore: remove lodash.mergeadd the deep-extend package* chore: remove lodash.clonedeepadd the clone package* chore: remove lodash.omitadd the omit package* chore: remove lodash.upperfirstadd the upper-case-first package* chore: remove lodash.memoizeadd the fast-memoize package* chore: remove lodash.mapvaluesadd the map-values package* chore: remove lodash.flatten* chore: remove lodash* chore: replace arrays.flat()* chore: replace clone with rfdc* chore: add comment about map-values* chore: remove omit dependency* chore: remove rfdc dependency* chore: remove upper-case-first dependency* chore: remove fast-memoize dependency* chore: apply suggestions in lib/linter/node-event-generator.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* chore: add tests for uppercasefirst* chore: remove map-values dependency* chore: apply review suggestions* chore: upgrade deep-extend to ^0.6.0* chore: replace deep-extend dependency with lodash.merge* chore: apply review suggestion* chore: simplify search code* chore: apply review suggestionsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
fix: `arrow-parens` supports type annotations (fixes #7406) (#7436)	False	
fix: trailing spaces auto fix to check for line breaks (fixes #3940)	True	
fix: lost code in autofixing (refs #6233) (#6234)	True	
update: let `no-restricted-properties` check destructuring (fixes #7147) (#7151)	False	
add check between rules doc and index (fixes #865)	False	
fix: don't warn for member expression functions (fixes #2402)	True	
sponsors: sync readme with website	True	
rule: no proto	True	
update: make the `prefer-template` fixer unescape quotes (fixes #7330) (#7334)	False	
chore: make sourcecodefixer accept text instead of a sourcecode instance (#9178)	True	
fix: update all-files-ignored.txt message to be less confusing (#11075)	True	
sponsors: sync readme with website	True	
fix: extend the autofix range in comma-dangle to ensure the last element (#15669)fixes #15660	True	
fix: check extra scope in no-use-before-define (fixes #2372)	True	
update: add "none" option to operator-linebreak rule (fixes #2295)this option disallows line breaks on either side of an operator.	True	
docs: typo fix 'and' -> 'any' (#6326)	False	
sponsors: sync readme with website	True	
fix: object spread throws error in key-spacing rule. (fixes #5724)	False	
sponsors: sync readme with website	True	
docs: added "the native web" to the list of companies that use eslint.	True	
breaking: new `no-empty-function` rule (fixes #5161)and i removed `methods` option from `no-empty` rule. it's replaced withnew `no-empty-function` rule.	False	
fix: allow inline comments in newline-after-var rule (fixes #2229)previously, the newline-after-var rule relied on a regex pattern toinspect the whitespace following a variable declaration. this resultedin a warning when an inline comment followed a variable declaration.* switch to token-based inspection of line numbers* simplify error message for both "always" and "never" cases* shortcut rule if no next token exists* use `variabledeclaration` instead of `variabledeclaration:exit`* add additional tests for updated behavior	True	
docs: add links to team members profile	True	
update: allowing inline comments to disable eslint rules (fixes #3472)	True	
adds escaperegexp and fixes documentation	False	
fix: popular style init handles missing package.json keys (refs #5243)	True	
docs: add backbone plugin link	False	
new: `lines-around-directive` rule (fixes #6069) (#6998)	False	
update: add autofix support for spaced-comment (fixes #4969, fixes #5030)	True	
chore: remove undocumented `linter#rules` property (refs #9161) (#11335)this removes the undocumented `rules` property from `linter` instances, as part of the effort to remove undocumented api surface from `linter` (also see https://github.com/eslint/eslint/issues/9161). config processing now exclusively uses `linter`'s public api when defining rules. as a side-effect, the rule map utility in `lib/rules.js` no longer needs to access the filesystem, so we can remove the odd code generation logic from the browserify build.	True	
fix: load .eslintrc in $home only if no other .eslintrc is found (fixes #2279)	False	
fix api double emit on comment nodes (fixes #876)	False	
update: add fixer for no-extra-parens (fixes #6944) (#6950)	True	
update: allowafterthis option in no-underscore-dangle (fixes #3435)	False	
breaking: make `radix` rule stricter (#12608)* update: make `radix` rule stricter* style: remove extra blank line* update message, more tests* variable name & exponential notation test* test `10.0`* add tests `1` `2` `36`	False	
update: refactor handle-callback-err to improve performance (fixes #2841)	True	
2.11.1	False	
update: configuration for classes in space-before-blocks (fixes #4089)	True	
docs: mention yeoman generator in dev setup (fixes #914)	True	
better documentation for the `no-plusplus` rule.	True	
fix: no-extra-parens expressionstatement restricted prods (fixes #4902)	False	
new: `no-duplicate-imports` rule (fixes #3478)	False	
chore: remove leftover jsdoc from lint-result-cache (#14176)	True	
chore: add breaking/core change link to issue templates (#13344)	True	
update: implement auto fix for `no-trailing-spaces` rule (fixes #3723)	True	
docs: add gitter chat link to reporting bugs (#6430)	True	
docs: remove superfluous object option sample code (#10652)	False	
docs: mark object-shorthand as fixable. (#6485)	False	
new: add eslint#getrulesmetaforresults() (refs #13654) (#14716)* new: add eslint#getrulesmetaforresults() (refs #13654)* update docs* update docs/developer-guide/nodejs-api.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>co-authored-by: brandon mills <btmills@users.noreply.github.com>	True	
build: changelog update for 5.11.0	True	
added documentation for `curly` rule	True	
update: add module tests to no-extra-semi (fixes #4915)	True	
fix: `no-unused-vars` had been crashed at `/*global $foo*/` (fixes #3714)	False	
fix: indent rule error on empty block body (fixes #2999)	False	
fix: don't throw error for arguments (fixes #1759)	True	
0.8.2	False	
docs: fix missing word in sentence (#12361)	False	
update: improves the prefer-object-spread rule by removing extraneous visitors (#10351)**what is the purpose of this pull request? (put an "x" next to item)**[ ] documentation update[ ] bug fix ([template](https://raw.githubusercontent.com/eslint/eslint/master/templates/bug-report.md))[ ] new rule ([template](https://raw.githubusercontent.com/eslint/eslint/master/templates/rule-proposal.md))[x] changes an existing rule ([template](https://raw.githubusercontent.com/eslint/eslint/master/templates/rule-change-proposal.md))[ ] add autofixing to a rule[ ] add a cli option[ ] add something to the core[ ] other, please explain:<!--if the item you've checked above has a template, please paste the template questions below and answer them. (if this pull request is addressing an issue, you can just paste a link to the issue here instead.)--><!--please ensure your pull request is ready:- read the pull request guide (https://eslint.org/docs/developer-guide/contributing/pull-requests)- include tests for this change- update documentation for this change (if appropriate)--><!--the following is required for all pull requests:-->**what changes did you make? (give an overview)**- includes a change to stop warning if the if the file is importing `object`.- uses `context.getscope()` to determine is `object` is being overwritten, instead of visiting every assignment and variable declaration node.- adds more tests**is there anything you'd like reviewers to focus on?**there may be a better way to get module and scope information, not sure ????cc. @ljharb @ilyavolodin	True	
build: package.json and changelog update for 3.9.0	True	
docs: replace global true and false with writable and readonly in rules (#11956)	False	
docs: update example for memberexpression option of indent (fixes #9056) (#9057)updated the example for the memberexpression option of the indent ruleto not include the comment and code about permitting any indentation invariable declarations and assignments.	True	
docs: fix typo in array-bracket-newline.md (#9269)fix typo	False	
docs: typo in space-infix-ops docs  (#15754)* fix: typo in space-infix-docs* fix: fix type error in space-infix-ops	False	
docs: correct the no-confusing-arrow docs	False	
fix: do not autofix octal escape sequence (fixes #10031) (#10240)* fix: do not autofix octal escape sequence (fixes #10031)* chore: simplify regex and add tests (fixes #10031)* chore: add test for \0 escape (fixes #10031)* chore: one more \0 test (fixes #10031)* fix: autofix \0 literals (fixes #10031)	True	
docs: moving documentation out of the repository and modifying build scripts	True	
docs: update various rules docs	False	
update: add fixer for `no-useless-computed-key` (#7207)	True	
updating no-undef patch (see pull request #164)1. move predefined globals to ```conf/environments.json```2. move mixin() to ```lib/util.js```	True	
breaking: make require('eslint').linter non-enumerable (fixes #9270) (#9692)	False	
build: changelog update for 5.15.0	True	
fix: allow single line else-if (fixes #1739)	False	
docs: update readme faqs	False	
docs: clarify options descriptions (fixes #8875) (#9060)	False	
docs: fix eqeqeq isnullcheck comment	False	
upgrade: espree to 1.7.1 (fixes #1706)	True	
chore: fix typos (#13960)	False	
chore: fix misleading comment in ruletester (#8995)the `ruletester` api exposes a `run` method, not an `add` method.	False	
update: allow `func-names` to recognize inferred es6 names (fixes #7235) (#7244)	True	
build: changelog update for 7.8.1	True	
fix: warn constant on rhs of || in no-constant-condition (fixes #11181) (#11253)* fix: handling of string literals on the right side of logical or (fixes #11181)* fix: handling of string literals on the right side of logical or (fixes #11181)	False	
new: add max-classes-per-file rule (#10163)	False	
revert "update: add jsx exceptions to no-extra-parens (fixes #4229)"	True	
fix: `spaced-comment` allows a mix of markers and exceptions (fixes #2895)	False	
docs: use string rule severity in cli examples (#15253)	False	
docs: fix curly multi-or-nest examples with comments (refs #12972) (#13151)	False	
fix: don't use path.extname with undefined value (fixes #5678)in the current versions of node path.* can be called on any arbitraryvalue and will return an empty string on invalid input.as of node v6 path will assert that values passed to it are strings,and as such will throw on `undefined`this commit moved the logic of using `path.extname` inside of theprocesstext  function in `lib/cli-engine.js`. so that it will not call`path.extname` if a filename is not passed.this change should not affect any other parts of the system, and thetest suite is 100% working on node v4, v5, and master.fixes #5678	True	
chore: enable exceptrange option in the yoda rule (#12857)	False	
sponsors: sync readme with website	True	
fixes #743: wrap-regex rule warns on regex used in dynamic member access	False	
breaking: add rules to recommended (fixes #8865) (#10158)* breaking: add for-direction & getter-return to recommended* recommended: true* docs: add rules to recommend.* docs: rm deprecated notes.	True	
docs: rename `result` -> `foo` (#11210)	False	
docs: fix example in no-negated-condition.md (fixes #3908)	False	
fix: `valid-jsdoc` test does not recognize aliases for `@param` (fixes #3399)	True	
update: `space-before-function-paren` supports async/await (refs #7101) (#7180)	True	
update: fix parenthesized ternary expression indentation (fixes #8637) (#8649)this updates the `indent` logic to correctly handle cases where the last two clauses of a ternary expression are on the same line.	True	
fix: ensure globalreturn isn't on when node:false (fixes #1995)	False	
fixing unittests and finishing code	False	
fix: global-require no longer warns if require is shadowed (fixes #4812)	False	
fix: no-unused-vars ignorerestsiblings check assignments (fixes #14163) (#14264)* fix: check assignment reference in no-unused-vars (fixes #14163)* rename variables* add example	False	
fix: no-useless-return stack overflow on unreachable loops (fixes #7583) (#7584)	False	
docs: improve rule details for `no-console` (fixes #14793) (#14901)	True	
build: fix race condition in demo (#8827)(fixes https://github.com/eslint/eslint.github.io/issues/363)since 3ec436eeed0b0271e2ed0d0cb22e4246eb15f137 was committed, the demo at http://eslint.org/demo has occasionally failed to load properly -- see https://github.com/eslint/eslint.github.io/issues/363 for more details. it appears that the issue was caused by a change to the build process in that commit which involved placing two browserified modules in the same bundle file. based on https://github.com/eslint/eslint/pull/8465#discussion_r117091971 this was changed in order to pass the tests in karma, but the tests seem to pass without the change.i'm not exactly sure what the root cause of the issue is. it only occurs when an unrelated file is loaded by requirejs after the eslint bundle, and that unrelated load files. my best guess at the moment is that requirejs was only able to infer the module name of the eslint bundle correctly when it contained a single anonymous module. when it contained two anonymous modules, requirejs couldn't infer their names, so it threw an error if there were no more modules to load after that. depending on the state of the browser cache and the network, there would only sometimes be another module left to load after loading the eslint bundle, so this led to seemingly random errors in the demo.	True	
docs: add link to new atom linter (fixes #1125)	True	
docs: update headings of rules under removed (refs #5774) (#6102)	False	
fix: yoda range exceptions with this (fixes #2063)	False	
chore: fix typos in test option assertions (#8305)some properties of rule tests contained typos, so the tests were not asserting what we thought they were. this commit updates the tests to fix the typos.	True	
8.0.0	False	
update: add "variables" option to no-use-before-define (fixes #7111) (#7948)* update: add "variables" option to no-use-before-define (fixes #7111)* clarify the default behavior	True	
build: fix npm run perf failing(fixes #10577) (#10607)	False	
docs: amend rule document to correct and complete it (refs #6251). (#9498)	True	
new: `no-useless-concat` rule (fixes #3506)	False	
fix: unicode-bom fixer insert bom in appropriate location (fixes #8083) (#8084)* fix: unicode-bom fixer insert bom in appropriate location (fixes #8083)* fix: unicode-bom fixer insert bom in appropriate location. add test (refs #8083)	False	
removing nasty leading underscores	False	
update: support multiline /*eslint-env*/ directives (fixes #14652) (#14660)* fix: linter ignores multiline /*eslint-env*/ directives (fixes #14652)* update lib/linter/linter.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* chore: add more testsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	False	
build: unblock build by increasing code coverage	False	
fix: ignore super in no-undef (refs #1968)	False	
upgrade: @babel/polyfill => core-js v3 (#11833)???? as of babel 7.4.0, this package has been deprecated in favor of directly including core-js/stable (to polyfill ecmascript features) and regenerator-runtime/runtime (needed to use transpiled generator functions):	True	
chore: error => typeerror (#9390)* chore: error => typeerror* chore: parse error => syntaxerror.	False	
chore: add ecmaversion 13 to types.js (#15163)	True	
fix: comma-spacing and comma-style to work with array literals (fixes #1492)	True	
fix: no-undef-init should ignore const (fixes #4284)	False	
fixing issue #675. incorrect triggering of no-else-return rule.	False	
docs: clarify generator-star-spacing config example (fixes #8027) (#8034)	True	
docs: mention variables defined in a global comment (fixes #3137)	False	
increased test coverage for junit formatter.added a test case to bring test coverage of the junit formatter up to 100%.	True	
fix: "key-spacing" crashes eslint on object literal shorthand properties  (fixes #3463)	False	
update: add ignorerestsiblings option to no-unused-vars (#7968)update: no-unused-vars to account for rest property omissionsupdate docsupdate: use restproperty and only check last propertytemptemptempuse parent type	True	
fix: extra paren check around object arrow bodies (fixes #5789)	False	
add build task to check for missing docs and tests for rules	True	
fix: set null to property ruleid when fatal is true (fixes #4722)	True	
chore: enable computed-property-spacing on eslint codebase (#8760)	False	
update: added generators option to func-names (fixes #9511) (#10697)	True	
fix: `constructor-super` false positive after a loop (fixes #5394)when checking whether a call of `super()` exists in every previous codepath, if there is a looped path, it went to wrong `false` value.	True	
sponsors: sync readme with website	True	
fix: no-implied-eval false positive on 'settimeoutfoo' (fixes #7821) (#7836)	False	
fix: ignore aligning single line in key-spacing (fixes #11414) (#12652)* fix: ignore aligning single line in key-spacing (fixes #11414)* add test cases* add tests for protect against regressions	True	
docs: add rule config above each example in jsx-quotes	False	
build: performance perf to not ignore jshint file (refs #3765)	True	
new: the `prefer-spread` rule (fixes #2946)	False	
docs: update link to documentation	True	
chore: move logic for handling missing rules to rules.js (#9235)	True	
document no-array-constructor rule	True	
chore: update index and `meta` for `"eslint:recommended"` (refs #6403) (#6539)	True	
update: fix `let` logic in for-in and for-of loops in no-extra-parens (#14011)	True	
4.0.0	False	
fix: `no-empty-function` crash (fixes #5227)	False	
7.0.0-alpha.2	False	
fix: space-after-keyword shouldn't allow newlines (fixes #3198)	False	
new: no-loss-of-precision (fixes #11279) (#12747)* created rule and test files* working rules and tests* working for decimals and scientific notation* check all digits match instead of just most precise* created rule and test files* working rules and tests* working for decimals and scientific notation* check all digits match instead of just most precise* expanded rule to non-base ten numbers* added docs and updated config files* update docs/rules/no-loss-of-precision.mdco-authored-by: teddy katz <teddy.katz@gmail.com>* update lib/rules/no-loss-of-precision.jsco-authored-by: teddy katz <teddy.katz@gmail.com>* removed rule from recommended* renamed functions; fixed function description* update lib/rules/no-loss-of-precision.jsco-authored-by: teddy katz <teddy.katz@gmail.com>* removed always-true conditional* removed rule from recommended* fixing octal cases* working with octals* changed isnotbaseten to isbaseten* simplify isbaseten test* added regression tests* additional regression testco-authored-by: teddy katz <teddy.katz@gmail.com>	True	
fix: exempt \0 from no-octal-escape (fixes #1923)	False	
update: more detailed assert message for rule-tester (#9769)* update: more detailed assert message for rule-tester* [squash]add try/finally block* [squash]append message instead of overwriting it* [squash]add parentheses surrounding error message	True	
docs: update readme team and sponsors	True	
docs: fix typo in issue-templates/new-rule (#11149)	False	
chore: first es6 refactoring (refs #6407) (#6570)first steps in taking advantage of es6 features:1. remove es6-map dependency (no longer needed)2. use babelify to create browser bundle3. refactor a couple files into es6 classes	True	
3.3.0	False	
docs: incorrect syntax in the example for rule ??one-var??	True	
update: fix `no-useless-escape` false negative in regexes (fixes #7424) (#7425)* update: fix `no-useless-escape` false negative in regexes (fixes #7424)* fix existing linting errors in the codebase* handle regexes with flags correctly* move range-dash checking into its own function* remove useless escapes in lib/* / is only a valid escape outside of character classes* fix uselessly-escaped slashes in the codebase* don't create unnecessary arrays when parsing regexps* \b only needs to be escaped outside of character classes* \^ only needs to be escaped at the start of a character class	True	
chore: use object-shorthand batch 3 (refs #6407) (#6914)	False	
sponsors: sync readme with website	True	
new: allow passing a function as `fix` option (fixes #8039) (#8730)* new: allow passing a function as `fix` option (fixes #8039)* pass fix in options, instead of separate arg* simplify conditional logic* return source code if shouldfix is falsethis way, the code that uses this doesn???t need to necessarily checkthe value of `fixed`.* clarify that fixeswereapplied is always true hereif we???ve gotten to this point, at least one fix will have been applied.* add a test to ensure that fix functions are puremeaning, that they cannot access the `this` value of sourcecodefixer.* add test with conditional shouldfixthis is to verify that the problem can be used to return true or falseconditionally, and that eslint will only apply fixes when true isreturned.* account for options not being providedthis is to account for https://github.com/eslint/eslint/pull/8809	True	
update: no-trailing-spaces false negatives after comments (fixes #12479) (#12480)	False	
a little bit of cleanup	False	
upgrade: mock-fs (#8070)	False	
update: add enforceforindexof option to use-isnan (fixes #12207) (#12379)* update: add enforceforindexof option to use-isnan (fixes #12207)* remove array prototype from a sentence and fix newlines in docs	True	
sponsors: sync readme with website	True	
fix: ignore unknown nodes for indent rule (fixes #8440) (#8504)* fix: ignore unknown nodes for indent rule (fixes #8440)* refactor logic to only ignore lines of outermost unknown nodes- remove extra traversal of ast- create list of outermost unknown nodes- ignore lines of outermost unknown nodes only* refactor known nodes and clean up comments- convert known_nodes into set- add awaitexpression to list of known_nodes- update comments to clarify logic* refactor- do not store unknown nodes in array- ignore unknown node on estraverse exit of node- if offset dependency is outside of unknown node then ignore line- small fixups* refactor dependent line logic- only handle dependent lines when the first dependency is withinthe unknown node- start from the first dependency when calculating the last tokendependency- add an if statement to ensure the first token of a dependentline does not equal the last token dependency- change if statement in node listener to only branch when the nodeis unknown- move finding last dependency check to its own function- update and add more jsdoc comments* refactor - remove the need to traverse all token dependencies- update getdesiredindent function to use the first token of theline's offset when there is dependency- remove the need to traverse all token depencies inside of anunknown node* fix how we get tokens of line* refactor variable declarator* fix code style for arrow function* use new ignore logic on each token on unknown node- add tests for variable declarator with unknown node- use new logic for ignoring nodes* remove modification to getdesiredindent- fix tests- do not use first token of line to get desired indent of tokenwithout dependnecy* fix code style of getdesiredindent to match original	True	
fix: workaround for leading and trailing comments in padded-block (fixes #2336 and fixes #2788)	True	
fix: no-shadow rule should consider function expressions (fixes #1322)	False	
fix: brace-style to not warn about curly mix ifstatements (fixes #1739)	True	
0.22.1	False	
add docs for rule	True	
fix: useless bind call in cli-engine (fixes #1181)	False	
chore: enable no-multiple-empty-lines on eslint codebase (#8694)(refs https://github.com/eslint/eslint/pull/8679#discussion_r120498302)	False	
update: implement eqeqeq option "allow-null" (fixes #910)	False	
fix: reduced `no-loop-func` false positive (fixes #5044)	False	
4.0.0-alpha.2	False	
fix: support for memberexpression with function body. (#7400)	True	
rename test for smartereqeqeq.js to smarter-eqeqeq.jskeeping test file name inline with rule name and rule filename.	True	
fix: non object rule options merge (fixes #3179)	False	
fix: directory ignoring should work (fixes #3812)	True	
fix: `semi` to check for do-while loops (fixes #4090)	True	
fix: make memberexpression option opt-in (fixes #6797) (#6798)the `memberexpression` option should be opt-in as it is a breakingchange.	False	
breaking: remove extra check in getscope (fixes #10246, fixes #10247) (#10252)* breaking: remove extra check in getscope (fixes #10246, fixes #10247)* update documentation* remove trailing spaces for markdown-lint	True	
build: force prerelease peer dep for node 16 in ci (#14933)* build: force prerelease peer dep for node 16 in ciseveral dev dependencies have a peer dependency on the local eslint.prereleases don't satisfy regular version range constraints, so the newpeer dependency resolution algorithm in node 16 rejects `v8.0.0-beta.0`as a valid peer dependency. until we're done with prereleases, we canuse the `--force` flag to force npm to accept that the prereleasesatisfies the peer dependency.* add todo comment to remove node 16 --force branching	True	
sponsors: sync readme with website	True	
new: add support for configs in plugins (fixes #3659)	True	
breaking: convert ruletester to es6 class (refs #8231) (#8263)this converts ruletester to an es6 class. this will not break clients that were using ruletester as documented, but it could break clients that are relying on undocumented behavior in ruletester (e.g. enumerable methods).	True	
fix: check output file isn't dir, fix tests (fixes #1034)	False	
fix: arrow functions need wrapping (fixes #2113)	False	
build: remove commit check from appveyor (fixes #6292) (#6294)	False	
update: allow jsx exception in no-inline-comments (fixes #11270) (#12388)	False	
fix: getter-return reporting method named 'get' (fixes #8919) (#9004)	False	
replaces .some() with .indexof() where appropriate	True	
docs: prepare for rule doc linting (refs #2271)squashed commits:* 4f9db2a82c1dfb72342dd64f56ebfc8c0e34d111 - remove js info string from blocks requiring modules* edc6edfb08ea0ed2e9f6e8668a3d3d89f80df0c5 - specify '/*eslint-env es6*/' as appropriate* d3372e6da9e3b183c7b08f83f612c1ca0a4e1f95 - return js info string to rules which require non-strict mode* df83b86b0dd6d285b7c8d4d76b76fd1401d22019 - cleanup failing rule examples	True	
fix: no-mixed-spaces-and-tabs (fixes #4189, fixes #4190)ignore comments and template literals	False	
bump code coverage verification to 95% across the board	True	
update: add `ignoredestructuring` option to `id-match` rule (#10554)	True	
docs: remove reference to deleted rule (#7942)`space-after-keywords` appears as deleted in the docs and it's confusing to reference it.	True	
fix: find ignore file only in cwd (fixes #5087)	False	
fix: max-len properly ignore trailing comments (fixes #11838) (#11841)	False	
build: changelog update for 6.4.0	True	
chore: remove `esprima-fb` dependency. (#10171)	False	
docs: add fatal to node.js api lintmessage type (#14251)* docs: add fatal to node.js api lintmessage type* docs: lintmessage.fatal is an optional propertyco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
fix: max-statements-per-line rule to force minimum to be 1 (fixes #7051) (#7092)	True	
fix: operator-assignment addition is non-commutative (fixes#1556)	True	
update: `comma-dangle` supports trailing function commas (refs #7101) (#7181)	False	
build: package.json and changelog update for 2.9.0	True	
fix: remove temporary `"allow-null"` (fixes #3705)	False	
build: don't check commit count (fixes #5935) (#6263)	False	
update package.json	True	
updated rule messaging and added extra tests	False	
allow arrays to be passed as multiple args to rule	True	
build: changelog update for 6.6.0	True	
chore: upgrade eslint-plugin-eslint-plugin@1.0.0 (#9234)	False	
docs: btmills is a reviewer	False	
build: changelog update for 7.0.0-alpha.0	True	
update: clean up tests for cli config support (refs #2543)	True	
new: lines-around-comment (fixes #1344)	False	
update: improve report location no-irregular-whitespace (refs #12334) (#13462)	False	
build: tag correct commit (refs #1606)	False	
chore: update release script for new website repo (#12006)	True	
exit with non-zero status when tests fail (fixes #858)	False	
docs: updated contribution guidelines	False	
docs: fix a broken link (#14697)	False	
chore: remove extra space in blogpost template (#9088)chore: remove extra space in blogpost template	False	
fix: getscope and no-use-before-define for arrow functions (fixes #1895)there were two problems here. first, `no-use-before-define` wasn'tcalling `findvariables` for `arrowfunctionexpression`s. second,`getscope()` skipped `arrowfunctionexpression` nodes when looking forthe appropriate parent node.	True	
sponsors: sync readme with website	True	
docs: make rule descriptions more consistent	False	
new: add ability to time individual rules (fixes #1437)	True	
rename no-exc-assign to no-ex-assign and add to config	True	
drying cli tests and improving code coverage	False	
new: arrow-body-style rule (fixes #4109)	False	
chore: upgrade mocha to 8.3.2 (#14278)	True	
chore: remove configops.normalize in favor of configops.getruleseverity (#9224)	False	
8.0.0-beta.0	False	
new: add support for root: true in config files (fixes #2736)	True	
fix: newbasepath should be an absolute path (fixes #12850) (#13078)* fix: newbasepath should be an absolute path (fixes #12850)* review feedback* pr feeedback, add comments to test	True	
fix: improving optionator configuration for --print-config (#7206)	True	
new: config files with extensions (fixes #4045, fixes #4263)	False	
docs: add supported ecmascript version to readme (#12290)	True	
fixed trailing comma	False	
new: jest environment (fixes #3212)	False	
build: add node 8 on travis (#8669)	False	
update: add fixer for `no-unneeded-ternary` (#7540)* update: add fixer for `no-unneeded-ternary`* only do a true/false fix if node.test is guaranteed to be a boolean* handle cases like `foo ? false : true`* fix misleading comment* replace non-booleans with !!(expression)* don't add unnecessary parens around expressions	True	
fix: skip computed members in `newline-per-chained-call` (fixes #5245)	False	
add build step to check rule consistency	True	
fix: preserve formatting when rules are removed from disable directives (#15081)	True	
feat: report class evaluation tdz errors in no-use-before-define (#15134)	True	
fix: recognize all line terminators in func-call-spacing (fixes #7923) (#7924)	True	
update: camelcase rule now doesn't flag function calls (fixes #656)	False	
update: ignore negative ranges in fixes (#8133)	False	
chore: update pull request template (refs eslint/tsc-meetings#20) (#7359)	False	
3.18.0	False	
fix: no-useless-return stack overflow on loops after throw (fixes #7855) (#7856)	False	
fix: use default assertion messages (fixes #6532) (#6615)	False	
new: add init command (fixes #2302)	False	
new: ignorepatterns in config files (refs eslint/rfcs#22) (#12274)* new: ignorepatterns in config files (refs eslint/rfcs#22)* move ignoredpaths tests to cli-engine.js* add more tests* update document* fix test problem* add more tests* fix npm run perf* fix problem when the base path was the root* update tests/lib/cli-engine/cli-engine.jsco-authored-by: kevin partington <platinum.azure@kernelpanicstudios.com>* update lib/cli-engine/config-array/ignore-pattern.jsco-authored-by: kevin partington <platinum.azure@kernelpanicstudios.com>* ?????? eslint-plugin-jsdoc* add description* update tests/lib/cli-engine/cli-engine.jsco-authored-by: kevin partington <platinum.azure@kernelpanicstudios.com>	True	
fix: `prefer-const` false negative about `eslintused` (fixes #5837) (#6971)	False	
sponsors: sync readme with website	True	
6.2.2	False	
fix: `object-curly-spacing` shows the incorrect column for opening brace (fixes #3438)	True	
moved to tabs, added comments, a few more tests	True	
upgrade: optionator to 0.4.0 (fixes #885)	True	
0.2.0-dev	False	
docs: add jshint w047 compat to no-floating-decimal (#11861)this eslint rule handles both leading and trailing decimal points.in order to ease discovery of this eslint rule, mention the latterwarning as well, as users might only find those in their code.https://github.com/jshint/jshint/blob/7993101/src/style.js#l100-l116	True	
docs: improve documentation for rule contexts (#9272)	True	
build: changelog update for 5.15.2	True	
5.0.1	False	
fix: lint issue with `valid-jsdoc` rule (refs #5188)	False	
fixing style issues discovered while npm testing	False	
fix: show custom message for namespace import (fixes #11580) (#11791)	True	
fix: handle-callback-err missing arrow functions (fixes #2823)	False	
build: package.json update for eslint-config-eslint release	True	
2.0.0-beta.1	False	
update no-empty for compatibility with esprima@1.0.4 (fixes #290)	True	
fix: prefer-destructuring invalid autofix with computed property access (#13704)* fix: prefer-destructuring invalid autofix with computed property access* clarify --fix in the docs	True	
docs: clarify that bot message is automatic	True	
fix: cache file error handling on read-only file system. (fixes #11945) (#11946)	False	
docs: autogenerated changelog for v2.0.0-rc.1	True	
update: improve location for no-mixed-spaces-and-tabs (refs #12334) (#13365)	True	
build: changelog update for 5.15.3	True	
remove: experimental match() method	False	
document optional filename and default it to '<input>'.adds test for new default filename value.	True	
chore: remove commented test for html formatter (#9532)this commit removes a test that has been commented out for 2 years and doesn't appear to work.	True	
verify that file paths exist before reading the file	True	
fix: avoid adding globals when an env is used with `false` (fixes #9202) (#9203)* fix: avoid adding globals when an env is used with `false` (fixes #9202)this fixes a regression introduced in f005e2467edda78a6654c4717aa23e99b3289131 (merged as part of 60c51486849c3765ac21fb63e615db2c56b614fd) where globals would get added to environments even when the env was set to `false` in a config file.* add no-catch-shadow test	True	
update: add `allowunboundthis` to `prefer-arrow-callback` (fixes #4668)	True	
fix: no-implicit-coercion should not fix ~. (fixes #7272) (#7289)* fix: no-implicit-coercion should not fix ~. fixes #7272* reuse the same report function	False	
fix: allow named recursive functions (fixes #6616) (#6667)	False	
docs: fix links to custom parsers doc (#12965)the documentation for custom parsers was extracted from the main"working with plugins" documentation to its own page in #10431.	True	
chore: use meta.messages in some rules (1/4) (#10764)* new: consistent-meta-messages rule* chore: use messageid in rule for-direction* chore: use messageid in rule no-magic-numbers* chore: use messageid in rule func-call-spacing* chore: use messageid in rule func-name-matching* chore: use messageid in rule func-names* chore: use messageid in rule func-style* chore: use messageid in rule function-paren-newline* chore: use messageid in rule generator-star-spacing* chore: use messageid in rule getter-return* chore: separate messages for i18n* chore: fix linting errors* chore: temporally disable consistent-meta-messages* chore: accept review suggestions	True	
fix: indent rule errors if an array literal starts a new statement (fixes #3328)	False	
fix: no-mixed-spaces-and-tabs with comments and templates (fixes #4077)	False	
new: support enhanced parsers (fixes #6974) (#6975)	False	
fix: prefer-destructuring privateidentifier false positive (refs #14857) (#14897)	False	
fix: one-var autofixing for export (fixes #13834) (#13891)* fix: one-var autofixing for export (fixes #13834)* chore: added export placement for adjacent tokens	True	
update: disallow multiple options in comma-dangle schema (fixes #13165) (#13166)	False	
build: display rules??? meta data in their docs (fixes #5774) (#8127)	False	
0.4.3	False	
fix: allow comment before comma for comma-spacing rule (fixes #2408)	True	
docs: readme updates to reflect jscs compat project is finished (#11568)* docs: readme updates to reflect jscs compat project is finished* docs: emphasize that jscs is unsupported	True	
new: adding support for "// eslint-disable-line rule" style comments	True	
docs: describe how to feature-detect scopemanager/visitorkeys support (#9764)	True	
update: skip keyword check for fns in space-before-blocks (fixes #13553) (#13712)	True	
fix: arrow-parens no reporting for comments inside (fixes #12995) (#13312)* fix: no reportin for comments inside (fixes #12995)* update: handled some cases for comments in parens* chore: added some more tests* chore: removed unnecessary blanklines* update: added docs example and function refactor* update: changed hascomment checks* update: refactore and docs update* docs: added docs example	True	
fix: `no-fallthrough` empty case with comment (fixes #5799)	False	
upgrade: esprima to 1.2 (fixes #842)	True	
docs: minor fixes in no-new-func	False	
build: use node 8 in appveyor (#9595)	False	
chore: add v8-compile-cache to speed up instantiation time (#11921)* chore: add v8-compile-cache to speed up instantiation timev8-compile-cache attaches a require hook to use v8's code cache to speed up instantiation time.the "code cache" is the work of parsing and compiling done by v8.	True	
docs: fixed example for the space-return-throw-case ruleinstead of having two "non-warning" examples for the return keyword, the last one changed, to include the case keyword and to match the last "warning" example.	True	
docs: issue message when more info is needed	False	
3.2.2	False	
build: fix failing tests on master (#10890)this updates some failing tests to account for an error message change in the `ajv` dependency.	True	
upgrade: eslint-visitor-keys@2.0.0 (#13732)	True	
chore: refactor calculating range and loc in no-useless-escape (#13964)	True	
docs: fix a typo in array-bracket-spacing documentation (#7667)	False	
breaking: rewrite indent (fixes #1801, #3737, #3845, #6007, ...16 more) (#7618)* update: rewrite `indent` (fixes #1801, #3737, #3845, #6007, ...16 more)fixes https://github.com/eslint/eslint/issues/1801, fixes https://github.com/eslint/eslint/issues/3737, fixes https://github.com/eslint/eslint/issues/3845, fixes https://github.com/eslint/eslint/issues/6007, fixes https://github.com/eslint/eslint/issues/6571, fixes https://github.com/eslint/eslint/issues/6670, fixes https://github.com/eslint/eslint/issues/6813, fixes https://github.com/eslint/eslint/issues/7242, fixes https://github.com/eslint/eslint/issues/7274, fixes https://github.com/eslint/eslint/issues/7320, fixes https://github.com/eslint/eslint/issues/7420, fixes https://github.com/eslint/eslint/issues/7522, fixes https://github.com/eslint/eslint/issues/7616, fixes https://github.com/eslint/eslint/issues/7641, fixes https://github.com/eslint/eslint/issues/7662, fixes https://github.com/eslint/eslint/issues/7771, fixes https://github.com/eslint/eslint/issues/7892, fixes https://github.com/eslint/eslint/issues/8011, fixes https://github.com/eslint/eslint/issues/8038, fixes https://github.com/eslint/eslint/issues/8144the existing implementation of `indent` had a lot of bugs (see above list). it worked by detecting a node type (e.g. `objectexpression`), and then ensuring that the indentation around the object satisfies certain constraints (e.g. the properties of the `objectexpression` are offset by 4 spaces from the opening bracket). this approach had a number of disadvantages:- since it only checked indentation according to an explicit list of patterns, there were a lot of cases where it accidentally didn't check the indentation at all. for example, there was no check for the indentation of a closing `)` in a `callexpression`, so the rule just silently ignored incorrect indentation in these cases. (https://github.com/eslint/eslint/issues/7522)- there were a lot of nodes where indentation wasn't checked at all. for example, it didn't check indentation for ternary expressions (https://github.com/eslint/eslint/issues/7420) or destructuring assignments (https://github.com/eslint/eslint/issues/6813).- since it could only check indent patterns on nodes, it couldn't check the indentation of comments (https://github.com/eslint/eslint/issues/3845, https://github.com/eslint/eslint/issues/6571) or optional tokens such as parentheses around an expression (https://github.com/eslint/eslint/issues/7522)this commit rewrites the `indent` rule. the new strategy is based on tokens rather than nodes:1. create a hashmap (`offsetstorage#desiredoffsets`). the keys are all the tokens and comments in the file, and the values are objects containing information for a specific offset, measured in indent levels, from a either a specific token or the first column. for example, an element in an array will have `{offset: 1, from: openingcurly}` to indicate that it is offset by one indentation level from the opening curly brace. all the offsets are initialized to 0 at the start.1. as the ast is traversed, modify the offsets of tokens accordingly. for example, when entering a `blockstatement`, offset all of the tokens in the `blockstatement` by 1 from the opening curly brace of the `blockstatement`.1. after traversing the ast, calculate the expected indentation levels of every token in the file (according to the `desiredoffsets` map).1. for each token, compare the expected indentation to the actual indentation in the file, and report the token if the two values are not equal.this has the following advantages:- it is guaranteed to check the indentation of every single token in the file, with the exception of some tokens that are explicitly ignored*. this ensures that no tokens end up unexpectedly being ignored.- since tokens/comments are used instead of nodes, there are no unchecked "stray tokens".- all nodes are evaluated in a context-free manner. in other words, each node only has to set an offset for its own children, without worrying about what how much indentation the node itself has or what the node's parents are.- the rule ends up with an expected indentation map for the entire file at once, and so it can fix the entire file in one pass. (the previous implementation often required multiple passes. for example, if a node was misaligned with its parent in the previous implementation, the node would get fixed, even if the node's position was actually correct and the parent was off.)*there are a few cases where the new implementation explicitly ignores lines. i decided to do this because there is a huge amount of inconsistency in what people seem to prefer for these cases. in the future, we might want to stop ignoring these cases so that the indentation of all lines is checked. one such case is:```js({foo:bar});// versus({foo:bar});```comments are treated a bit differently from tokens in that they can have several different indentations. this is because it can be difficult to tell what the comment is referring to. for example:```jsif (foo) {dosomething();// comment about the dosomething() call} else if (bar.baz()) {dosomethingelse();}// versusif (foo) {dosomething();// comment about the bar.baz() call} else if (bar.baz()) {dosomethingelse();}```specifically, a comment is allowed to have one of three indentations:1. the same indentation as the token right before it1. the same indentation as the token right after it1. the computed indentation for the comment itself* ensure reported range has endline and endcolumn* use objects instead of weakmaps to improve performance* update the big explanation comment at the top of the file* fix variable capitalization* remove unneeded ifstatement logic* remove unused equality check* add test for else without block* fix single-line statements with semicolon-first style	True	
docs: writing mistake	False	
docs: update pr templates for formatting (#7128)	True	
fix: `space-before-keywords` fails to handle some cases (fixes #3756)	True	
build: package.json and changelog update for 3.6.0	True	
fix: dot-notation false positive with private identifier (refs #14857) (#14898)* fix: dot-notation false positive with private identifier (refs #14857)* add example in docs	False	
docs: trimmed rules h1s to just be rule names (#15514)* docs: trimmed rules h1s to just be rule names* adjusted makefile unit test* standardized backticks a bit	True	
warn on finding a bitwise shift operator (fixes #170)	True	
fix: added property onlydeclaration to id-match rule (fixes #3488)	True	
fix error about iife if the function is in a new	False	
docs: minor tweaks to working with rules page (#9824)	True	
chore: use object-shorthand batch 2 (refs #6407) (#6897)	False	
fix:`newline-per-chained-call` should only warn on methods (fixes #5289)	False	
chore: replace deprecated calls to context - batch 2 (refs #6029) (#6049)	True	
update: add a fixer for `dot-location` (#7186)	True	
chore: avoid modifying global state when tests fail (#10201)this updates the tests for config-initializer to always restore `process.cwd()` back to its original location if an assertion fails. previously, the cwd would end up incorrect if one of the assertions failed, so a large number of other tests would also fail at the same time due to the incorrect cwd.	True	
docs: add list of known integrations	False	
update: add fixer for no-extra-label (#7840)	True	
chore: deactivate consistent-docs-url in internal rules folder (#9815)	False	
adding jsdoc comments for tap format helper functions	True	
docs: move ruletester documentation to node.js api page (#9273)	True	
new: `func-name-matching` rule (fixes #6065) (#7063)	False	
rule: unnecessary-strictthe `unnecessary-strict` rule flags the use of the `"use strict";` directive when already in strict mode."use strict";(function () {"use strict";var foo = true;}());see http://jslinterrors.com/unnecessary-use-strict/	False	
sponsors: sync readme with website	True	
fix: don't crash when $home isn't set (fixes #1465)	False	
0.5.1	False	
fix: quotes false positive with backtick option in method names (#8327)this commit updates the `quotes` rule to not report quoted class method names when the backtick option is enabled, because backticks are not allowed as non-computed class method names.	True	
feat: update no-lone-blocks for class static blocks (#15295)updates the `no-lone-blocks` rule to report lone blocks at the top level of class static blocks.refs #15016	True	
docs: adds an example with try/catch. (#9672)* docs: adds an example with try/catch.clarifies with an example that `return await` inside an error handler is allowed by this rule.* update no-return-await.md	False	
fix: padding-line-between-statements crash on semicolons after blocks (#8748)(fixes #8839)	False	
fix: avoid `__dirname` for built-in configs (#15616)load eslint:recommended and eslint:all configs via require instead file paths.fixes: #15575	True	
adding support for .eslintignore and .jshintignore (closes #484)	True	
docs: added examples for arrow-body-style (refs #5498) (#6242)	True	
chore: use native `object.assign` (refs #6407) (#6832)	False	
docs: use more common spelling (#11417)	False	
catch fatal parsing errors	False	
build: changelog update for 5.14.1	True	
fix: jsdoc parsing by updating doctrine (fixes #1442)	False	
add positive test case for <object>.array	True	
sponsors: sync readme with website	True	
new: add dot-location rule. (fixes #1884)	False	
docs: update docs for no-iterator (fixes #3405)	True	
update: fix memberexpression handling in no-extra-parens (fixes #9156)	False	
fix: vars-on-top now accepts exported variables (fixes #5711)	True	
docs: remove test coverage badge (#10407)temporaryly removed the badge, since it has being disabled for a long time.sorry for not following the template. :(	True	
chore: add additional tests for bin/eslint.js (#7290)	True	
add rules for leading/trailing decimal points	True	
docs: update docs/rules/no-plusplus.mdused correct format when using options	True	
docs: set recommended true for no-global-assign (fixes #8215) (#8218)	True	
update: add shadowed variable loc to message in no-shadow (fixes #13646) (#13841)* update: show the original identifier place (refs #13646)* update: show message when the variable is global (refs #13646)* update: fix code according to review.	True	
fix: no-dupe-args sparse array crash (fixes #2848)	False	
docs: add guidelines for patch release communication (fixes #7277) (#8823)this updates the release documentation to describe how to use release issues to communicate releases to the team.	True	
new: add no-new-symbol rule (fixes #4862)	False	
new: protractor environment (fixes #3457)adds in missing protractor variables as defined [here](https://github.com/angular/protractor/blob/e996a90644a7d2966636dd718e279fb9dc8753f9/lib/runner.js#l152-l166).	True	
update: add fixer for no-floating-decimal (fixes #7070) (#7081)	True	
build: changelog update for 5.8.0	True	
docs: remove line about removing rules from semver policy (#9367)with the new [rule deprecation policy](https://eslint.org/docs/user-guide/rule-deprecation), we don't remove rules even in major releases.	False	
sponsors: sync readme with website	True	
fix: `no-useless-constructor` rule crashes sometimes (fixes #5290)	True	
fix: add test for a syntax error (fixes #6013) (#6378)this syntax error came to be raised since acorn 3.2.0.this syntax error prevents a false positive of `no-undef` rule.	True	
update: `requirestringliterals` option for `valid-typeof` (fixes #6698) (#6923)	True	
docs: switch incorrect example with correct one (#11107)it looks like we always show the incorrect example first, so the fact that in this example we want to show the correct code first might be on purpose, but it does not look like it is	True	
fix: no-restricted-syntax - correct the schema (#12051)	False	
update: space-before-blocks ignore after switch colons (fixes #15082) (#15093)* update: space-before-blocks ignore after switch colons (fixes #15082)* remove extra space in docs	True	
breaking: change default ignore pattern (refs eslint/rfcs#51) (#12888)	False	
breaking: description in directive comments (refs eslint/rfcs#33) (#12699)* breaking: description in directive comments (refs eslint/rfcs#33)* update docs/user-guide/configuring.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/configuring.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/configuring.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/configuring.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/configuring.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update tests/lib/linter/linter.jsco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/configuring.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update configuring.mdco-authored-by: kai cataldo <kai@kaicataldo.com>	False	
new: experimental support for css auron (fixes #765)	True	
#586 added no-unreachable jsdoc, documentation note on hoisting case	False	
chore: update @eslint/eslintrc to avoid different versions of `js-yaml` (#15265)	True	
update: indent `from` tokens in import statements (fixes #8438) (#8466)* update: indent `from` tokens in import statements (fixes #8438)* handle exports consistently with imports* clarify comment about `export from`	True	
update: add never option for new-parens (refs #10034) (#11379)* update: add never option for new-parens (fixes #10034)* docs: fix eslint comment in new-parens never example* chore: add tests for new-parens explicit always and never with arguments* chore: adjust wording and naming of new-parens unnecessary message	True	
upgrade: consuming handlebars@^4.0.0 (fixes #3632)	False	
added script to auto-generate changelog	True	
update: make no-lone-blocks report blocks in switch cases (fixes #8047) (#8062)	False	
update: grouping related cli options. (fixes #3612)	False	
fix: valid-jsdoc correctly checks type union (fixes #5260)correctly checks type union when it is a property of type application	False	
fix: block-scoped-var reports labels (fixes #1630)	False	
fix: inconsistent off-by-one errors with column numbers (fixes #3231)	False	
fix: allow semi as braceless body of statements (fixes #6386) (#6391)	False	
fix: make eslint-config-eslint work (fixes #4145)	False	
fixes #371: add no-shadow-restricted-names rule	False	
docs: clarify --rule description (fixes #2773)	False	
fix: one-var exception for forstatement.init (fixes #2505)	True	
breaking: automatically validate rule options (fixes #2595)	True	
upgrade: `chalk` to 2.x release (#9115)	True	
build: enable space-after-keywords (fixes #884)	False	
fix: padded-blocks autofix problems with comments (#8149)* fix: padded-blocks autofix problems with comments* more edge cases	True	
implemented local default config filewith this change, if `eslint` is run without specifying a config file,a search will be performed for an `eslint.json` config file.the search will begin in the current working directory, and recurseupwards until the filesystem root is reached.if no `eslist.json` file is found, then the default `eslint.json` in theeslint application directory will be used.	True	
feat: treat class/new expressions as truthy in no-constant-condition (#15326)	False	
fix: no-magic-numbers: variable declarations (fixes #4192)	False	
chore: optimizes adding linter methods (fixes #9000) (#9007)	False	
fix: no-else-return false positive for ifs in single-statement position (#8338)fixing errors from no-else-return requires splitting a single statement into two statements. this means that there is no reasonable fix for the errors when the if statement is in a position where only a single statement is allowed, so the rule should not report this case.	True	
docs: don???t use undocumented array-style configuration for max-len (#9690)	True	
upgrade: doctrine@0.7.1 (fixes #4545)	False	
0.6.1	False	
check that the return statement has an argument before checking its type	True	
fix: `no-shadow` allows shadowing in the tdz (fixes #2568)	False	
fix: cliengine#getrules() contains plugin rules (fixes #11871) (#11872)	False	
fix: glob processing (fixes #11940) (#11986)	False	
chore: use `output: null` to assert that a test case is not autofixed. (#8960)	True	
fix: parser merge sequence in config (fixes #6158) (#6160)	False	
build: changelog update for 6.0.0-alpha.0	True	
docs: create docs landing page (#10453)the main purpose of this landing page is to allow users to view "https://eslint.org/docs", which currently is http 404 on our site.as a secondary benefit, this would also allow the landing page to be used as the launching point for algolia's docsearch crawler.	True	
update: allow autoconfiguration for jsx code (fixes #5511)	True	
add jshint as missing dependency	False	
only support space characters for repetitions	True	
docs: separate parser and config questions in issue template	False	
sponsors: sync readme with website	True	
fix: id-length rule incorrectly firing on member access (fixes #6475) (#7365)	False	
docs: add missing quotes (#10162)	False	
update: make --init run js config files through linter (fixes #9947) (#11337)	False	
fix: config merge to correctly account for extends (fixes #8193) (#8636)	True	
fix: never ignore config comment options (fixes #2725)	False	
0.17.0	False	
added more tests no-empty	False	
docs: update rule deprecation policy (fixes #8635) (#9033)	False	
simplify fix for #442	True	
fix: stop linebreak-style from crashing (fixes #2490)	True	
new: added eol-last rule (fixes #996)	False	
fix: add object and function as exceptions in new-cap (refs #1487)	False	
fix: no-extra-bind no autofix if arg may have side effect (fixes #10846) (#10918)	True	
7.21.0	False	
update: using @override does not require @param or @returns (fixes #3629)	False	
new: object-shorthand rule (refs: #1617)	False	
build: changelog update for 8.0.0-beta.2	True	
chore: lint bin/eslint.js (#7243)	False	
fix: prevent crash on empty blocks in no-else-return (fixes #1527)	False	
update: no-eval to also warn on settimeout and setinterval (fixes #721)	True	
docs: update pr creation bot message (fixes #5268)	False	
new: the `no-implicit-coercion` rule (fixes #1621)	False	
fix: indent check for else keyword with stroustrup style (fixes #5218)	True	
5.6.0	False	
docs: update cla link in contributing docs (#8883)replacing old url redirect with the new js foundation url	False	
updated changelog	False	
fix: typo in error message when running npm (#9866)	False	
docs: add webpack loader to the docs/integrations page	True	
chore: make shelljs a devdependency instead of a dependency (#8608)the shelljs module is quite large, and we only use it for a few simple operations that can easily be replaced with standard library functions. this commit makes shelljs a devdevdependency instead.	True	
fix loading rules from a rules directorythis fixes an issue where trying to load rules from the command line would fail because the load path was relative to `/lib` rather than the directory of the eslint process.	True	
fix: no-useless-constructor crash on bodyless constructor (fixes #13830) (#13842)	True	
docs: add clarification about `eslint-enable` (#15680)* docs: add clarification about eslint-enable rule:fixes #15662* update docs/user-guide/configuring/rules.md* update docs/user-guide/configuring/rules.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	False	
docs: add class fields in func-names documentation (refs #14857) (#14908)	False	
chore: add metadata to existing rules - batch 6 (refs #5417) (#5966)chore: add metadata to existing rules - batch 6 of 7 (refs #5417)	True	
update: `func-name-matching`: add ???namematches??? option (fixes #7391) (#7428)	False	
docs: shorten and simplify autocomment for new issues	True	
docs: reference eslint-config-eslint to avoid potential for staleness (#14805)	True	
fixing spelling	False	
fix: `arrow-spacing` allow multi-spaces and line-endings (fixes #3079)	False	
updated titles on all rule documentation (fixes #348)	False	
docs: no-console#when-not-to-use provides incorrect rule snippet (#11093)current selector results in a warning for `console.log()` instead of `console.foobar()`. the 'unexpectd property' should be  selected with `!=`also, turning off "no-console" is still required to achieve "only receiving errors for console calls with unexpected property"add missing "no-console: off" for `when not to use it` snippet	True	
chore: fix misleading comment in configcache.js (#8799)in a previous iteration of the glob config implementation, the configcache class was not exported from its module. however, now it is exported. this commit removes an outdated comment that stated the opposite.	False	
fix: include name of invalid config in validation messages (fixes #8963) (#8973)previously, if an eslint configuration was invalid, the error message would not contain the filename of the offending config. instead, the error message contained `[object object]`, which was probably a bug. this commit updates the error message to clearly indicate which config file contains the error.	True	
docs: add link to awesome-eslint in integrations page (#7090)	True	
fix: sort fixes consistently even if they overlap (fixes #6124) (#6133)	True	
sponsors: sync readme with website	True	
fix: don't warn about parens around yield (fixes #1981)	False	
build: package.json and changelog update for 3.7.0	True	
docs: add subheader in configuring/configuring-rules (#10686)	False	
5.0.0-alpha.1	False	
fix: add additional iife exception in no-extra-parens (fixes #1004)	False	
chore: remove `lib/init` from eslint config (#15748)	False	
update: add new-cap exception configurations. (fixes #1487)- `newcapsallowed`- `nonnewcapsallowed`	False	
fix: add "error" to the "new-cap" rule exceptions (fixes #2098)	True	
remove warning about eslint being in alpha	False	
feat: update class-methods-use-this for class static blocks (#15298)updates the `class-methods-use-this` rule to account for class static blocks.this only fixes false negatives where use of `this` in a class static block mistakenly counts as used `this` in the enclosing context.the rule still correctly does not require that class static blocks use `this`.refs #15016	True	
update: report backtick loc in no-unexpected-multiline (refs #12334) (#13142)	False	
0.9.2	False	
update: flag nested block with declaration as error (#12193)	False	
docs: clarify when not to use space-before-blocksthis rule in `"always"` mode is incompatibale with the rule `space-after-keywords` set to `"never"` in the case of `else` statements.`space-after-keywords` `"never"` requires `} else{` which is an error for `space-before-blocks` `"always"`.users should at least be aware of this interplay between the rules.	True	
sponsors: sync readme with website	True	
add :after events for comments	True	
docs: update no-multi-assign explanation (#12615)* docs: update no-multi-assign explanationupdate description to explain "unexpected results". also update examples to include es6 syntax.* update no-multi-assign.mdrephrased by @kaicataldo.	True	
renaming no-new-wrappers rule and adding tests	False	
fix: env is rewritten by modules (fixes #4814)	False	
docs: fix grammar in ???those who says??? (#11390)changed ???those who says??? to ???those who say???.	True	
add `quote-props` rulecloses #17.	False	
docs: add information about reporting security issues (#10889)	True	
build: cleanup for code coverage (fixes #4983)	True	
fix: comma-style accounts for parens in array (fixes #6006) (#6038)	True	
new: object-curly-spacing (fixes #2225)	False	
fix: support comma-first style in key-spacing (fixes #3877)	False	
experimental support for jake as a build system (fixes #151)	True	
rule: max-statementscreated `max-statements` rule, which allows you to specify the maximum number of statement in a function. statements in inner functions do not count toward the statement count of the outer function.```js// max-statements: [1, 2]  // maximum of 2 statements.function foo() {var bar = 1;var baz = 2;var qux = 3; // too many.}```this rule matches jshint's **maxstatements** rule.	True	
breaking: migrate from minimatch to node-ignore (fixes #2365)	True	
breaking: support @scope shorthand in plugins (fixes #9903) (#9905)	False	
docs: disallow use of the comma operator using no-restricted-syntax (#9585)* docs: disallow use of the comma operator using no-restricted-syntax* update no-sequences.md* fix typo.* update no-sequences.md	True	
chore: using deconstruction assignment for shelljs (#10974)	True	
fix: `key-spacing.align` doesn't pay attention to non-whitespace before key (fixes #3267)	True	
fix: check destructuring for "no-shadow-restricted-names" (fixes #10467) (#10470)* fix: check destructing for "no-shadow-restricted-names" (fixes #10467)* fix: object destructing for "no-shadow-restricted-names"* chore: simplify rule "no-shadow-restricted-names"	True	
docs: `object-curly-spacing` doc is inaccurate about exceptions	False	
fix: `newline-after-var` false positive (fixes #6834) (#6847)	False	
sponsors: sync readme with website	True	
docs: autogenerated changelog for 2.3.0	True	
update: option to allow extra parens for cond assign (fixes #3317)	True	
docs: autogenerated changelog for vv2.0.0-beta.1	True	
docs: code conventions improvements (#6313)* docs: code conventions improvements re: strict mode and for statements* adding extra strict mode example and fixing trailing spaces* removed note about copyright from code conventions	True	
update: fix no-self-compare false negative on non-literals (fixes #7677) (#8492)previously, the `no-self-compare` rule would only check comparisons between identifiers and did not check comparisons between more complex expressions. (i assume this is because the apis that would allow comparing complex expressions didn't exist yet at the time the rule was implemented.) the rule is still applicable to non-literals, so this commit updates the rule to check comparisons that aren't between literals.	True	
docs: add missing period to the readme (#9702)	True	
0.7.3	False	
sponsors: sync readme with website	True	
add rule flag, closes #692	False	
fix: typo: iffe to iife, none to non	True	
fix: `vars-on-top` crashs at export declarations (fixes #6210) (#6220)	True	
mocha conversions of tests for 'use-isnan' and 'wrap-iife'	True	
update: add support for jsxfragments in indent rule (fixes #12208) (#12210)	True	
fix: incorrect location for `no-useless-escape` errors (fixes #7643) (#7645)* fix: incorrect location for `no-useless-escape` errors (fixes #7643)* use lodash.sortedlastindex instead of lodash.sortedindex with an offset	True	
build: changelog update for 8.0.0	True	
fix: don't generate invalid options in config-rule (#8326)previously, the `config-rule` logic for generating rule options had a bug where it could generate invalid options. for example, it could generate these options for the `id-match` rule:```json[2, { "properties": true }]```this is invalid because the first option in `id-match` must be a string, and the second option must be an object. the config generator doesn't handle strings, but it was incorrectly skipping the string option and trying to fill in the config with an object after realizing that it couldn't generate a string. as a result, it placed the object where the string was supposed to go, so an invalid set of options was created. a similar issue can appear when generating configs for the `max-statements` rule.luckily, the `id-match` and `max-statements` rule are still able to run when passed an invalid config, and the invalid config never results in fewer errors being reported than the default, so the invalid options wouldn't ever get output to a config file. however, this is only the case due to implementation details in the two rules, and a new rule could be introduced in the future that crashes when given an invalid schema, so this is still worth fixing.this commit fixes the issue by stopping early when the option generator reaches an option that it doesn't know how to fill in.	True	
docs: fix method signature on working-with-rules docs (fixes #3862)	False	
docs: fix no-sequences `with` examples (#12239)	False	
update: prefer-regex-literal detect regex literals (fixes #12840) (#12842)the rule `prefer-regex-literal` now detects when regex literals areunnecessarily passed to the `regexp` constructor.	True	
docs: prepare data for website to indicate rules with suggestions (#14830)co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
build: package.json and changelog update for 3.13.0	True	
sponsors: sync readme with website	True	
docs: add new formatters to api docs	True	
fix: eslint cache no longer stops autofix (fixes #10679) (#10694)	True	
fix: exclude `\u000d` so new line won't convert to text (fixes #12027) (#12031)	True	
docs: update eslint.org links to use https (#9358)	True	
fix: padded-blocks with asi (fixes #2273)	False	
docs: add `restparams` to `ecmafeatures` options list (refs: #2346)	True	
docs: fix explanation and typos for accessor-pairs	True	
new: 'sort-imports' rule (refs #3143)	True	
docs: ensure `triage` label is added to new issues (#11182)(fixes https://github.com/eslint/eslint-github-bot/issues/99)	True	
docs: mention parsing errors in strict mode (fixes #5485) (#5991)	False	
fix: `no-dupe-args` had been wrong for nested destructure (fixes #3867)i changed the check process with using `escope.variable`.	True	
update: enable es2020 environment in --init (#13357)	False	
fix: delete cache only when executing on files (fixes #6459) (#6540)	False	
upgrade: espree v3.5.2 (#9611)	False	
update: make `max-lines` report the actual number of lines (fixes #6766) (#6764)instead of reporting only that `max` value has been exceededit now also reports how many lines there is in the file.	True	
chore: enable comma-dangle on eslint codebase (fixes #7725) (#7906)	False	
update: improve report location for no-multi-spaces (#12329)	True	
update: add node 4 to travis builds (fixes #3697)	True	
fixes #449: no-mixed-requires throws typeerror when grouping is enabled	False	
fixes #723: block-scoped-var throws on unnamed function expression	False	
new: added comma-style rule (fixes #1282)	False	
update: check empty string property names in sort-keys (#12073)	True	
docs: fix typo in prefer-destructuring.md example (#9930)	False	
4.6.1	False	
fix: correct comma fix in spare array (fixes #10273) (#10329)* fix: throw error when ignore file path does not point to file (fixes #10076)* fix: correct comma fix in spare array (fixes #10273)* chore: fixed lint issues (fixes #10273)	True	
new: add classname attribute to junit testcase (refs #11068) (#11683)* new: add classname attribute to junit testcase (refs #11068)* enforce posix paths for more test consistency* enforce path.posix.join for classname attribute	True	
build: package.json and changelog update for 2.5.3	True	
upgrade: @humanwhocodes/config-array to 0.6 (#14891)	True	
chore: refactor reporting logic (refs #9161) (#9168)	True	
no-comma-dangle reports correct line numberfixes #720.	False	
new: `no-unused-labels` rule (fixes #5052)	False	
0.15.0	False	
build: changelog update for 5.0.0-alpha.0	True	
breaking: require `meta.hassuggestions` for rules with suggestions (#14573)* breaking: require `meta.hassuggestions` for rules with suggestions* docs: add another note about hassuggestions* update docs/developer-guide/working-with-rules.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update docs/developer-guide/working-with-rules.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* enable eslint-plugin/require-meta-has-suggestions rule internally* update property in makefileco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
fix: no-var should fix forstatement.init (#7993)* fix: no-var should fix forstatement.init* chore: add tests	True	
docs: add working groups to maintainer guide (#11400)* docs; add working groups to maintainer guide* fix wording and url* update working groups docs	True	
docs: add missing eslint comments in prefer-regex-literals examples (#12858)	False	
fix: `--init` autoconfig shouldn't add deprecated rules (fixes #14017) (#14060)	True	
fix: multi-line + fat arrow indent (fixes #2239)	False	
fix: no-extra-parens reported some parenthesized iifes (fixes #9140) (#9158)	True	
3.7.1	False	
rule: no unnecessary semicolons (fixes #158)	False	
new: rule - no useless escape (fixes #5460)	False	
update: add never option to multiline-ternary (fixes #6751) (#6905)	True	
chore: fix comment location in no-unused-vars (#14648)	False	
0.0.2	False	
fix: treat switchcase like a block in lines-around-comment (fixes #5718)when allowblockstart/allowblockend are true, comments at the start/endof a switch case are treated the same as if they were in a block	False	
docs: fix typos, suggests	False	
docs: add jquery warning to prefer-destructuring (#9409)	True	
fix: no-useless-rename invalid autofix with parenthesized identifiers (#14032)	True	
docs: fixed typo in consistent-return docs	False	
added quotes around "classes" option key (#6441)made `classes` key consistent with all other option keys which are quoted..	False	
docs: fix typo (#13717)	False	
docs: add eslint tutorial embed to getting started (#7971)i recently published a pluralsight course on eslint:https://www.pluralsight.com/courses/eslint-better-code-quality. adding ayoutube embed and link to the getting-started page.prior context here: https://github.com/eslint/eslint.github.io/issues/324	True	
docs: no-empty fix comment change (refs #2188)	False	
don't force explicit listing of rules; generate listing for bundle	True	
fix: ignore lines with empty elements (fixes #12756) (#14837)* fix: ignore lines with empty elements (fixes #12756)* fix: ignore  lines with empty elements (fixes #12756)* fix: ignore  lines with empty elements (fixes #12756)	False	
build: changelog update for 5.0.0-alpha.4	True	
fix: brace-style stroustrup should report on cuddled elseif (fixes #1583)the `brace-style` rule with the `"stroustrup"` option on was failingto report cuddled `elseif`s because of a check to make sure the`alternate` type was `blockstatement` before checking the position ofthe brace tokens. for `elseif`s, the `alternate` type is `ifstatement`.```if (foo) {baz();} else if (bar) {baz();}else {qux();}```the above code will now report correctly.fixes #1583	True	
chore: enable template-tag-spacing on eslint codebase (#8005)this enables template-tag-spacing for dogfooding. there are no existing violations with the default "never" option, and 37 existing violations with the "always" option.	True	
0.12.0	False	
typotilte says all :)	False	
fix: camelcase destructure leading/trailing underscore (fixes #9700) (#9701)	False	
fix: no-var don't fix globals (fixes #9520) (#9525)	False	
fix: message for numeric property names in quote-props (fixes #1459)	True	
update: add fixer for object-property-newline (fixes #7740) (#7808)* update: add fixer for object-property-newline (fixes #7740)* remove trailing spaces, don't fix if comments interfere* add a comment to explain how the fixer handles comments* remove incorrect comment	True	
adds test and fix for issue #82	True	
update: add describe around rule tester blocks (fixes #4907)	False	
chore: update path for release bundles (#11977)	True	
add travis build status to readme.md	True	
docs: remove broken link from no-loop-func doc (#7342)docs: remove broken link from no-loop-func docs	False	
update: support jsxfragment node (fixes #9662) (#9664)**what is the purpose of this pull request? (put an "x" next to item)**[ ] documentation update[ ] bug fix ([template](https://raw.githubusercontent.com/eslint/eslint/master/templates/bug-report.md))[ ] new rule ([template](https://raw.githubusercontent.com/eslint/eslint/master/templates/rule-proposal.md))[ x ] changes an existing rule ([template](https://raw.githubusercontent.com/eslint/eslint/master/templates/rule-change-proposal.md))[ ] add autofixing to a rule[ ] add a cli option[ ] add something to the core[ ] other, please explain:**what changes did you make? (give an overview)**this is related to https://github.com/eslint/eslint/issues/9662.currently, when a parser, such as `babel-eslint` is used, it'll now return `jsxfragment`. this pr updates some standard rules to add some support for fragments so that `jsxfragment`s can generally be used in the place of `jsxelement`.**current behavior example**```<>foo</>;```warns that foo should be wrapped in quotes, using the options:```"parser": "babel-eslint","rules": { "quotes": [ "error", "single" ] }```**behavior with my changes**```<>foo</>;```doesn't give any warnings!**rationale**i'm just throwing this out here because i'm not really sure if this is a change makes sense to make in this repo at this point in time. this is only applicable when an external parser is specified. if this makes sense, then i can refine the pr. ????	True	
fix: yoda left string fix for exceptrange (fixes #12883) (#13052)* fix: yoda left string fix for exceptrange* chore: aded string check for isoutsidetest yoda* fix: removed inconsistency btn never and always* chore: fixed false negatives* chore: fixed false negative string <= number* chore: simplify range checks (yoda)* chore: fixed false negative and added test* chore: removed un-neccesary comment for defaultvalue* chore: removed un-neccesary checks* chore: added removed tests* chore: linting fixes	True	
docs: remove a dot from curly link (#15128)	False	
breaking: check flatmap in array-callback-return (fixes #12235) (#12765)	False	
change reporters to formatters, add format command line option. also addedtests for compact format.	True	
update: refactors the traversing logic (refs #3530)this is a preparation to add new features such as code path analysis and node selector strings.new logic is using the decorator pattern.as a result, we can add processes before and after node events easily and cleanly.	True	
2.9.0	False	
fix: use async reading of stdin in bin/eslint.js (fixes #12212) (#12230)	False	
update: fix quotes false negative for string literals as template tags (#8107)	True	
docs: fix syntax error in space-before-function-paren	True	
fix: don't warn on computed nonliteral properties (fixes #1762)	False	
breaking: remove space-after-keyword newline check (fixes #4149)	False	
chore: rm unnecessary plugin in eslint-config-eslint (#10685)	False	
docs: change rule descriptions for consistent casing (#6915)scrolling through eslint.org/docs/rules, i found two descriptions thatbegan with uppercase letters, while all the rest were lowercase. for thecurious, here's how i ran a quick check to be sure i didn't miss any:```jsarray.from(document.queryselectorall('tr td:last-child p')).map(p => p.innertext).filter(description =>description[0].tolowercase() !== description[0])```	True	
fix: wrap-regex doesn't work in some expression(fixes #10573) (#10576)	True	
2.12.0	False	
build: changelog update for 6.0.0-alpha.1	True	
upgrade: deps (#11904)* upgrade: some deps to latest* chore: fix linting errors	True	
docs: update docs about using gitignore	False	
docs: add a case to func-names (#12038)	True	
add reset cli flag (refs #692)adds a --reset flag to the cli options that resets alldefault rules to be off.	True	
upgrade: update markdownlint dependency to 0.3.1 (fixes #7589) (#7592)	True	
new: `no-useless-return` rule (fixes #7309) (#7441)* new: (wip) `no-useless-return` rule (fixes #7309)* new: `no-useless-return` rule (fixes #7309)* chore: dogfooding `no-useless-return` rule* fix: remove useless upswash* add period.* `isremoveable` ??? `isremovable`* fix `typeerror` at return statements in unreachable code.* temporary fix* remove useless block from indent.js	False	
docs: update json schema links (#13936)	True	
docs: correct time forecast for tests. (#9432)	True	
docs: update getting started w/ readme installation instructions (#6823)	False	
fix: allow linting of .hidden files/folders (fixes #4828) (#6844)	False	
update eslint.json with no-underscore-dangle rule	True	
docs: fix incorrect documentation (#12045)the global variable that the user doesn't want to use is event not errori think the confusion came from the rule setting being named error	True	
docs: update anchor links to use existing linkrefs (refs #13715) (#13741)this is a partial follow-up to some future work pointed out by@mdjermanovic in #13715. @mdjermanovic, feel free to take over thisbranch or close this pr in favor of another that does this as part ofthe more complete update you had in mind.	True	
update: added empty error array check for false negative (#13200)* update: added empty error array check for false negative* chore: message refactore* chore: fixed tests* update: throw error for errors: 0 in test files* update: changed error message* chore: changed assertion message	True	
sponsors: sync readme with website	True	
update: add clarification to spaced-comment (refs #2588)	True	
0.4.0	False	
fix: windows scoped package configs (fixes #5644)	False	
fix: keyword-spacing conflict with space-infix-ops on `>` (fixes #14712) (#15172)* add regression tests* add passing tests* add more passing tests* add failing tests* fix the issue	False	
docs: remove deprecation note from lines-around-comment (#15293)this rule was mistakenly marked as deprecated in the documentation.fixes #15292	False	
update: add fixer for object-shorthand (fixes #6412) (#6418)	True	
update: rules should get `sourcetype` from program node (fixes #4960)	True	
fix: vars-on-top directive support (fixes #1235)	True	
chore: revise no-config-file test to prevent false failure. (#9443)eliminate assumption that there is no config file in / or ~/ by checking for a filein / and changing home to /, and expecting no-config-file-found error message andexit code 1 only if / contains no config file. revised doc to omit instruction todelete any config file in home directory.	True	
update: support async arrow fn in function-paren-newline (fixes #13728) (#13729)	False	
3.12.0	False	
update: include function name in report message if possible (fixes #7260) (#8058)	False	
docs: fixes typo peerdepencies (#11252)	False	
new: adding 'plugin' cli option (fixes #1112)	False	
fix: comma-dangle confused by parens (fixes #4195)	False	
new: add sourcecode#getlocfromindex and #getindexfromloc (fixes #8073) (#8158)	True	
fix: operator-assignment crash on adjacent division assignment (#12844)	True	
upgrade: eslint-scope and espree to 4.0.0 (refs #10458) (#10500)neither package had any commits since 4.0.0-rc.0, so this is justchanging the version tag.	True	
fix: check output in ruletester when errors is a number (fixes #7640) (#8097)	False	
build: switch from browserify to webpack (fixes #11366) (#11398)	True	
build: changelog update for 8.12.0	True	
chore: refactor comments of tests (#14956)	True	
fix: add property `fatalerrorcount` to ignored file results (#15520)fixes #15510	True	
chore: add debug logging for cli args as they came in (#10174)	True	
update: indentation of comment followed by semicolon (fixes #12232) (#12243)	False	
8.4.1	False	
chore: avoid applying eslint-env comments twice (#9278)	False	
docs: http -> https (fixes #9768) (#9768)urls were updated to use https protocoltag: docs	True	
feat: add `es2016`, `es2018`, `es2019`, and `es2022` environments (#15587)fixes #15580	False	
fix: ensure `configops.merge` do a deep copy (fixes #4682)	False	
fix: `no-redeclare` checks module scopes (fixes #2903)	False	
docs: document plugin usage (fixes #1117)	False	
update: support logical assignments in core rules (refs #13569) (#13618)* update operator-assignment rule* update astutils.couldbeerror* update constructor-super rule* add tests for operator-linebreak rule* add tests for space-infix-ops rule* add tests for no-invalid-this rule* add tests for no-param-reassign rule* add tests for no-bitwise rule* add tests for func-name-matching rule* add tests for prefer-destructuring rule* add tests for no-extend-native rule* update docs/rules/operator-assignment.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>* fix &&= in astutils.couldbeerror* fix &&= in constructor-super* fix commentco-authored-by: brandon mills <btmills@users.noreply.github.com>	True	
rule: no-eq-nullthe `no-eq-null` rule flags comparisons to null that do not use a type-checking operator.comparing to `null` without a type-checking operator (`==` or `!=`), can have unintended results as the comparison will evaluate to true when comparing to not just a `null`, but also an `undefined` value.```jsif (foo == null) {bar();}```this rule provides the functionality of jshint's **eqnull** rule.	True	
fix: not load configs outside config with `root: true`  (fixes #3109)	False	
6.7.2	False	
fix: check template literal in prefer-numeric-literals (fixes #13045) (#13046)* fix: check template literal in prefer-numeric-literals (fixes #13045)* remove useless parseroptions	False	
sponsors: sync readme with website	True	
add headings and correct internal links	False	
fix: semi rule should check throw statements (fixes #1873)	False	
3.10.0	False	
added support for object.defineproperty() checking	True	
sponsors: sync readme with website	True	
docs: remove moot integration plugins	False	
update: add 'allowsingleline' option to brace-style (fixes #1089)	True	
fixing type in guard-for-in documentation	True	
update: fix false negative in no-use-before-define (fixes #10227) (#10396)* update: fix false negative in no-use-before-define (fixes #10227)* reorder tests	True	
0.20.0	False	
build: pin proxyquire to ">=1.0.0 <1.7.5" (fixes #6096) (#6100)	True	
fix: no-fallthrough should respect block statements in case statements (fixes #893)	False	
breaking: add `require-yield` rule to `eslint:recommended` (fixes #6550) (#6554)	True	
fix: support arrow functions in no-extra-parens (fixes #2367)	False	
chore: add .pre-commit-hooks.yaml file (#13628)* create pre-commit-hooks.yaml* rename pre-commit-hooks.yaml to .pre-commit-hooks.yaml* update .pre-commit-hooks.yaml* added required_serial: false and removed min pre-commits version	True	
update: space-unary-ops uses astutils.cantokensbeadjacent (fixes #9907) (#9906)* update: use astutils.cantokensbeadjacent in space-unary-ops (fixes #9907)* docs: added some await examples to space-unary-ops	True	
fix: add `v8` module to no-mixed-requires rule (fixes #2320)	True	
update: es3 `reservedword`s (fixes #1151)adds es3 `reservedword`s to the list of keywords in the `dot-notation` rule(fixes #1151)	True	
fix: ignore empty statements in no-unreachable (fixes #9081) (#11058)	False	
chore: avoid hard-coding the list of core rules in eslint:recommended (#11336)this updates the `eslint:recommended` config to be generated dynamically rather than being hard-coded, to reduce the number of places that need to be kept up to date when core rules are added.	True	
docs: clarify usage of inline disable comments (fixes #6335) (#6347)	False	
new: add rule no-arrow-condition (fixes #3280)	False	
update: combine strict mode rules (fixes #1246)this combines the three existing strict mode rules, global-strict,no-extra-strict, and strict, into a single strict rule. the combinedrule has three modes:- `"never"` forbids any occurrence of a use strict directive.- `"global"` ensures that global code contains exactly one use strictdirective. use strict directives inside functions are consideredunnecessary. multiple use strict directives at any level alsotrigger warnings.- `"function"` forbids any occurrence of a use strict directive inglobal code. it requires exactly one use strict directive in eachfunction declaration or expression whose parent is global code. usestrict directives inside nested functions are consideredunnecessary. multiple use strict directives at any level alsotrigger warnings.note that a `"use strict";` statement that occurs outside of thedirective prologue will be flagged by `no-unused-expressions` and notby this rule.in addition to the three modes described above, the existing behaviorof the rule is preserved as the default mode so that this change is abackward-compatible update. deprecation notices are included in thedocumentation for the default mode as well as the global-strict andno-extra strict rules. all three notices include suggestions formigrating to the new behavior.	True	
updated tests, etc.	False	
docs: fix misleading section in brace-style documentation (#7996)it looks like this section was added when the brace-style rule only supported the 1tbs option, and the section hasn't been updated since then.	True	
update: added ignoreexpressions option to max-classes-per-file (#15000)* update: added ignoreexpressions option to max-classes-per-file* apply suggestions from code reviewco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* missed a spotco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>	True	
sponsors: sync readme with website	True	
fix: revert changes to key-spacing due to regression (#12598)revert "update: fix uglified object align in key-spacing (fixes #11414) (#12472)"this reverts commit 6503cb8d99e549fece53b80b110e890a7978b9fd.	True	
docs: clarify node types in no-multi-spaces (fixes #3781)	False	
docs: remove duplicate code path analysis document (#15033)	False	
update: add object-shorthand option for arrow functions (fixes #7564) (#7746)* update: add object-shorthand option for arrow functions (fixes #7564)* add docs, rename option to avoidexplicitreturnarrows* fix typos in comments	True	
chore: migrate master to main (#15062)* chore: migrate master to main* fix: keep the branch name to master for website repoco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* fix: replace main branch in url with head* fix: add both master and main branch in github workflowco-authored-by: jordan harband <ljharb@gmail.com>* fix: make the branch name to main for edit urlco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: jordan harband <ljharb@gmail.com>	True	
docs: updated no-return-await rule documentation (fixes #9695) (#10699)	False	
update: use global strict mode everywhere (fixes #1691)1234567890123456789012345678901234567890123456789012345678901234567890this enables `"strict": [2, "global"]` throughout the eslint codebase,including the tests.this is a huge, repetitive diff, so to save time, here are theinteresting changes:- m `.eslintrc`: added `"strict": [2, "global"]`. the default in`conf/eslint.json` can't change until v1.0.0, so even if that doesbecome the new default, it needs to change here for now.- d `tests/.eslintrc`: previously, this had three settings, whichenabled the `node` environment, enabled the `mocha` environment, anddisabled `strict`. the first was redundant, as it was alreadyenabled in `./eslintrc`, the second has been moved to`tests/lib/.eslintrc`, and the third has been moved to`tests/fixtures/.eslintrc'- a `tests/fixtures/.eslintrc`: disables `strict`, since thisdirectory contains test assets, not eslint source code or tests, andenabling it caused tests to fail that were assuming a certainconfiguration of rules for test assets.- a `tests/lib/.eslintrc`: enables the `mocha` environment for testcode only.- m `tests/lib/rules/no-octal-escape.js`: enabling strict moderesulted in a parser error due to an octal escape in the third validtest. it appears this was supposed to be a backslash followed by adigit in the test source code, so yay, unexpected bug squash!- m `tests/lib/cli.js`: referenced a different `.eslintrc` since theone it was expecting was removed.- m `tests/lib/cli-engine.js`: one test was changed to include awarning about global strict mode, and another wasn't fully reset, asit was still getting rules enabled in `.eslintrc`.	True	
chore: refactor template literal feature detection in 'quotes' rule (#11125)	True	
fix: blockless else in max-statements-per-line (fixes #5926) (#5993)previously `if (x) var y = 1; else var z = 1;` was allowed, now it isnt	False	
update: support `??` operator, import.meta, and `export * as ns` (#13196)* upgrade deps* update code path analysis for nullish coalescing* update rules for `export * as ns from "source"`* add a few tests for import.meta* update rules for nullish coalescing* update deps* add tests to no-restricted-imports* add tests to camelcase* add tests to id-blacklist* add tests for id-match	True	
sponsors: sync readme with website	True	
rule: one-varthe `one-var` rule disallows multiple variable declarations per function scope.function foo() {var bar;var baz;}see: http://jslinterrors.com/combine-this-with-the-previous-var-statement/	False	
fix: no-param-reassign false positive on destructuring (fixes #8279) (#8281)* fix: no-param-reassign false positive on destructuring (fixes #8279)this updates no-param-reassign to stop traversing up the ast if it encounters a property node where the variable reference is part of the key.* add test for object shorthand destructuring	True	
feat: update no-redeclare for class static blocks (#15313)updates the `no-redeclare` rule to report redeclarations in class static blocks.refs #15016	True	
3.11.0	False	
breaking: refactor .eslintignore functionality (refs #928, fixes #901,fixes #837, fixes #853)	True	
chore: updated no-control-regex tests to cover all cases (fixes #6438) (#6752)tostring prints out different outputs for /\x01/ and "/\x01/". becauseof that behavior, no-control-regex rule was broken before(fixed on 141b778).during the fix i added a test to cover the case i wrote for fix. whichwas also passing when the fix was not there. the test was on a stringliteral unfortunately which was not covering the test case where regexis written on a literal (like /\x01/). changed the tests to make sure itcovers the literal regex's as expected.	True	
docs: fix formatting (#14154)add missing closing backtick.	True	
fix: ensure **/node_modules works in ignore files (fixes #3788)	False	
update: indicating the operator in question (#14764)	True	
build: package.json and changelog update for 3.2.2	True	
fix: `getformatter` throws an error when called as static (fixes #5378)fallback to `process.cwd()` if `options.cwd` is unavailable, as is the case when `getformatter` is called a static function.	True	
fix: report end loc in one-var-declaration-per-line (refs #12334) (#13326)	False	
docs: improve formatter guide (refs #9550) (#10294)* docs: addressed first three issues (refs #9550)* docs: return empty string for formatter example (refs #9550)	True	
fix: indent ignore variable declaration init operator (fixes #8546) (#8563)* fix: indent ignore variable declaration init operator (fixes #8546)* refactor- ensure token before init is not parenthese- remove check for equal operator- remove check for token on first line- add test for init with parenthese* remove if statement for null token check	True	
chore: remove obsolete eslintbot templates (#9512)	True	
renamed unnecessary-strict to no-extra-strict	True	
fix: wrap-iife autofix removes mandatory parentheses (#12905)	True	
fixes #740 - make sure callbacks exist before marking them as 'handled'.	True	
fix: make `no-unused-vars` ignore for-in (fixes #2342) (#6126)applied only for `for-in` loops with only one `return` statement.also clean jsdocs for internal helpers	True	
docs: styling team members (#10460)	False	
fix: wrong indent at tagged template in indent (fixes #12122) (#12596)* fix: check tag in tagged template literal in indent (fixes #12122)* refactor, add test cases* rename variable name, delete comment* change test case* change offsettoken to token before the node.callee.quasi* refactor code, add more test cases* use token for consistency	True	
upgrade: esprima to 1.2, switch to using esprima comment attachment (fixes #730)	True	
fix: spaced comment exceptions not working (fixes #3276)	False	
update: remove invalid defaults from core rules (fixes #11415) (#11427)ajv ignores the `default` property in json schemas when it appears inside `oneof`, `anyof`, or `not`. this commit removes ignored `default` properties and fixes a few bugs in rules that were incorrectly assuming the `default` properties would get processed.	True	
sponsors: sync readme with website	True	
build: changelog update for 7.13.0	True	
new: add prefer-exponentiation-operator rule (fixes #10482) (#12360)* new: add prefer-exponentiation-operator rule (fixes #10482)* check classdeclaration	True	
docs: only successfully linted files are cached (fixes #9802) (#10557)	False	
feat: update no-inner-declarations for class static blocks (#15290)updates the `no-inner-declarations` rule to allow declarations at the top level of class static blocks.refs #15016	True	
docs: add documentation for linter methods (refs #6525) (#9151)	True	
chore: enable object-curly-newline & object-property-newline.(fixes #9042) (#9068)* chore: enable object-curly-newline & object-property-newline.* fix: linting errors.	False	
fix: replace infinity with number.max_safe_integer (fixes #13427) (#13435)	False	
fix: handle optional catch bindings in no-useless-catch (#11205)this commit prevents a crash in the no-useless-catch rulethat occurs when optional catch bindings are used.	False	
docs: link to minimatch docs added.  (#15688)* docs: link to minimatch docs added* update docs/user-guide/configuring/configuration-files.mdfixes: #15670co-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>	True	
docs: `class-methods-use-this`: fix option name (#7224)	False	
docs: fix grammar: spacing improve -> spacing improves (#11386)changed???spacing around commas improve readability of a list of items.???to???spacing around commas improves readability of a list of items.???	True	
docs: es6 syntax vs globals configuration (fixes #7984) (#8350)docs: es6 syntax vs globals configuration (fixes #7984)	False	
fix: generator-star-spacing with class methods (fixes #2351)	True	
sponsors: sync readme with website	True	
docs: adding back deprecated space-unary-word-ops documentation	False	
fix: indent bug with assignmentexpressions (fixes #7747) (#7750)	False	
update: allow arbitrary nodes to be ignored in `indent` (fixes #8594) (#9105)this adds an option to the `indent` rule to allow the indentation checking for an arbitrary node type to be ignored, as described in https://github.com/eslint/eslint/issues/8594. this should make it easier for users to use the `indent` rule even if they think a different indentation should be enforced for a particular node type.	True	
5.16.0	False	
fix: multiline-comment-style incorrect message (#11864)	False	
docs: add toc to user-guide/configuring.md (#13727)* docs: add toc to user-guide/configuring.md* change bullets from - to ** add empty line between heading & list* docs: correct toc link in docs/user-guide/configuring.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
added the rest of the tests for existing rules	True	
update: padded-blocks loc position changes (refs #12334) (#13328)	False	
update: add regex support for exceptions (fixes #5187) (#6883)	True	
fix: no-multiple-empty-lines perf issue on large files (fixes #7803) (#7843)	False	
docs: fix typos (#8235)	False	
fix: object-shorthand crash on some computed keys (fixes #8576) (#8577)	True	
docs: add eslint-config-mdcs to jscs migration guide (#7737)	True	
feat: update max-statements for class static blocks (#15315)updates the `max-statements` rule so that it does not apply to class static blocks and does not count statements in them as statements in the enclosing function.refs #15016	True	
update: implement auto fix for `no-spaced-func` rule (fixes #3728)	True	
rule: no-spaced-func disallow spaces between function identifier and application	False	
0.8.1	False	
chore: include jquery foundation info	False	
build: changelog update for 5.15.1	True	
build: add appveyor ci system (fixes #2923)	False	
rule: no shadow	False	
fix: unused recursive functions should be flagged (issue2095)	False	
fix: shared config being clobbered by other config (fixes #2592)this clones a shared-config object after it has been `require`'d inorder to prevent clobbering.	True	
upgrade: proxyquire to 1.7.10 (fixes #6821) (#6822)	True	
fix: `no-unused-vars` false positive in loop (fixes #6646) (#6649)* fix: `no-unused-var` false positive in loop (fixes #6646)* chore: add some private tags to jsdoc comments.* chore: add `isfunctionnode` and `isloopnode` to ast-utils.* chore: add a test for my mistake.https://github.com/eslint/eslint/pull/6649#discussion_r70247810* chore: add tests for `isfunctionnode` and `isloopnode`* chore: rename `isloopnode` ??? `isloop` and `isfunctionnode` ??? `isfunction`	True	
fix: `prefer-arrow-callback` had been wrong at arguments (fixes #4095)the rule should not warn function expressions if these are usingimplicit `arguments`, `super`, or `new.target`.	False	
fix: resolve linting issue in (fixes #1339)	True	
update: add class body support to `indent` rule (fixes #4372)	True	
fixes #682: rewrite no-constant-condition rule	False	
docs: link jscs rules to their corresponding page. (#6334)	True	
fix: remove extra capture group	False	
build: gensite passes rulesmeta to formatter rendering (#11567)* build: gensite passes rulesmeta to formatter rendering* chore: switching to foreach for readability	True	
new: space-in-parens rule (closes #627)	False	
fix: `no-unused-vars` false positive (fixes #7250) (#7258)	False	
docs: add code of conduct (fixes #3095)	False	
chore: dogfooding es6 rules (refs #6407) (#6735)	False	
fixing no-undef for eval use case	True	
fixed error in no-ex-assign when return statement as found in catch clause	False	
update: add fixer for quote-props (fixes #6996) (#7095)	True	
rule: no octal literals	False	
fix #570	False	
build: changelog update for 7.7.0	True	
sponsors: sync readme with website	True	
docs: mention workaround for escaping the slash character in selectors (#14675)* docs: mention workaround for the regex escape character* update docs/developer-guide/selectors.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
add options to no-unused-vars. fixes #367	True	
7.0.0-alpha.0	False	
sponsors: sync readme with website	True	
fix: incorrectly warning about ignored files (fixes #3649)	False	
fix: add es3 config option to dot-notation rule (fixes #1484)	True	
update: add fixer for `arrow-body-style` (#7240)* update: add fixer for `arrow-body-style`* (squash) make sure the fixer doesn't cause syntaxerrors* avoid fixes when asi would cause errors* avoid unnecessary spaces when replacing arrow body	True	
update: add fixer for arrow-parens (fixes #4766) (#6501)	True	
fix: code path analysis and labels (fixes #5171)code path analysis comes to handle labels with other than loops andswitches correctly.before, it has been handling `break` statements on loop contexts andswitch contexts. but now, it's handling `break` statements onindependent `break` contexts.	True	
new: added no-trailing-spaces rule (fixes #995)	False	
0.0.8-dev	False	
fix: no-extra-parens false positive with exports and object literals (#8359)this commit fixes an issue where no-extra-parens would incorrectly report parenthesized functions and classes in `export default` declarations, and object literals at the beginning of expression statements.	False	
change customformat value to path	True	
docs: describe all ruletester options (fixes #4810, fixes #6709) (#6711)	False	
fix: crash on optional catch binding (#10429)	False	
update: report newline between template tag and literal (fixes #4210)checks and reports newline between template tag and template literal.	False	
docs: add a correct example to no-unsafe-optional-chaining (refs #14029) (#14050)	True	
add unreachable code detection for switch cases and after continue/break.	True	
fixes issue with fs.existssync on nodejs 0.6fixes an issue where`lib/cli.js` was using `fs.existssync`, which prior to nodejs 0.8 was `path.existssync`. so, on nodejs 0.6, the cli would throw an error.	True	
upgrade: espree to 3.0.0 (fixes #5018)	True	
docs: fix typo in object-shorthand docs	False	
new: run processors when calling executeontext (fixes #2331)	True	
chore: upgrade eslint-plugin-eslint-plugin & eslint-plugin-node (#8856)* chore: upgrade eslint-plugin-eslint-plugin@0.7.3* update package.json* update eslint-plugin-eslint-plugin@0.7.4 & enable no-identical-tests.	True	
breaking: error thrown/printed if no config found (fixes #5987) (#6538)* breaking: error thrown/printed if no config found (fixes #5987)* edit message per feedbacki added @ianvs' suggestion of including the directory and ancestors-- let me know if it's too long as a result.* fix block comment to avoid using jsdoc* add tests to ensure no errors when configured* do not throw error if rules are specified* reorganizing unit tests for lib/config.js* reorganize code in lib/config* fixing jsdoc issues and unclear code	True	
docs: update bug_report template (#14787)	False	
fix: `brace-style` asi fix for if-else condition (fixes #4520)	True	
fix: newline-after-var to ignore declare in for specifiers (fixes #2317)	True	
update: fix indentation of nested function parameters (fixes #8892) (#8900)previously, the `indent` rule would only offset the first token of an element in a list (e.g. an array). however, this was incorrect because the other tokens of the element might not depend on the indentatio nof the first token. for example, in a function expression, the indentation of the parens does not depend on the indentation of the `function` token. this commit updates the `indent` rule to correctly offset all of the tokens in the element.	True	
update: stricter array index check in no-magic-numbers (fixes #12845) (#12851)* update: stricter array index check in no-magic-numbers (fixes #12845)* improve docs and comments in the code	False	
fix: no-magic-numbers should ignore number.parseint (fixes #4167)	False	
chore: removes unnecessary assignment in loop (#11780)* chore: removes unnecessary assignment in loopalso reduces cyclomatic complexity with a slight reconfiguring of some conditions* uses ternary based on review notes	True	
update: add fixer for `brace-style` (fixes #7074) (#7347)	True	
docs: remove self-reference in no-restricted-syntax docs (#8277)	False	
docs: added examples and structure to `padded-blocks` (fixes #6628) (#6643)	True	
fix: quotes autofix produces syntax error with octal escape sequences (#12118)	True	
0.4.4	False	
docs: typo fix (#7546)	False	
update: add fixer for wrap-regex (fixes #7013) (#7048)	True	
update: check logical assignment in no-constant-condition (#13946)* update: check logical assignment in no-constant-condition* update docs	False	
fix: block-scoped-var rule incorrectly flagging break/continue with label (fixes #3082)	False	
chore: use espree.latestecmaversion in config-initializer (#13157)	False	
docs: correct code of conduct link on readme.md (#8517)	False	
rebasing on master	False	
fix: space-in-parens crash (#9655)	False	
fix: `_` and `$` in ises5constructor (fixes #6085) (#6094)as discussed in #6085, the previous case-matching code was overlyliberal in matching these punctuation characters, which are not commonlyused to begin constructor names.  in the case that they are used, suchuses may be excluded from the relevant rules using inline configuration.changes in v2:- after further discussion, reduce the matching to only characters whichdiffer from their lower-cased versions.  this has a higher chance offalse-negatives, but false-negatives can be worked around byconfiguration while false-positives can not.	True	
chore: use espree.latestecmaversion in fuzzer (#13484)	False	
4.15.0	False	
docs: fix doc for no-unneeded-ternary rule (fixes #12098) (#12410)* docs: fix docs for no-unneeded-ternary (fixes #12098)* update: add test cases- default assignment on right hand side- default assignment not on right side- assignment that is not default e.g. x ? 1 : x* update doc for clarity	True	
4.7.2	False	
docs: add installing prerequisites. (#9394)	False	
upgrade: estraverse to latest for estree support (fixes #1986)	True	
new: allowafterthisconstructor for no-underscore-dangle (fixes #11488) (#11489)	True	
sponsors: sync readme with website	True	
chore: refactor linter#parsebooleanconfig to improve readability (#11074)	True	
sponsors: sync readme with website	True	
chore: rm deprecated experimentalobjectrestspread option in tests (#10647)	False	
fix: check space after anonymous generator star (fixes #5435)	True	
docs: update bug report template (#14276)* docs: update bug report template* update .github/issue_template/bug_report.md	False	
new: `no-extra-label` rule (fixes #5059)	False	
fix: nested indenting for offsetternaryexpressions: true (fixes #13971) (#13972)* reproduce extra nested ternary indentation with a test* add a similar test with proper indenting of nested ternary* apply condition to avoid extra indenting with offsetternaryexpressionsco-authored-by: adam stankiewicz <sheerun@sher.pl>co-authored-by: adam stankiewicz <sheerun@sher.pl>	True	
sponsors: sync readme with website	True	
update: enable es6 scoping for more options	True	
update: add embertest env (fixes #3205)	False	
chore: add integration tests for cache files (refs #7748) (#7794)	True	
fix: for-in support to no-empty-label rule (fixes #1161)	True	
fix: remove autofix for var undef inits (fixes #9231) (#9288)	True	
update: no-undefined handles properties/classes/modules (fixes #7964) (#7966)	False	
breaking: change defaults for padded-blocks (fixes #7879) (#8134)	True	
docs: enable a few more markdownlint rules and fix violations (#15368)	False	
fix: handle getters and setters in key-spacing (fixes #4792)	False	
fix: comma-spacing ignore comma before closing paren (fixes #11295) (#11374)* fix: ignore comma before closing paren (fixes #11295)* chore: add more tests	True	
chore: remove assert.doesnotthrow in tests (#10199)the api is not really useful and just slows down the test run bycatching errors and then rethrowing in case of an error. in casethere is no error, it is a noop.	False	
update: allow continue instead of if wrap in guard-for-in (fixes #7567) (#9796)	True	
rule 'block-scoped-var': correct scope for functions, arguments (fixes #832)	True	
fix: `no-loop-func` rule allows functions at init part (fixes #2427)	False	
docs: consistent wording in rules readme	False	
update: object-shorthand lints computed methods (fixes #5871) (#5963)	False	
new: add exported comment option (fixes #1200)	False	
update: check regexp strings for `no-regex-spaces` (fixes #3586) (#6379)	True	
upgrade: espree and eslint-scope to rc versions (#10457)	True	
sponsors: sync readme with website	True	
sponsors: sync readme with website	True	
breaking: remove defaults from `eslint:recommended` (fixes #4809)	False	
feat: support for private-in syntax (fixes #14811) (#15060)	True	
sponsors: sync readme with website	True	
upgrade: @eslint/eslintrc to improve error message for invalid extends (#14009)	True	
chore: enable no-param-reassign on eslint codebase (#10065)	False	
docs: update issue templates to ask for prs (#11012)* docs: update issue templates to ask for prs* update wording of pr request	True	
changed `no-dangle` documentation to `no-comma-dangle`the `no-dangle` rule was changed to `no-comma-dangle`. this commit updates the documentation to reflect that.	True	
fix: indent crash on arrow functions without parens at start of line (#8477)previously, an arrow function without parentheses around the parameters at the start of a line would cause the `indent` rule to crash. this commit fixes the crash.	True	
removed unused jshint dependency	False	
fixed release error in makefile	False	
update: fix incorrect default value for position (#10670)	True	
docs: remove duplicate statement (#6878)	False	
docs: update descriptive text for --no-ignore option.	True	
update: fix no-octal-escape false negatives after \0 (#12079)	False	
breaking: resolve patterns from .eslintignore directory (fixes #6759) (#7678)	True	
docs: add example for cliengine#executeontext 3rd arg (#12286)	True	
docs: make `peerdependencies` package.json snippet valid json (#8971)	True	
new: adds --ignore-pattern option. (fixes #1742)	False	
docs: add example for expression option (#12694)	True	
fix for no-unused-vars and memberexpressionno no-unused-vars is triggered even if identifier is a part ofmemberexpression's non-computed properties (fixes #709).	True	
docs: distinguish examples in rules under best practices part 4	False	
fix: fix false positives of no-new-func (#13333)* fix: fix false positives of no-new-func* add more tests* fix false positive* fix	False	
new: adds support for the `jasmine` env (fixes #1176)	True	
breaking: create eslint:recommended and add to --init (fixes #2713)	True	
update: config extends dependency lookup (fixes #5023)	False	
update: fix `no-extra-parens` false negative (fixes #7229) (#7231)	False	
docs: update markdownlint dependency, resolve/suppress new issues.	True	
breaking: do not check unset declaration types (fixes #2448)	False	
fix: no-bitwise reports on bitwise assignment expressions (fixes #1643)	False	
don't flag ++ or -- as unused expressions (fixes #366)	False	
upgrade: mock-fs to 3.10, fixes for node 6.3 (fixes #6621) (#6624)	True	
fix: require-atomic-updates false positive (fixes #11194, fixes #11687) (#11224)	True	
fix: no-duplicate-imports allow unmergeable (fixes #12758, fixes #12760) (#14238)* fix: ignore unmergable imports when checking no-duplicate-imports (fixes #13180) & fix: ignore re-export all in no-duplicate-imports (fixes #12760)* fix: ignore unmergable imports when checking no-duplicate-imports (fixes #13180) & fix: ignore re-export all in no-duplicate-imports (fixes #12760)* fix: ignore unmergable imports when checking no-duplicate-imports (fixes #13180) & fix: ignore re-export all in no-duplicate-imports (fixes #12760)* fix: ignore unmergable imports when checking no-duplicate-imports (fixes #13180) & fix: ignore re-export all in no-duplicate-imports (fixes #12760)* fix: ignore unmergable imports when checking no-duplicate-imports (fixes #13180) & fix: ignore re-export all in no-duplicate-imports (fixes #12760)* fix: ignore unmergable imports when checking no-duplicate-imports (fixes#13180) & fix: ignore re-export all in no-duplicate-imports (fixes #12760)* fix: ignore unmergable imports when checking no-duplicate-imports (fixes#13180) & fix: ignore re-export all in no-duplicate-imports (fixes #12760)* fix: ignore unmergable imports when checking no-duplicate-imports (fixes#13180) & fix: ignore re-export all in no-duplicate-imports (fixes #12760)* fix: ignore unmergable imports when checking no-duplicate-imports (fixes #13180) & fix: ignore re-export all in no-duplicate-imports (fixes #12760)	False	
docs: use union types in tokenstore jsdoc (refs #1878)	True	
docs: update build tool for webpack (#13962)	True	
new: `sort-keys` rule (fixes #6076) (#6800)	True	
docs: updated no-proto rule (fixes #11743) (#11746)	True	
docs: updates category of no-restricted-properties (fixes #7112) (#7118)	False	
new: codeframe formatter (fixes #5860) (#7437)	True	
0.0.2-1	False	
build: add branch update during release process (fixes #4491)	False	
update no-new.md"the" follows another "the"	False	
fix: ignore import expressions in no-unused-expressions rule (#13387)	False	
chore: update eslint-plugin-node to 9.0.0 (#11670)	True	
2.2.0	False	
update: support "bigint" in valid-typeof rule (#11802)* update: support "bigint" in valid-typeof rulebigint just moved to stage 4, so add support for it tothe valid-typeof rule.* docs: add further reading to valid-typeof rulethis commit adds a further reading section to thevalid-typeof rule documentation.	True	
breaking: use an exit code of 2 for fatal config problems (fixes #9384) (#10009)* breaking: use an exit code of 2 for fatal config problems (fixes #9384)* clarify that exit codes section only applies when linting files	True	
fix: no-extra-parens autofix with `in` in a for-loop init (fixes #11706) (#11848)	True	
fix: module import specifiers should be defined (refs #1978)	False	
upgrade: mocha to 3.2.0 (#8299)	True	
chore: add jsdoc types for ruletester test cases (#12325)* chore: add jsdoc types for ruletester test cases* improve types* add descriptions for the types and move types to top of file* fix lint error, object -> object* make `testcaseerror.message` optional* add property `env` to types* add property `env` to types* fix last commit* make `invalidtestcase.errors` accept regexp elements	True	
chore: fix error message in eslint-config-eslint (#10588)no-restricted-properties error message should be "use assert.deepstrictequal instead of assert.deepequal."	False	
fix: arrow-body-style crash with object pattern (fixes #14633) (#14635)	False	
chore: simplify dataflow in linter.verify (#10020)* chore: separate running rules from parsing* chore: simplify dataflow in linter.verify* chore: refactor option default handling in linter.verify	True	
chore: add nested array tests for array-element-newline (#13161)* chore: nested array tests for array-element-newline* chore: linting fixes	True	
fix: crash on 0 max (fixes #2423)	False	
rule: no-dupe-keysthe `no-dupe-keys` warns on the use of duplicate keys when declaring object literals:var foo = {bar: "baz",bar: "qux"};fixes #40 fixes #44 fixes #154 fixes #155	False	
update: camelcase rule fix for import declarations (fixes #6755) (#6784)calmecase rule now doesn't report an error if camelcased identifieris imported with a camecased alias. otherwhise it reports an erroras expected.	True	
docs: correct obvious inconsistencies in rules h2 elements	False	
fix: make getscope acquire innermost scope (fixes #3700)	False	
docs: configuring cascading and hierarchy example correction (#8512)	False	
chore: remove unused parameter in dot-location (#12464)	False	
upgrade: `markdownlint` dev dependencies (#14883)	False	
3.14.1	False	
fix: adding per-environment rule configs to docs and doc validation (fixes #918)	True	
chore: enable jsdoc/require-description (#12365)	False	
update: fix false positive/negative of yoda rule (fixes #7676) (#7695)* update: fix false negative of yoda about computed (fixes #7676)* fix: false positive of yoda about ranges (fixes #7676)* fix: use `astutils.getstaticpropertyname`* chore: update jsdoc comments	False	
fix: ensure all export nodes are traversable (fixes #1965)	False	
update: add a fixer for certain statically-verifiable `eqeqeq` cases (#7389)* update: add a fixer for certain statically-verifiable `eqeqeq` cases* add note to docs to clarify which cases can be fixed	True	
chore: fix redundant equality check (#10617)	False	
update: separate pattern/expression options for array-element-newline (#11796)* update: separate pattern/expression options for array-element-newline* docs: add pattern vs expression examples for array-element-newline	True	
docs: describe options in rules under possible errors part 3 (#6105)	False	
fix: object-curly-newline for flow code (#9458)* fix: object-curly-newline for flow code (fixes babel-eslint/513)the `object-curly-newline` rule made the assumption that the last tokenis always `}`. however, when an object is typed with flow this is notthe case. this causes false positives, as described in https://github.com/babel/babel-eslint/issues/513.by adding a filter to the `getlasttoken` function we skip over the flowtypes, and get the actual closing brace. for symmetry the same filter isadded for the open brace, though i'm not aware of any issues it wouldfix.* fix object-curly-newline for flow type literals & added tests- added tests for `object-curly-newline` in code annotated with flow types- fixed incorrect behaviour of object-curly-newline for literal object types* replace brace counting to find matching brace with direct lookupas per https://github.com/eslint/eslint/pull/9458#discussion_r148040456	True	
fix: scoping for node.js (fixes #892)	True	
update: add --fix for one-var rule (refs #9072) (#10040)	True	
build: fixing issue with docs generation (fixes #9199) (#9200)	False	
docs: reorder readme sections (#10172)	False	
fix: jsdoc comment for multi-line function expressions (fixes #4889)	True	
fix: pass correct sourcetype to escope (fixes #1959)	True	
fix: put rule severity in messages (fixes #984); deprecates passing full config to formatters	True	
docs: add 'stricter rule config validating' in migrating docs (#11905)* docs: add 'stricter rule config validating' in migrating docs* docs: fix typo	False	
added style option for wrap-iife	True	
chore: enable prefertype in valid-jsdoc (refs #5188) (#6634)	False	
new: rule `no-unsafe-finally` (fixes #5808) (#5932)	False	
sponsors: sync readme with website	True	
breaking: switch to ruletester (fixes #3186)	True	
sponsors: sync readme with website	True	
upgrade: several dependencies (#12753)	False	
update: add question to confirm downgrade (fixes #8870) (#8911)	True	
breaking: remove `no-empty-label` (fixes #5042)	False	
build: changelog update for 5.9.0	True	
new: generator-star-spacing rule (fixes #1680, fixes #1949)	True	
fix: report full dot location in dot-location (#12452)	False	
update: implement auto fix for computed-property-spacing (fixes #3975)	True	
build: add an edit link to the rule docs??? metadata (#9049)this also splits the template into separate lines.	True	
8.3.0	False	
fix `no-empty-class` false negativesthis fixes several false negatives when attempting to catch empty character classes in regular expressions, like so:var foo = /\[[]/;a more robust approach was taken in parsing the regular expression, which loosely follows the algorithm that jslint uses for a similar purpose.fixes #267	True	
docs: add rule deprecation section to user guide (fixes #5845) (#6201)	True	
add 'config-declared global' test	False	
build: consume no-underscore-dangle allowafterthis option (fixes #4599)	False	
docs: document `--ignore-pattern` (#6120)	False	
rule: count-spaces for multiple spaces in regular expressions	True	
docs: fix configuration example in no-restricted-imports (fixes #11717) (#12638)	False	
upgrade: compatible deps (#11608)	False	
docs: fix typo in shareable-configs example (fixes #2571)	False	
update: change no-duplicate-case to comparing tokens (fixes #13485) (#13494)change `no-duplicate-case` rule to change from detecting duplicates comparing text to detecting duplicates comparing tokens, like `no-dupe-else-if` rule.	True	
docs: fix invalid json in "specifying parser options" (#11492)	True	
build: changelog update for 4.1.0	True	
chore: convert traverser to es6 class (refs #7849) (#8232)	True	
docs: add mysticatea as committer	False	
build: changelog update for 8.2.0	True	
docs: correct contributing url	False	
docs: edit issue/pr waiting period docs (fixes #6009) (#6715)	False	
0.9.0	False	
upgrade: consume espree@4.0.0-alpha.1 (#10410)	False	
chore: enable no-console rule in eslint-config-eslint (refs #5188)	True	
update: deprecate node.js & commonjs rules (#12898)* update: deprecate node.js & commonjs rules* upgrade eslint-plugin-node@11* update config/replaceby fields* fix lint errors* update .eslintrc.js* fix tests* disallow directory imports* address feedback* fix typo	True	
fix: let fs.stat throw if a file does not exist (fixes #1296)	False	
docs: update cla link (#5980)before submitting #5977 i had signed the old cla from before joiningthe jquery foundation, as it was still referenced in the contributionguidelines file.@ianvs made me aware of the move on gitter.	True	
fix: improves detection of self-referential functions (fixes #2363)	False	
fix: `indent` should only indent chain calls if the first call is single line (fixes #3591)	False	
docs: fix typo and explain static func calls for class-methods-use-this (#7421)	True	
sponsors: sync readme with website	True	
fix: rule no-unused-vars had missing period (fixes #6738) (#6739)the other rules in eslint seem to end their messages with a period, but `no-unused-vars` doesn't, so this pr attempts to change that.	True	
fix: multiline-comment-style reports block comments followed by code (#9450)	False	
upgrade: upgrade outdated dependencies (fixes #1251)	False	
docs: clarify no-mixed-operators (fixes #8051)update docs for `no-mixed-operators` to clarify that a pair of errors will be triggered for each pair of mixed consecutive operators used. fixes #8051.	True	
7.30.0	False	
sponsors: sync readme with website	True	
docs: fix heading level for an option in `class-methods-use-this` rule (#15399)	True	
docs: fix example in object-curly-newline docs (#11633)	False	
fix: no-regex-spaces false positives and invalid autofix (fixes #12226) (#12231)	True	
fix: remove autofixer for no-debugger (fixes #10242) (#10509)	True	
added broccoli-eslint to integration docs	True	
chore: support es2020 in fuzz (#12180)	False	
build: speed up site generation (fixes #2475)	False	
chore: use eslint-plugin-node (refs #6407) (#6862)- to warn unsupported ecma features of node 4.- to prevent a use of deprecated api.- etc.	True	
breaking: allow parser feature flips (fixes #1602)	False	
updating no-undef patch (see pull request #164)3. move parsing of ```/*global */``` and ```/*jshint */``` to eslint.js	True	
fix: support rest/spread properties (fixes #9885) (#9943)	False	
docs: remove wrong descriptions in `padded-block` rule (#8783)* docs: remove wrong descriptions in `padded-block` rulerule `padded-blocks` now enforces padding in class bodies and switch statements.https://github.com/eslint/eslint/pull/8134* docs: correct description of string optionsclass bodies are not actually block statements.	True	
7.6.0	False	
docs: fix layout issue in configuration docs (fixes #889)	False	
update: make no-cond-assign work for ternaries (fixes #10091) (#10109)	True	
fix: incorrect exitcode when eslint is called with --stdin (fixes #6677) (#6682)previously exitcode was set at the end of bin/eslint.js but the callbackexecuted for --stdin was asynchronous.the asynchronous callback was setting exitcode after process.exitcodehad already been assigned.this removes the exitcode variable and just gets each block to setprocess.exitcode directly.	True	
update: allow testing suggestions with data in ruletester (fixes #12606) (#12635)* update: allow testing suggestions with data in ruletester (fixes #12606)* add data to suggestionobjectparameters	True	
fix: small typos in code examples* add missed quotes(`"`) in json code examples at  `max-len.md`.[ci skip]	True	
docs: improve examples and clarify default option (#12067)* docs: improve examples and clarify default optionthe "default" option is now set to `overrides` instead of `after` because examples in after may be misleading.a new incorrect example is added to `overrides` to clarify whether the overridden style can still be used.* docs: reformat operator-linebreak	True	
new: add name to ruletester (#15179)	True	
fix: respect 'ignoretrailingcomments' in max-len rule (fixes #5563)	False	
update: adding new `key-spacing` option (fixes #5613) (#5907)`align` is now available as a stand-alone configurations.this allows specifying how spacing should work when aligningvalues in a group.	False	
docs: fix wording in configuring.md (#13469)* fix wording in configuring.md* update docs/user-guide/configuring.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>co-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>	False	
fix: space-before-function-parentheses generator methods (fixes #2082)	True	
fix: indent "first" option false positive on nested arrays (fixes #7727) (#7728)	False	
chore: don't include internal test helpers in npm package (#9160)this moves `event-generator-tester` and `test-parser` to an `internal-test-helpers` directory, since they are only used for internal testing and are not needed when installing eslint as a user.	True	
docs: add "proposing a rule change" link to contributing.md (#6511)this gets contributing.md and readme.md in sync in terms of providing guidance for different types of issues.	True	
docs: link first instance of `package.json` (#7684)	True	
new: `template-curly-spacing` rule (fixes #5049)	False	
fix: no-undef-init should not apply to class fields (refs #14857) (#14994)* fix: no-undef-init should not apply to class fields (refs #14857)* update docs	True	
docs: fix typo in no-implicit-globals.md (#14954)	False	
fixed broken links	False	
docs: updated arrow-parens for minor grammar issue (#12962)	True	
docs: fix rules\id-length exceptions typos (fixes #6397) (#6593)changed 2 typos:exceptions accepts array,was max property instead of exception property.	False	
build: changelog update for 5.12.0	True	
docs: wrap {{}} in raw liquid tags to prevent interpolation (#12643)	True	
docs: improve no-extra-parens formatting (#9747)the doc lists two exceptions in a bulleted list and then adds a thirdexception in prose. move the prose to the bulleted list so it has threeitems.	True	
fix: `no-useless-concat` false positive at numbers (fixes #3575, fixes #3589)- removed handling literals of non strings from `no-useless-concat`.- added covering those into `prefer-template`.- added `isstringliteral` utility into ast-utils.js.	True	
build: changelog update for 7.0.0-alpha.1	True	
added documentation for `max-len` rule	True	
docs: clarify --ext does not apply to globs (fixes #5452)	True	
fix: `curly` false positive with no-semicolon style (#7509)with the `multi-line` option, `curly` should not report an error in cases like this:```jsif (foo) bar();[1, 2, 3].map(foo)```however, it had a false positive because the semicolon before `[` is considered to be part of the same statement as `bar()`, so `curly` identified `bar()` as a multiline statement. this fixes `curly` to ignore trailing semicolons when determining whether a statement is multiline.originally reported here: https://github.com/feross/standard/issues/664	True	
fix: support tagged template literal generics in no-unexpected-multiline (#11698)	False	
feat: update no-extra-semi for class static blocks (#15287)updates the `no-extra-semi` rule to report semicolons after class static blocks.refs #15016	True	
fix: avoid crashing on malformed configuration comments (fixes #9373) (#9819)this updates `linter` to treat malformed configuration comments as linting errors rather than fatal issues that crash the process. previously, this could cause surprising behavior because it was the only known instance where a problem in the source code (given a valid configuration) could cause an error to be thrown.for example, this also fixes https://github.com/eslint/eslint.github.io/issues/413.	True	
fix: add the missing "as-needed" docs to the radix rule (fixes #4364)refs #4048refs #4084refs #4351	True	
build: changelog update for 7.12.1	True	
fix: newline-before-return handles return as first token (fixes #5816)	True	
build: changelog update for 5.16.0	True	
fix: new-cap should allow non-alpha characters (fixes #897)	False	
docs: add note about support for object spread (fixes #11136) (#11395)	True	
add new rule "no-new-require"	False	
3.9.1	False	
test: add tests for `allowreserved` parser option with flat config (#15450)	True	
fix: no-extra-parens false positives for variables called "let" (#8808)"let" is unusual because it's sometimes parsed as a variable declaration keyword, and sometimes as an identifier for a variable. this commit fixes some bugs in the `no-extra-parens` rule where parentheses are unnecessary for most variable names, but are necessary when the variable is called "let".	True	
chore: fix prefer-arrow-callback lint errors (#7651)	False	
feat: add `prefer-object-has-own` rule (#15346)* feat: add `prefer-object-has-own` ruleco-authored-by: gautam arora <gautamarora6248@gmail.com>* test: add more valid cases* fix: cover more cases* chore: add jsdoc type annotation* fix: cover more cases* test: add more invalid test cases* fix: improve meta data* test: add assertions for location* docs: update `prefer-object-has-own`* fix: report for object with global scope only* docs: add rule id* feat: add fixer for `prefer-object-has-own` rule* chore: udpate comment* chore: apply suggestions* docs: udpate* docs: add example* chore: update comment* test: add another valid test case* docs: fix typo* fix: improve autofix* fix: refactor logic and avoid false positives* refactor: code* docs: apply latest feedback* refactor: apply the latest suggestions* refactor: apply the latest feedback* test: add more cases* docs: update* docs: apply suggestions from code reviewco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: gautam arora <gautamarora6248@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
build: fix linting errors on master (#11428)5018378131fd5190bbccca902c0cf4276ee1581a broke the build on master because it wasn't rebased onto f6ba633f56eca6be20fc4b0d9496a78b9498d578 when the tests were run.	True	
fix: no-unneeded-ternary change code behavior after fix (fixes #8507) (#8624)* fix: no-unneeded-ternary changed code behavior after fix* chore: add tests for no-unneeded-ternary* fix: do not fix already parenthesed nodes	True	
upgrade: eslint-tester to latest	True	
fix: require-await ignore async generators (fixes #12459) (#13048)* fix: require-await should ignore async generators (fixes #12459)* chore: docs update and test update* docs: fixed typo for generator to generatorsco-authored-by: kai cataldo <kai@kaicataldo.com>* chore: added more tests for async generatorsco-authored-by: kai cataldo <kai@kaicataldo.com>	True	
update: add cwd option for cli-engine (fixes #4472)	True	
docs: add more examples with arrow functions for no-sequences rule (#14313)* docs: add more examples with arrow functions for no-sequences rule* docs: update	True	
fix: `no-cond-assign` had been missing simplest pattern (fixes #3249)	False	
build: add check for license issues (fixes #782)	True	
fix: always ignore defaults unless explicitly passed (fixes #5547) (#5820)* fix: always ignore defaults unless explicitly passed (fixes #5547)* base ignore message on type of ignore* tweak ignore warning messages	False	
docs: reintroduce misspelling in `valid-typeof` example (#9753)this example is intended to be an invalid `typeof` string, to illustrate that the rule reports an error if the user makes a typo like this. however, the spelling was inadvertently corrected in aedae9dfe027bf1e068680db678a070ebe737e56, so the documentation is now incorrect (it says that `valid-typeof` reports an error for that code, when in fact it does not).	True	
new: space-after-function-name (fixes #1340)adds a new rule, `space-after-function-name`, that enforcesconsistent spacing between a function name and its parameters.	True	
chore: use meta.messages in some rules (2/4) (refs #9870) (#10773)* chore: use meta.messages in global-require* chore: use meta.messages in guard-for-in* chore: use meta.messages in handle-callback-err* chore: use meta.messages in id-blacklist* chore: use meta.messages in id-length* chore: use meta.messages in id-match* chore: use meta.messages in implicit-linebreak* chore: use meta.messages in indent-legacy* chore: use meta.messages in indent* chore: use meta.messages in jsx-quotes* chore: use meta.messages in init-declarations* chore: use messageid in rule key-spacing* chore: use messageid in rule linebreak-stylesigned-off-by: weiran.zsd <weiran.zsd@outlook.com>* chore: use messageid in rule max-lensigned-off-by: weiran.zsd <weiran.zsd@outlook.com>* chore: use messageid in rule line-comment-positionsigned-off-by: weiran.zsd <weiran.zsd@outlook.com>* chore: use messageid in rule lines-around-commentsigned-off-by: weiran.zsd <weiran.zsd@outlook.com>* chore: use messageid in rule lines-around-directivesigned-off-by: weiran.zsd <weiran.zsd@outlook.com>* chore: use messageid in rule lines-between-class-memberssigned-off-by: weiran.zsd <weiran.zsd@outlook.com>* chore: use messageid in rule max-depthsigned-off-by: weiran.zsd <weiran.zsd@outlook.com>* global-requiresigned-off-by: weiran.zsd <weiran.zsd@outlook.com>* chore: use messageid in rule max-lines-per-functionssigned-off-by: weiran.zsd <weiran.zsd@outlook.com>* chore: use messageid in rule max-linessigned-off-by: weiran.zsd <weiran.zsd@outlook.com>* chore: use messageid in rule max-nested-callbacks* chore: use messageid in rule max-params* chore: use messageid in rule max-statements-per-line* chore: use messageid in rule max-statements-per-function* chore: fix max-lines-per-function* chore: use messageid in rule max-statements* chore: use messageid in rule new-cap* chore: use messageid in rule multiline-ternary* chore: use messageid in rule multiline-comment-style* chore: use messageid in rule newline-after-var* chore: use messageid in rule new-parens* chore: use messageid in rule newline-before-return* chore: use messageid in rule newline-per-chained-call* chore: use messageid in rule no-async-promise-executor* chore: use messageid in rule keyword-spacing* chore: use messageid in rule yoda* chore: fix wrap-iife (+1 squashed commits)squashed commits:[9959b8fc] chore: use messageid in rule wrap-iife* chore: use messageid in rule unicode-bom* chore: use messageid in rule use-isnansigned-off-by: weiran.zsd <weiran.zsd@outlook.com>* chore: use messageid in rule valid-typeofsigned-off-by: weiran.zsd <weiran.zsd@outlook.com>* chore: use messageid in rule vars-on-topsigned-off-by: weiran.zsd <weiran.zsd@outlook.com>* chore: use messageid in rule yield-star-spacing* chore: use messageid in rule valid-jsdoc* chore: use messageid in rule template-curly-spacing* chore: use messageid in rule template-tag-spacing* chore: use meta.messages in switch-colon-spacing* chore: use meta.messages in strict* chore: use meta.messages in symbol-description* chore: use meta.messages in no-duplicate-import* chore: use meta.messages in no-fallthrough* chore: use meta.messages in space-unary-ops* fix: rule spae-unary-ops messages* chore: use messageid in rule space-unary-ops* chore: use messages in rule no-floating-decimal* chore: use messages in rule no-invalid-meta* fix: rule space-unary-ops messages* chore: use messages in rule no-unexpected-multiline* chore: use messages in rule no-unsafe-negation* chore: use messages in rule no-undef* chore: use messages in rule no-unused-labels* chore: use messages in rule operator-assignment* chore: use messages in rule prefer-const* chore: fix failing tests* chore: fix cli-engine tests failingsigned-off-by: weiran.zsd <weiran.zsd@alibaba-inc.com>* chore: convert no-unsafe-negation to single messagesid + data (+3 squashed commits)squashed commits:[407f0f27] fix: yield-star-spacing messagessigned-off-by: weiran.zsd <weiran.zsd@alibaba-inc.com>[66ab4082] chore: do not dynamically generating messageid[ff4a3b12] chore: indent rule messageid expected => wrongindentation	True	
update: add fixer method to linter api (#8631)	True	
docs: added section to shareable configadded in documentation on how a package can use `extends` and reference local config files.	True	
update: `no-mixed-require` to have non boolean option (fixes #3922)	True	
docs: added holidaycheck ag as user	False	
site generation build step and documentation updates to support it (fixes #478)	True	
fix: change err report in constant condition (fixes #9398) (#9436)* fix: change err report in constant condition (fixes #9398)* kick off the pr checks* kick off the pr checks	False	
added one-var and sorted some rules	True	
fix lint warning	False	
docs: add docs for no-return-assign (refs #562)	True	
chore: assertions on reporting loc in `unicode-bom` (refs #12334) (#14809)* update: add end location to report in `unicode-bom`* update: report start location only	True	
added rule for missing 'use strict' (fixes #321)	True	
new: added grep-style formatter (fixes #2991)	True	
update: don't ignore comments (no-trailing-spaces) (#9416)	False	
improve performance of gettokens	True	
docs: update babel links (#15624)	False	
sponsors: sync readme with website	True	
fix: remove default .js from --ext cli option (#13176)pr #12677, `breaking: lint overrides files`, removed the default `.js`value from the  default cliengine options. however, it did not removethe same default value from the `--ext` option parsed by optionator.because of this, when running `eslint .` without the `--ext` option,optionator would insert a default `--ext .js` value that would be passedon to the cliengine. eslint only lints `overrides` files if the `--ext`cli option is not passed, so the default `--ext .js` option preventedeslint from ever reaching the `overrides` file path checking flow.	True	
update: no-return-await with with complex `return` argument (fixes #7594) (#7595)* update: no-return-await with with complex  argument (fixes #7594)* no-return-await with tail call position checking	False	
fixes #505: no-cond-assign should ignore doubly parenthesised tests	False	
build: fix version number on release (fixes #4921)	False	
build: changelog update for 7.27.0	True	
added more rules	False	
docs: fix typo (#14225)	False	
2.0.0-beta.2	False	
build: ensure changelog works with large semver versions	False	
build: package.json and changelog update for 3.0.1	True	
update: `prefer-rest-params` relax for member accesses (fixes #5990) (#6871)	True	
sponsors: sync readme with website	True	
new: no-negated-condition rule (fixes #3740)	False	
chore: add stale issue/pr checker (#15151)	False	
chore: typo in jsdoc on timing.display's return value (#11755)	False	
update doc title for quote	True	
docs: fix closing code fence on cli docs	False	
chore: upgrade eslint-plugin-eslint-plugin (#14590)* chore: upgrade eslint-plugin-eslint-plugin* chore: revert generator fixers	True	
update: `key-spacing` should allow 1+ around colon (fixes #3363)	False	
created link from rules readme.md to no-plusplus.md documentation	True	
docs: document ecmafeatures	False	
(fixes #622) add rule id on documentation pages	False	
3.1.1	False	
new: add rule "prefer-named-capture-group" (fixes #11381) (#11392)* new: add rule "require-named-capture-group" (fixes #11381)* chore: fix linting errors* update: change rule name* update: use `referencetracker`* update: ignore regexp syntax errors* update: detect "unicode" flag* update: report group instead of ast node* docs: improve words* chore: enable early return* update: improve the message* chore: simplify messageco-authored-by: g-plane <g-plane@hotmail.com>	False	
rule: no control characters in regular expressions (fixes #338)	False	
build: fixing site generation	False	
fix: no-multi-spaces to avoid reporting consecutive tabs (fixes #9079) (#9087)an unintended side-effect of the refactor in 0f9727902fce753c87f45d439c521c93850d7dd8 caused `no-multi-spaces` to start reporting any consecutive whitespace characters between tokens, rather than just reporting consecutive spaces. this commit fixes the rule to only report consecutive spaces.	True	
upgrade: @eslint/eslintrc@1.0.0 (#14865)* upgrade: @eslint/eslintrc with `exports` field* use environments from @eslint/eslintrc legacy api* use eslint/eslintrc main branch* use universal entry point* @eslint/eslintrc@1.0.0	False	
docs: add missing info about special status of home-dir config files. (#9472)this seems to be the last step in liquidating issue #7729.	True	
docs: ruletester doesn't require any tests (fixes #4681)	False	
docs: remove blockbindings references (#9446)* docs: remove blockbindings in no-use-before-define (fixes #8368)* chore: remove blockbindings reference in no-catch-shadow* chore: remove blockbindings reference in test desctription* chore: use existing ecmafeatures in tests	True	
update: require `meta` for fixable rules in ruletester (refs #13349) (#13489)* update: require `meta` for fixable rules in ruletester (refs #13349)* fix jsdoc* throw for legacy-format fixable rules	True	
add rulecontext.filename property (for eslint/eslint#468).	True	
adds `space-after-keywords` rule (fixes #807)enforces spacing after keywords such as 'if', 'do', 'for', and so on.	True	
fix: multi-line variable declarations indent  (fixes #3139)	False	
chore: simplify internal `no-invalid-meta` rule (#14842)	False	
new: no-empty-pattern rule (fixes #3668)	False	
update: ecmaversion allows "latest" (#14720)* revert "revert "update: ecmaversion defaults to 5, and allows "latest" (#14622)" (#14711)"this reverts commit 97d9bd2a8061e61e98ebabb4c41231af1df7629f.* chore: use parser.$parser to check if it's espree* chore: add some tests* chore: not set default 5* chore: make the $parser non-enumerable* chore: use symbol* chore: a small refactor	True	
docs: removed incorrect exampledocs: removed incorrect example for "computed-property-spacing"	True	
fix: support exceptions in no-multi-spaces (fixes #1755)	False	
docs: specify results of `no-unused-var` with `args` (fixes #5334)	False	
update: add comment to message in no-warning-comments (fixes #12327) (#13522)* update: added the comment in no-warning-comments (fixes #12327)* update: changed display logic* update: changed the char limit and early break* chore: refactor the logic* chore: smallchanges* chore: refactor small* chore: added tests and refactor* chore:    correct tests	True	
sponsors: sync readme with website	True	
chore: avoid relying on undocumented linter#getfilename api in tests (#9218)	False	
fix: improve `newline-per-chained-call` message (fixes #6340) (#6360)	False	
build: changelog update for 7.4.0	True	
build: test using io.js as well	False	
docs: fix multiple broken links (#14833)	False	
reformatted gruntfile	True	
docs: no-restricted-imports is only for static imports (#13863)	True	
sponsors: sync readme with website	True	
chore: upgrade eslint-visitor-keys for class static blocks (#15277)	True	
fix: space-after-keywords should ignore extra parens (fixes #2847)	False	
increased test coverage on no-mixed-requiresadded test cases for branches that were not being reached and removed an unnecessary if statement.	True	
fix: support arrow functions in no-return-assign (fixes #4743)	False	
fix: `constructor-super` with the code path analysis (refs #3530)	True	
fix: `newline-before-return` shouldn't disallow newlines (fixes #6176) (#6217)	True	
fix: incorrect error location for object-curly-spacing (fixes #4957)	True	
fix: keyword-spacing private name compat (refs #14857) (#14946)* fix: keyword-spacing private name compat (refs #14857)* update tests/lib/rules/keyword-spacing.jsco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	False	
docs: fix typo (#13092)* docs: add further reading to rulethis article really is the clearest explanation of this rule and how to understand it.* docs: fix line spacingmy b ????	True	
update: object-property-newline end location (refs #12334) (#13399)* update: object-property-newline end location (refs #12334)* chore: tests changes* chore: add endline/column to one more testco-authored-by: brandon mills <mills.brandont@gmail.com>	True	
sponsors: sync readme with website	True	
fix: create `.eslintrc.cjs` for `module` type (#14304)* fix: create `.eslintrc.cjs` for `module` type* chore: add tests* chore: more test* chore: refactor tests* chore: refactor tests* chore: refactor test* chore: refactor tests	True	
update: add fixer for `newline-after-var` (fixes #5959) (#7375)* update: add fixer for `newline-after-var` (fixes #5959)* add tests for lines that only contain semicolons	True	
fix: adding regexp literal exception (fixes #1589)	False	
add rule for implied eval via settimeout/interval	True	
chore: add integration tests for autofixing (fixes #5909) (#7349)	True	
cleaning up eslinttester	False	
fix: false positive in `camelcase` with combined properties (#15581)* fix: false positive in `camelcase` with combined optionsfixes #15572* test: add mores cases for camelcase rule* chore: update jsdoc comment* test: add location* chore: remove unwanted change	True	
docs: correct type of `outeriifebody` in `indent` (fixes #6581) (#6584)	False	
1.7.2	False	
chore: add utils for rule tests (#11453)	True	
docs: link to unit tests from rule documentation (#15207)in the resources section at the bottom of each rule's documentation, wealready link to the rule's implementation and the documentation'smarkdown source. this adds a link to the rule's unit tests.	True	
update: key-spacing groups must be consecutive lines (fixes #1728)	False	
new: lines-between-class-members rule (fixes #5949) (#9141)	False	
update: split out generic ast methods into utility (fixes #962)	True	
chore: remove duplicate code (#14719)	False	
update to latest optionatorallows for multiple flags to array,update env flag documentation to reflect thiscloses #773	True	
docs: missing quotes in jsonthis was not valid json.	True	
fix: plugins without rulesconfig causes crash (fixes #1388)	True	
sponsors: sync readme with website	True	
upgrade: update js-yaml package to 3.13.1 version (#11607)	True	
docs: add missing items to migration guide (#11628)	True	
2.3.0	False	
build: changelog update for 4.11.0	True	
rule: no-iteratorthe `no-iterator` rule disallows the use of the `__iterator__` property. the `__iterator__` property is not supported in many browsers and should be used with caution.foo.prototype.__iterator__ = function() {return new fooiterator(this);}this rule matches the *iterator* rule in js(h|l)int.	True	
docs: remove option that is not being used in max-len rule	False	
fix: merge various command line configs at the same time (fixes #6104) (#6108)	False	
fix: no-unused-vars to check only file globals (fixes #975)	True	
breaking: disallow invalid rule defaults in ruletester (fixes #11473) (#11599)* breaking: disallow invalid rule defaults in ruletester (fixes #11473)* update: remove remaining invalid defaults from core rules	False	
docs: add another pre-commit hook to integrations (#6666)no problem if you don't accept changes of this nature; i noticed the existing linked pre-commit hook linted the on-disk contents of a staged file rather than just the staged changes. my script only lints the staged changes.	True	
fix: object-shorthand should only lint computed methods (fixes #6015) (#6024)	False	
fixing eslint errors and unittests	False	
upgrade: @eslint/eslintrc to v0.4.3 (#14808)	True	
chore: upgrade @eslint/eslintrc@1.0.5 (#15389)	False	
update: implement auto fix for space-in-parens (fixes #5050)	True	
docs: fix some typos.	True	
test to make sure empty case with one line break is safe	True	
fix: --quiet no longer fixes warnings (fixes #8675) (#8858)* fix: --quiet no longer fixes warnings (fixes #8675)* simplifying quietfixpredicate	False	
fix: support async iteration (fixes #9891) (#9957)* update keyword-spacing* update no-await-in-loop* update object-shorthand* update require-await* update tests of generator-star-spacing* update tests of no-useless-computed-key	True	
fix: add for-of to `curly` rule (fixes #4571)	True	
update: fix 'function' in padding-line-between-statements (fixes #10487) (#10676)	False	
docs: add fixable note to no-implicit-coercion docs (#7096)	True	
update: add missing schema to rules (fixes #2858)	True	
feat: update lines-around-comment for class static blocks (#15323)updates the `lines-around-comment` rule so that options `"allowblockstart"` and `"allowblockend"` apply to class static blocks.refs #15016	True	
docs: add `.md` to link (for github users) (#9501)	True	
fix: use onevalueperflag for --ignore-pattern option (fixes #4507)updates optionator from 0.6.0 to 0.7.1multiple ignore patterns must be specified by using the flag multipletimes, not by using a comma (since the pattern could include a comma)	True	
update: add disallowtemplateshorthand option in no-implicit-coercion (#13579)* update: add templatestring option in no-implicit-coercion (fixes #12866)this adds the `templatestring` option to `no-implicit-coercion`. this makes therule report the following code:```js`${foo}````for backwards compatibility, this was added as a separate option instead of asdefault behaviour.* fix no-implicit-coercion templatestring examples* skip tagged template strings in no-implicit-coercion* add missing tests for no-implicit-coercion* used cooked template string values* add missing documentation for no-implicit-coercionnote that the `templatestring` option isn???t affected by the `string` option.* add missing tests for no-implicit-coercion templatestring* rename templatestring to disallowtemplatestring* fix typo in no-implicit-coercion docs* add tagged template string example for no-implicit-coercion* update docs/rules/no-implicit-coercion.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
update: add automated suggestion to `radix` rule for parsing decimals (#14291)	True	
chore: use "file:" dependencies for internal rules/config (#11465)this updates the setup of our internal linting rules to use "file:" dependencies within the project, rather than the `eslint-plugin-rulesdir` package. if this works well, it could be a good alternative for packages like `eslint-plugin-rulesdir` and `eslint-plugin-self`.	True	
update: allow valid-jsdoc to specify replacement tags (fixes #637)	True	
update: added comments support to .eslintignore (fixes #1084)	True	
new: `prefer-promise-reject-errors` rule (fixes #7685) (#7689)	False	
docs: make the lint message `source` property a little more subtle (#9735)	True	
docs: correct alphabetical ordering in rule listin going through the list of rules, i found that they were mostly sorted alphabetically within each category, but there were a few rules that were out of place.  this pr corrects that.there were a number of cases where one rule name is a prefix of another rule name (e.g., `semi` and `semi-spacing`).  in all but one of the cases, the shorter (prefix) name appeared after the longer name.  when sorting, the prefix would normally come first, so that is what i did here.  if you'd rather have the prefix names come after the longer versions, i can update this pr accordingly, and fix the remaining case that had the opposite order.	True	
fix: backtick behavior in quotes rule (fixes #3090)	False	
changes dotnotation rule to match jshint style	True	
run linting with npm test as well	False	
upgrade: globals@11.7.0 (#10497)	False	
sponsors: sync readme with website	True	
build: changelog update for 7.32.0	True	
update: fix no-unused-vars false negative with comma operator (#14928)* update: fix no-unused-vars false negative with comma operator* fix: no-unused-vars false positive	True	
chore: upgrade eslint-plugin-eslint-plugin (#14738)	False	
chore: fix site generation script for releases (#11766)	True	
chore: avoid using private linter apis in linter tests (refs #9161) (#9175)this updates the tests for `linter` to use the public `linter#definerule` api rather than the private `linter#on` api.	True	
update: indent flatternary option to handle `return` (fixes #9285) (#9296)this updates the `flatternaryexpression` option of `indent` to check whether a ternary expression is on the same *line* as a statement, rather than checking if the expression itself starts the statement.	True	
fix: improve autofix of `prefer-object-has-own` (#15419)* fix: improve autofix of `prefer-object-has-own`* fix: cover more cases* test: add more cases* test: add more test cases* fix: avoid unnecessary space in autofix output* refactor: code* refactor: apply suggestion	True	
change: --rulesdir now can be specified multiple times (fixes #830)	False	
6.5.1	False	
sponsors: sync readme with website	True	
docs: clarification in no-unused-varsactually, you may have unused arguments after the first used one; so this statement was wrong. [ci skip]	True	
chore: fix formatters/table test (#11534)if standalone mocha command ran it, coloring caused to fail the tests.	True	
update: check logical assignment operators in the complexity rule (#13979)	True	
fix: block-scoped-var to work with destructuring (fixes #2059)	True	
fix: `no-useless-escape` false positive in jsxattribute (fixes #5882)	False	
feat: support async formatters (#15243)* feat: support async formatterfixes #15242* test: add test for async formatter* test: tweak async formatter fixture* docs: support async formatter* docs: fix formatter type* test: move async formatter to formatters* chore: add formatter typedef* style: remove extra space* docs: update eslint version for async formatterco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* chore: format is not optionalco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* update docs/developer-guide/working-with-custom-formatters.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>	True	
fixes #149	False	
chore: convert remaining old-style context.report() calls to the new api (#7763)	True	
docs: fix linebreaks between versions in changelog (#13488)	False	
fix: id-length rule doesn't catch violations in arrow function parameters (fixes #3275)	False	
docs: provide install commands for yarn (#13661)npx doesn't work properly with plugins installed with yarn.	True	
upgrade: some deps (fixes #11372) (#11373)	True	
fix: adding check if char is non-alphabetic to new-cap (fixes #940)	True	
fix: support for dash and slash in `valid-jsdoc` (fixes #1598)	True	
4.19.1	False	
docs: add @pedrottimark as a committer	False	
change: switch :after to :exit (fixes #605)	True	
fix: relax no-useless-escape's handling of ']' in regexes (fixes #7789) (#7793)']' is only allowed to be unescaped in regular expressions when the engine implements annex b, a legacy part of the ecma262 spec which is only normative for browsers. in engines that do not implement annex b, regular expressions like /]/ are a syntax error. since eslint can't tell what engine the code will run on, it shouldn't consider escaping ] to be "useless" since it's only useless on engines that implement annex b, and only in regular expressions that don't contain the unicode flag. (for example, the regular expression /]/u is a syntax error even on engines that implement annex b.)	True	
docs: fix typo (then -> than)	False	
docs: fix description for `never` in multiline-ternary (fixes #13368) (#13452)	True	
docs: fix a word in no-implied-eval (#10539)	False	
docs: update outdated link (#13677)* update config* docs: update outdated link	False	
build: add node v10 to travis (#10262)* build: add node v10 to travis* chore: fix assert message	True	
docs: update space-in-parens related rules (#13985)	False	
docs: add section on file extensions to user-guide/configuring	True	
rule: no undefined when initializing variables	False	
fix: `no-extra-parens` incorrect precedence (fixes #7978) (#7999)	False	
update: fix `no-unused-vars` false negative (fixes #7124) (#7143)	False	
build: fix path related failures on windows in tests (fixes #4061)	False	
docs: update pull request template (#14336)* docs: update pull request template* update .github/pull_request_template.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>co-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	False	
docs: fix typo in object-curly-newline.md (#8002)it looks like the curly braces got turned into square brackets between the incorrect and correct code examples.	True	
docs: disambiguate types `formatterfunction` and `loadedformatter` (#15727)* chore: disambiguate types `formatterfunction` and `loadedformatter`fixes #15654* code review update* remove redundant `lintresult` type import* remove note about `context` argument of `formatterfunction` from jsdoc* docs: revert to using variable name `formatter` in code examples	True	
ci: use node v16 for `macos` and `windows` jobs (#15418)	True	
switching travis to use eslint (closes #462)	True	
update: implement auto fix for `no-extra-semi` rule (fixes #3745)	True	
build: update webpack resolve.mainfields to match website config (#13457)	True	
docs: fix node 6 lts eol date (#11676)node.js 6 went eol in april 2019, not 2018	False	
fix: remove path analysis from debug log (fixes #4631)	False	
update: implement auto fix for generator-star-spacing rule (fixes #3873)	True	
build: make prerelease script publish to github/website (#10151)	True	
fixing broken links in documentation	False	
fix: ensure configs from a plugin are cached separately (fixes #8792) (#8798)* fix: ensure configs from a plugin are cached separately (fixes #8792)config files are cached by file path to avoid needing to load the same config file twice. however, configs provided by plugins all have the same file path (the index file of the plugin). this created a bug when loading multiple configs for the same plugin where only the highest-precedence config from that plugin would be loaded. all other configs from that plugin would be considered identical by the cache, so they would all end up getting pulled from the cache as the same config.this commit updates the caching logic to use the config full name as a cache index. this is still the file path when resolving a config from the filesystem, but it is the unique plugin config identifier (e.g. 'plugin:foo/node-config') when resolving a plugin config.* remove unused second argument from loadconfigfile call* fix inaccurate comments for config-cache methods	True	
docs: turn off liquid in example	False	
fix: asi indentation issue (fixes #3514)	False	
chore: prefer smaller scope for variables in codebase (#9265)	True	
fix: `no-return-assign` to check for null tokens (fixes #6159) (#6162)	True	
5.15.2	False	
sponsors: sync readme with website	True	
added gitter badge	False	
chore: extract config comment parsing (#11091)* chore: extract config comment parsing* add more debug messages* fix linting errors* remove unused tests and constructor* add comment to updated test* fix lint issue	True	
fix: check unused vars in exported functions (fixes #2678)	False	
docs: remove extra punctuation from readme (#9640)	False	
upgrade: update dependencies. (#10168)	False	
docs: fix typo in 6.0.0 migration guide (#11870)	False	
7.5.0	False	
build: package.json update for eslint-config-eslint release	True	
breaking: drop node v10/v13/v15 (fixes #14023) (#14592)* breaking: drop node v10/v13 (fixes #14023)* update .github/workflows/ci.ymlco-authored-by: brandon mills <btmills@users.noreply.github.com>* update relative-module-resolver.js* update package.jsonco-authored-by: micha??l de boey <info@michaeldeboey.be>* update ci.yml* update readme.md* update getting-started.md* chore: fs-teardown ^0.1.3co-authored-by: brandon mills <btmills@users.noreply.github.com>co-authored-by: micha??l de boey <info@michaeldeboey.be>	True	
update: improve no-extra-parens error message (#10748)when i encountered this error, it was not unclear to me what theproblem was or what alternative would be preferred.the input was:```jsreturn ( { foo: 1, bar: 2 }[ key ] || 0 );```receiving the following in atom's footer:```eslint (0|4), gratuitous parentheses around expression., line 165, column 17```using the phrase "unnecessary" instead, which also matches the errormessage used by other eslint rules.	True	
cache if file is not found	False	
update: semi to also enforce not using semicolons (fixes #618)	True	
update: introduce minkeys option to sort-keys rule (fixes #11624) (#11625)* fix #11624 by adding minkeys option to sort-keys* update documentation for sort-keys with minkeys option	True	
fix: ensure allowing `await` as a property name (fixes #5564)	False	
fix: ensure no-await-in-loop reports the correct node (fixes #9992) (#9993)	False	
chore: lazy loading for rules (#11705)	True	
upgrade: shelljs to 0.3.0	True	
chore: fix invalid syntax in require-await tests (#13277)	False	
docs: change beginner to good first issue label text (#9726)	True	
fix: add helpful message when test case has non-string code/name (#15425)fixes #13917	False	
update no-extra-semi.mdaccidentally, the last paragraph was part of the last code block.	False	
update: add support for class in `valid-jsdoc` rule (fixes #4279)	True	
fix: enable full support for eslint-env comments (refs #2134)	True	
docs: references correct config file name (#12885)from eslint/website#693according to the `configuration.md` page, the `.eslintrc` file format has been deprecated, and the `--init` option will generate either a `.yml`, `.js`, or `.json` file depending on what you pick in the initialization wizard.this commit syncs the getting-started instructions with the configuration instructions.	True	
fix: not set ecmaversion to 6 when sourcetype=module (fixes #9687) (#11649)pr #11610 was aimed to fix the issue #9687, however it did not work,since ecmaversion has been normalized to 6 (when sourcetype is setting to 'module').this pr removed the normalize behaviour, and fixed failing tests.	True	
update: ensure semi-spacing checks import/export declarations (#8033)* update: ensure semi-spacing checks import/export declarations* also check exportalldeclarations and exportdefaultdeclarations	True	
upgrade: upgrade optionator to avoid license issue (fixes #11536) (#12537)	True	
new: add addplugin method to cli-engine (fixes #1971)	True	
4.12.0	False	
docs: fix sibling selector descriptions (#14099)	True	
fix: incorrect location in no-fallthrough (fixes #4516)	False	
breaking: upgrade to espree v4 alpha (refs #9990) (#10152)this upgrades espree to v4.0.0-alpha.0 and removes our duplicated teststhat pair `experimentalobjectrestspread` and `ecmaversion: 2018`. itdoes not implement the deprecation warning or translating the former tothe latter in the background.	True	
update: deprecate id-blacklist rule (#13465)* fix: deprecates id-blacklist (and documents deprecation)* update docs/rules/id-blacklist.mdco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>* copies contents of id-denylist to id-blacklist verbatim* deprecates id-blacklist and updates docs url* adds replacedby metadataco-authored-by: milos djermanovic <milos.djermanovic@gmail.com>	True	
build: update travis to only test node 0.10 (refs #734)	True	
update: add more `indent` options for functions (fixes #6052) (#7043)	True	
first draft proposal for a cyclomatic complexity eslint rule	True	
fix: allow extending @scope/eslint/file (fixes #4800)also:- fix english typos.- add failing test.- fix extending @scope/eslint/file bug.	True	
breaking: use default for complexity in eslint:recommended (fixes #6021) (#6410)	True	
updated setup doc	False	
docs: update cli docs to prefer local install (#15513)* docs: update cli docs to prefer local install* fix missing references	True	
sponsors: sync readme with website	True	
fix: update broken @eslint/eslintrc version (fixes #13641) (#13647)	False	
enabled require("eslint") and exposed out cli.i've added the "main" key to the package.json, pointing it to lib/api.js. the api.js file exports /lib/eslint.js and /lib/cli.js. this enables those who have run `npm install eslint` to then require eslint in their project like so:var eslint = require("eslint");prior to this change calling `require("eslint")` would throw an error.in addition, developers can now use the cli from their projects, without having to `require` it from the `node_modules` directory (which is generally not good). developers can now use the cli programatically, like so:var eslint = require("eslint");eslint.cli.execute(["-h"]);	True	
fix: prefer-numeric-literals autofix removes comments (#12313)	True	
update: fix space-unary-ops behavior with postfix updateexpressions (#8391)previously, space-unary-ops would always evaluate the spacing between the first and second tokens of an updateexpression (e.g. `foo++`). this worked fine when the argument had one token, but it led to the wrong behavior if the argument had multiple tokens (e.g. in `foo.bar++`, the space between `foo` and `.` would be checked, rather than between `bar` and `++`). this commit updates the rule to check the *last* two tokens of postfix updateexpressions.	True	
fix: restrict use-isnan violations to comparison operators. (fixes #1535)	True	
sponsors: sync readme with website	True	
fix: `indent` crash on parenthesized global return values (fixes #7573) (#7596)* fix: `indent` crash on parenthesized global return values (fixes #7573)* add tests without trailing semicolons	False	
fix: allow scoped packages in configuration extends (fixes #2544)	False	
sponsors: sync readme with website	True	
docs: update example of results returned from `executeonfiles` (#7362)	False	
docs: change example wording from warnings to problems (fixes #3676)	True	
upgrade: upgrade deps (#10184)	False	
update: no-param-reassign error msgs (fixes #5705)- change error message if rule triggers from prop side effectvs from setting param directly.this fixes #5705.	False	
breaking: log number of fixable problems (fixes #7364) (#8324)* breaking: log number of fixable problems (fixes #7364)* shorten message* add fixable counts to codeframe* update documentaiton and rebase* fixing minor issues* fixing indentation issues	True	
drying unittests and converting them to mocha	True	
3.6.0	False	
sponsors: sync readme with website	True	
chore: add test for no-constant-condition (#12836)	True	
chore: fix cliengine tests when os.tmpdir is a symlink (#11697)previously, this was causing test failures on macos because some parts of the cliengine tests call realpath() and others didn't.	True	
docs: remove appveyor badge	False	
update: check computed method keys in no-extra-parens (#11973)* update: check computed method keys in no-extra-parens* remove member null check	False	
update: no-extend-native checks global scope refs only (fixes #8461) (#8528)* update: no-extend-native checks global scope refs only (fixes #8461)* reorder code for clarity	True	
build: add node 12 (#11648)	False	
chore: use updated token iterator methods (#8103)	True	
chore: remove dependency to user-home (fixes #8604) (#8629)	True	
update: throw error when fix range is invalid (#14142)* do nothing when fix range is invalid* move validation to rule-fixer and add error logging* move validation to report-translator* update from review* test ranges with undefined; test fix merging* assert & test missing range	True	
docs: no-eval replace dead link with working one (#15568)	False	
fix: check switch statements in space-before-blocks (fixes #1397)	True	
fix: `indent` arrow function check fix (fixes #4142)	False	
docs: reorganize configuration documentation (#13837)* create configuration files* create index file* create configuration files* delete configuration files* create configuration files* create language options* create rules* create plugins* create ignoring code* update readme.md* update readme.md* rename language options.md to language-options.md* rename configuration files.md to configuration-files.md* rename rules.md to rules.md* rename plugins.md to plugins.md* rename ignoring code.md to ignoring-code.md* rename docs/user-guide/configuring eslint/readme.md to docs/user-guide/configuring-eslint/readme.md* rename docs/user-guide/configuring eslint/configuration-files.md to docs/user-guide/configuring-eslint/configuration-files.md* rename docs/user-guide/configuring eslint/ignoring-code.md to docs/user-guide/configuring-eslint/ignoring-code.md* rename docs/user-guide/configuring eslint/language-options.md to docs/user-guide/configuring-eslint/language-options.md* rename docs/user-guide/configuring eslint/plugins.md to docs/user-guide/configuring-eslint/plugins.md* rename docs/user-guide/configuring eslint/rules.md to docs/user-guide/configuring-eslint/rules.md* update readme.md* update readme.md* update readme.md* update configuration-files.md* update ignoring-code.md* update ignoring-code.md* update ignoring-code.md* update ignoring-code.md* update readme.md* update plugins.md* update rules.md* update configuration-files.md* update language-options.md* update rules.md* update plugins.md* update ignoring-code.md* docs: update configurating eslint readme.mdadded space before and after the list items to remove an error.* docs: update plugins.md in configuring eslintupdated the file to remove the error in line 63.* docs: update readme.md in configuring eslintupdated the heading to remove the error in line 1.* docs: renamed the directory to configuring-eslintrenamed parent directory to remove the uppercase letters from the name.* docs: renamed the directory to configuring-eslintrenamed the parent directory to remove the uppercase letters from the name.* docs: renamed the directory to configuring-eslintrenamed the parent directory to remove the uppercase letters from the name.* docs: renamed the directory to configuring-eslintrenamed the parent directory to remove the uppercase letters from the name.* docs: renamed the directory to configuring-eslintrenamed the parent directory to remove the uppercase letters from the name.* docs: renamed the directory to configuring-eslintrenamed the parent directory to remove the uppercase letters from the name.* docs: update readme.md for configuring eslintupdated the directory name by changing it from 'configuring-eslint' to 'configuring' to use the already-available directory.* docs: update configuration filesupdated the directory name by changing it from 'configuring-eslint' to 'configuring' to use the already-available directory.* docs: update ignoring-code.mdupdated the directory name by changing it from 'configuring-eslint' to 'configuring' to use the already-available directory.* docs: update language-options.mdupdated the directory name by changing it from 'configuring-eslint' to 'configuring' to use the already-available directory.* docs: update plugins.mdupdated the directory name by changing it from 'configuring-eslint' to 'configuring' to use the already-available directory.* docs: update rules.mdupdated the directory name by changing it from 'configuring-eslint' to 'configuring' to use the already-available directory.* docs: update docs/user-guide/configuring/readme.mdaccepted a suggestion on the readme.md file.co-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* docs: update docs/user-guide/configuring/readme.mdaccepted a suggested change in the readme.md file.co-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* docs: update docs/user-guide/configuring/configuration-files.mdaccepted a suggested change to configuration-files.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* docs: update docs/user-guide/configuring/configuration-files.mdaccepted a suggesetd change to configuration-files.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* docs: update docs/user-guide/configuring/configuration-files.mdaccepted a suggested change to configuration-files.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* docs: update docs/user-guide/configuring/configuration-files.mdaccepted a suggested change to configuration-files.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* docs: update docs/user-guide/configuring/configuration-files.mdaccepted a suggested change to configuration-files.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* docs: update docs/user-guide/configuring/configuration-files.mdaccepted a suggested change to configuration-files.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* docs: update docs/user-guide/configuring/configuration-files.mdaccepted a suggested change to configuration-files.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* docs: update docs/user-guide/configuring/configuration-files.mdaccepted a suggested change to configuration-files.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* docs: update docs/user-guide/configuring/configuration-files.mdaccepted a suggested change to configuration-files.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* docs: update docs/user-guide/configuring/configuration-files.mdaccepted a suggested change to configuration-files.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* docs: update configuration-files.mdaccepted two suggested changes to configuration-files.md* docs: update configuration-files.mdremoved the names of deprecated files (.eslintrc), using '.eslintrc.json' instead.* docs: update docs/user-guide/configuring/readme.mdaccepted a suggestion to improve the readme.md fileco-authored-by: kai cataldo <kai@kaicataldo.com>* docs: update configuration-files.mdaccepted suggestions made to the configuration-files.md file in eslint configuration documentation.* docs:  update configuration-files.mdaccepted a suggestion to edit configuration-files.md* docs: update configuration-files.mdaccepted suggestions made to the configuration-files. md file in eslint configuration documentation.* docs: update docs/user-guide/configuring/rules.mdaccepted a suggestion to rules. md file.co-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* docs: update docs/user-guide/configuring/plugins.mdaccepted a suggestion to plugins.md file.co-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* docs: update docs/user-guide/configuring/language-options.mdaccepted a suggestion to language-options.md file.co-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>* docs: update readme.mdupdated the table of content to change the name of a heading from "eslintignore" to "the eslintignore file"* docs: update ingoring-code.mdaccepted suggestions to the ignoring-code.md file.* docs: update configuration-files.mdaccepted suggestions made to configuration-files.md.* docs: update docs/user-guide/configuring/language-options.mdaccepted a suggestion made to language-options.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>* docs: update docs/user-guide/configuring/plugins.mdaccepted a suggestion made to plugins.mdco-authored-by: brandon mills <btmills@users.noreply.github.com>* docs: update ignoring-code.mdaccepted suggestions made to ignoring-code.md* docs: update configuration-files.mdaccepted suggestions to configuration-files.md* update docs/user-guide/configuring/ignoring-code.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/configuring/ignoring-code.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/configuring/language-options.mdco-authored-by: kai cataldo <kai@kaicataldo.com>* update docs/user-guide/configuring/language-options.md* update ignoring-code.mdupdated ignoring-code.md by incorporating some suggested changes.* [docs] update rules.mdupdated rules.md by moving`disabling inline comments` to this section.* [docs] update readme.mdupdated the table of contents* [docs] update rules.md* update docs/user-guide/configuring/ignoring-code.md* update docs/user-guide/configuring/ignoring-code.md* update docs/user-guide/configuring/ignoring-code.md* update docs/user-guide/configuring/ignoring-code.md* update docs/user-guide/configuring/ignoring-code.md* docs: update configuration-files.md* docs: update configuration-files.mdco-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>co-authored-by: kai cataldo <kai@kaicataldo.com>co-authored-by: brandon mills <btmills@users.noreply.github.com>	True	
8.10.0	False	
fix: remove catastrophic backtracking vulnerability (fixes #10002) (#10019)change template substitution regex to exclude fields with whitespace.this addresses possible o(n^2) catastrophic backtracking behavior.very unlikely to be exploited. for #10002.	True	
docs: update semantic versioning policy (#13970)* docs: update semantic versioning policyexplicitly mention how we handle new language features for rules.* update readme.md	True	
new rule: no-path-concat (fixes #540)	False	
sponsors: sync readme with website	True	
docs: distinguish examples in rules under stylistic issues part 6 (#6567)	False	
chore: lint all files in the repo at the same time (#11425)previously, `npm run lint` would invoke eslint three separate times for different sets of files. there doesn't seem to have been a clear reason for this (it was added in 9b8c639d35d154a27b81470cd432a1ae0e707ef7 about 5 years ago), and some files in the repo were inadvertently being missed. this commit updates the lint task to simply invoke eslint once on the entire repository. it also fixes some linting errors in files that were previously being skipped.	True	
build: increase windows mocha timeout (fixes #3133)	False	
remove unused sinon requiresalso add .jshintignore to exclude coverage and installed modules	True	
fix: no-useless-escape wrong loc and fix with crlf in template elements (#13953)	False	
fix general config not to be modified by comment config in files (fixes #806)	True	
add missing plugin reference (#12796)rules from plugins need to be namespaced using plugin name, which is missing.	True	
fix: no-extend-native disallow using object.properties (fixes #4180)	False	
fix: nonblock-statement-body-position multiline error (fixes #8202) (#8203)the nonblock-statement-body-position rule is intended to compare the *start* line of a statement with the end line of the previous token. due to a typo, it was comparing the *end* line of the statement instead, which caused false positives for multiline statements.	True	
fix: don't report async/generator callbacks in `array-callback-return` (#7172)(refs #7101)	True	
adding in rule no-space-before-semi to prevent spaces before semicolons. fixes #629	True	
v0.0.7 released	False	
chore: add eslint path to plugin-missing message (#10283)* chore: add eslint path to plugin-missing message* chore: clarifying path locationthe path is to the eslint package root, not to (e.g.) bin/eslint.js or cliengine.	True	
build: package.json and changelog update for 2.11.1	True	
fix: `no-unused-vars` had been missing some parameters (fixes #4047)if function expressions or arrow function expressions were exported,these parameters had been not reported by `no-unused-vars`.	True	
build: changelog update for 8.0.1	True	
5.9.0	False	
build: bump perf limit so travis won't fail every time (fixes #780)	True	
docs: escape underscores in no-path-concat	False	
fix: don't explode on default export function (fixes #1985)	False	
fix: allow individual newlines in space-in-brackets (fixes #1614)previously, spacing was enforced unless both brackets were separated fromvalues by new lines. this change allows a new line on one side whilestill enforcing the spacing on the other.	True	
fix: allow blocked comments with markers and new-line (fixes #2777)	False	
docs: add bountysource badge to readme	True	
new: `no-unmodified-loop-condition` rule (fixes #4523)	False	
docs: clarify `requirereturn` option for valid-jsdoc rule (fixes #4859)	True	
chore: update dev deps to latest (#14624)* chore: update devdeps to latest* update package.json* update .markdownlint.yml* update package.json	True	
add test for 0x... hex literals in no-octal tests	True	
docs: explain why we disable lock files (refs eslint/tsc-meetings#234) (#14006)	False	
docs: add note about "patch release pending" label to maintainer guide (#9763)	True	
docs: add instruction re home-directory config files (refs #7729) (#9426)without this, config file in home directory makes 1 test fail.	True	
new: add `eslint:all` option (fixes #6240) (#6248)this adds a new option to allow a user to extend `eslint:all` in orderto enable all rules by default.	True	
fix: `no-trailing-spaces` autofix to handle linebreaks (fixes #4050)	True	
3.11.1	False	
docs: add sails-hook-lint to integrations list (#7679)	True	
build: ensure absolute links in docs retain .md extensions (fixes #7419) (#7438)	True	
chore: improve test coverage for node-event-generator (#8287)previonsly, there were insufficient tests for alphabetical selector sorting in the case where selectors had equal specificity. there were also no tests for emitting a selector whose type could not be inferred while exiting the ast.	True	
docs: fix typos (#9723)* fix typos* fix capitalization manually	False	
fix: ensure class names are marked as used (fixes #1967)	False	
fix: allow line comment exception in object-curly-spacing (fixes #11902) (#12216)	False	
update: add fixer for `prefer-spread` (#7283)	True	
fix: `no-this-before-super` crash on unreachable paths (fixes #5894)	True	
update: add quotes to error messages to improve clarity (fixes #4313)	True	
new: add new rule `object-property-newline` (fixes #5667) (#5933)add a new rule `object-property-newline` that is a port fromjscs requireobjectkeysonnewline.	True	
upgrade: espree v5.0.0 (#11161)	False	
docs: add 'when not to use' section to space-infix-ops (#10931)	True	
chore: add tidelift to funding.yml (#13371)	True	
fix: require-atomic-updates false positive across await (fixes #11954) (#13915)	True	
fixes #804: clean up implementation of #803 (which fixed #781)i also changed it to be median of 5, since it's now trivial to chooseany number of runs.	True	
update: add fixer for `capitalized-comments` (#7701)	True	
fix: `no-extra-bind` to flag all arrow funcs (fixes #3672)	True	
docs: clarify that no-unsafe-negation is in eslint:recommended (#8371)no-unsafe-negation was added to eslint:recommended in https://github.com/eslint/eslint/pull/7467, but this is not reflected in the docs. this commit updates the docs to indicate that no-unsafe-negation is in eslint:recommended.similarly, no-negated-in-lhs and no-native-reassign have not been in eslint:recommended since https://github.com/eslint/eslint/pull/7467, so this commit updates the docs to indicate that.(refs https://github.com/eslint/eslint/issues/8370)	True	
0.1.4	False	
fix: `no-redeclare` and `no-sahadow` for builtin globals (fixes #3971)when there is a special scope (`globalreturn` or `modules`), no longer`no-redeclare` reports redeclarations of built-in globals. and whenthat, `no-shadow` reports shadowing of built-in globals.	True	
docs: add note and example for extending the range of fix (refs #13706) (#13748)* chore: add tests for extending fix ranges (refs #13706)* add note and example in working-with-rules	True	
docs: typo fix in consistent-this rule doc fixes #5240	False	
update: implement auto fix for semi-spacing rule (fixes #3829)	True	
fix: comma first issue in `indent` (fixes #4739, fixes #3456)	False	
new: func-call-spacing rule (fixes #6080) (#6749)	False	
new: global-require rule (fixes #2318)	False	
docs: fix a typo in capitalized-comments documentation (#7666)	False	
fix: don't autofix with linter.verifyandfix when `fix: false` is used (#9098)due to a bug, `linter.verifyandfix` previously applied all autofixes when the `fix` option was set to `false`, even though the documented behavior was to apply no autofixes. this commit fixes the bug.	True	
build: change mock-fs path without ssh (fixes #8207) (#8208)	False	
docs: trailing commas not allowed in json (#8969)	True	
chore: fix default issue template (#9946)	False	
update: add nestedbinaryexpressions to no-extra-parens (fixes #3065)this reverts commit 134cb1f4f7242d47d54033843a8b4db0b48f6c03.	True	
update: implement auto fix for `space-return-throw-case` (fixes #3732)	True	
update: add fixer for `wrap-iife` (#7196)	True	
update: treat comment tokens in template-curly-spacing (fixes #12744) (#12775)	True	
fix: no-extra-label autofix should not remove labels used elsewhere (#7885)	True	
fix: `no-this-before-super` with the code path analysis (refs #3530)	True	
fix: support jsx spread operator (fixes #1634)	True	
feat: add eslint favicon to the html report document (#15671)	True	
fix: do not cache `package.json` (fixes #4611)* read `package.json` on every config load by not using `require`	True	
docs: fix multiline-ternary typos (#6704)	False	
upgrade: @eslint/eslintrc@1.0.3 for jest workaround (#15164)* upgrade: @eslint/eslintrc@1.0.3 for jest workaround* chore: remove unused disable comments`eslint-plugin-node`'s `no-missing-require` previously had a falsepositive report that the `@eslint/eslintrc/universal` export did notexist. now with the release of `@eslint/eslintrc@1.0.3` with a "fake"(not part of `exports` in `package.json`) `universal` export, as aworkaround for jest, `no-missing-require` is satisfied that it doesexist.	True	
build: add karma-chrome-launcher support (#11027)* revert "revert "build: use karma-chrome-launcher to run tests (#10898)" (#10973)"this reverts commit 536611ae7e9b752b1c0dcc0e7f5def861a88aee0.* build: add devdeps puppeteer@1.9.0* chore: set the path to chromium binary	True	
sponsors: sync readme with website	True	
fix: do not fail on unknown operators from custom parsers (fixes #10475) (#10476)	True	
chore: add common 3rd party parsers to issue template (#13596)	True	
fix: update semi for class-fields (refs #14857) (#14945)* fix: update semi for class-fields (refs #14591)* fixed several bugs* ensure beforestatementcontinuationchars does not apply to class fields* fix semi rule bugs for class fields* fix edge cases	True	
include instructions for working with eslinttester	True	
new: add default-case-last rule (fixes #12665) (#12668)	False	
fix: typo: missing word in docs (#11750)	False	
chore: add assertions on reporting location in `semi` (#14899)	False	
docs: update changelog.md for v4.0.0-alpha.1 release (#8488)	True	
docs: update readme with links and faqs	False	
fix: no-dupe-args to work with destructuring (fixes #2148)	True	
docs: enable example highlighting in rules examples (ref #6444) (#7644)some examples showed in the rules docs has outdated exampleswithout highlight so i've updated them in order to enable it.i've also change the order in some examples and change someminimum text to achieve this purpose	True	
docs: correct a typo in generator-star-spacing documentation (#9205)	True	
docs: new syntax issue template (#14826)	False	
chore: add tests to cover array and object values and leading commas. (#9502)	True	
fix: do not autofix object-shorthand with comments (fixes #10038) (#10238)* fix: do not autofix object-shorthand with comments (fixes #10038)* fix: catch comments before and after colon (fixes 10038)	True	
fix: `no-extra-parens` to check for nulls (fixes #6161) (#6164)	True	
update: option to ignore for loops in init-declarations (fixes #3641)	True	
revert "fix: sanitise jekyll interpolation during site generation (fixes #2297)"	False	
fixes #407: no-spaced-func rule flagging non-argument-list spaced parens	False	
upgrade: doctrine to 2.0.0 (#8269)	True	
update: implement auto fix for `space-infix-ops` rule (fixes #3801)	True	
chore: enable default-param-last (#12244)note: this is a breaking change in eslint-config-eslint.refs:https://github.com/eslint/eslint/commit/0313441d016c8aa0674c135f9da67a676e766ec5	False	
docs: fix typo in pr template (#15365)* docs: fix typo in pr template* update .github/pull_request_template.mdco-authored-by: nitin kumar <snitin315@gmail.com>co-authored-by: nicholas c. zakas <nicholas@humanwhocodes.com>	False	
breaking: update eslint:recommended (fixes #6403) (#6509)	False	
update: rule `new-cap` checks capitalized functions (fixes #904)	False	
sponsors: sync readme with website	True	
docs: update rule configuration values in examples (#11323)	False	
fix: don't warn on jsx literals with newlines (fixes #1533)	False	
docs: fix typo in example for `sort-keys` rule (#15393)	True	
sponsors: sync readme with website	True	
docs: fix explanation for space-before-keywords	True	
chore: no-regex-spaces uses internal rule message format (fixes #7052) (#7053)	True	
fix: don't count line after eof in max-lines (#13735)* fix: don't count line after eof in max-lines* update docs	False	
sponsors: sync readme with website	True	
3.4.0	False	
docs: fix a typo	False	
chore: remove `target.all` from `makefile.js` (#15088)* chore: move require* chore: remove target.all	False	
breaking: remove array-callback-return from recommended (fixes #8428) (#8433)	False	
fix: allow same-line comments in padded-blocks (fixes #5055)this allows comments that occur on the same line as the opening orclosing brace.	False	
fix: misconfigured default option for lines-around-comment rule (fixes #2677)	True	
update: change reporting location for `curly` rule (refs #12334) (#14766)* update: change reporting location for `curly` rule* chore: refactor code* chore: refactor code* update: report body/consequent/alternate node* chore: update comment* chore: refactor code	True	
build: changelog update for 7.31.0	True	
5.12.1	False	
update: fix false negative of `quotes` with \n in template (fixes #7646) (#7647)* update: fix false negative of `quotes` with \n in template (fixes #7646)* fix incorrect comment	False	
breaking: change 'no-yoda' rule to 'yoda' and add "always" option (fixes #959)	True	
fix: `indent` array with memberexpression (fixes #4203)	False	
docs: remove readonly/writable global logic from no-undef (fixes #11963) (#12053)* docs: remove readonly/writable global logic from no-undef (fixes #11963)* add references to other rules	True	
chore: rename misspelled identifier in test (#14346)	False	
fix tests broken due to new rule message text	True	
fix: allow no tokens after `return` keyword (fixes #10372) (#10379)	True	
fix: `semi-spacing` had conflicted with `block-spacing` (fixes #3721)i made `semi-spacing` ignoring spacing which is after semicolons if thesemicolon is before a closing parenthesis (`}` or `)`).	True	
upgrade: upgrade globals to 8.11.0 (fixes #3599)	True	
fix: extend prefer-const fixer range to whole declaration (fixes #13899) (#14033)* fix: extend fixer range of prefer const to whole declaration* chore: update prefer-const test case	True	
build: changelog update for 7.14.0	True	
update: allow template literals (fixes #5234)	False	
fix: nested `extends` with relative path (fixes #6358) (#6359)	False	
1.4.3	False	
chore: add a script for testing with more control (#12444)	True	
docs: fix reference to code of conduct (#13797)	True	
update: no-restricted-globals custom error messages (fixes #8315) (#8932)* update: no-restricted-globals custom error messages (fixes #8315)* using option "name" instead of "global"	True	
don't output anything when there are no errors in compact formatter (fixes #408)	True	
fix: no-unreachable should check top-level statements (fixes #1138)	True	
docs: `padded-blocks` `never` case (fixes #7868) (#7878)	False	
update: implement auto fix for block-spacing rule (fixes #3859)	True	
update: ensure operator-assignment handles exponentiation operators (#7970)	True	
update: fix class-methods-use-this false negatives with exceptmethods (#12077)	False	
docs: added more related rules sections (fixes #1347)	False	
fix: add assignmentpattern to space-infix-ops (fixes #3380)	True	
update: node 0.8 no longer supported (fixes #734)	False	
update: allow pre-parsed code (fixes #1025, fixes #948)	False	
docs: fix sort-imports rule block language (#9805)one of the blocks in rule `sort-imports`was missing language highlighting soadded that as in two previous blocks.	True	
docs: fix leaky anchors in v4 migration page (#13635)	False	
chore: enable quote-props rule in eslint-config-eslint (refs #5188) (#5938)	False	
docs: add url to each of the rules (refs #6582) (#9788)* docs: add url to each of the rules (refs #6582)code mod:export default function transformer(file, api) {const j = api.jscodeshift;const name = file.path.split('/').pop().replace(/.js$/, '');return j(file.source).find(j.objectexpression).filter(path => path.parentpath.node.key && path.parentpath.node.key.name === 'docs').foreach(path => {const prop = j.property('init', j.identifier('url'), j.literal(`https://eslint.org/docs/rules/${name}`));j(path).replacewith(j.objectexpression([...path.node.properties, prop]));}).tosource({lineterminator: '\n'});}* new: internal-rules/consistent-docs-url (refs #6582)add a lint rule to ensure that each rule has a meta.docs.url property with the correct value.	True	
fix: include string literal keys in object-shorthand (fixes #2374)	False	
update: implement auto fix for `space-before-blocks` rule (fixes #3776)	True	
build: changelog update for 4.12.1	True	
new: add --max-warnings flag to cli (fixes #2769)	True	
docs: modify unnecessary flag docs in quote-propsit previously suggested that it does the opposite, i.e. that when it's `true` you can leave keywords unquoted.[ci skip]	False	
update: improve perf not traversing default ignored dirs (fixes #5679) (#6276)	False	
new: `prefer-arrow-callback` rule (fixes #3140)	False	
chore: avoid unnecessarily complex foreach calls in no-extra-parens (#9159)	True	
chore: simplify and improve performance for autofix (#8035)* chore: refactor fix* fix: first overlap check	True	
2.4.0	False	
4.0.0-alpha.1	False	
docs: fix wrong config in id-length example. (#9303)	False	
docs: clarify docs for api.verify (fixes #5101, fixes #5104)	True	
breaking: throw an error for invalid global configs (refs #11338) (#11517)	True	
the semi rule now reports correct line numberthe semi rule now reports the node's end location as the errorlocation, as it should.fixes #451	False	
fix: make stroustrup brace-style closing message make sense (fixes #719)	False	
feat: support arbitrary module namespace names in no-restricted-exports (#15478)* feat: support arbitrary module namespace names in no-restricted-exportsrefs #15465* align quotes	False	
fix: disable no-var autofixer in some incorrect cases in loops (#7811)the autofixer for the no-var rule was converting `var` to `let` within loops,but in some cases that can introduce incorrect behavior because `let` variablesin loops only live for the lifetime of their loop iteration, while `var`variables within loops use the same variable across all iterations.we can still convert to `let` in typical cases as long as we check for casesthat might cause a behavior difference:* if the variable is referenced from a closure, then that closure might becalled after the current loop iteration ends. for `var` declarations, theclosure refers to the shared variable across all iterations, and for `let`declarations, the closure refers to the variable just from that one iteration.* if the variable is used before its first assignment in the loop body, then for`var` declarations it will retain its value from the previous iteration, butfor `let` declarations it will start as undefined.this change skips the autofixer for any variables referenced by any closure, andfor any variables that are not initialized right when they are declared. someadditional static analysis can make both of these cases smarter, but this shouldhandle most common cases.	True	
feat: update prefer-const for class static blocks (#15325)fixes false negatives at the top level of class static blocks.refs #15016	True	
docs: fix typo in default `cachelocation` value	False	
docs: example fix for `no-extra-parens` rule (fixes #3527)	True	
build: enable codeclimate (fixes #4068)	False	
rule: block-scope-var to check for variables declared in block-scope	True	
new: add no-case-declarations rule (fixes #4278)this rule disallows lexical declarations in case/default clauses.	False	
chore: update `strip-ansi` dependency (#15221)fixes #15218	False	
fixing no-self-compare	False	
new: add greasemonkey environment (fixes #4715)	False	
build: changelog update for 8.6.0	True	
fix: shallow cloning issues in eslint config (fixes #2961)	False	
7.0.0-rc.0	False	
fix: eslint.report can be called w/o node if loc provided (fixes #4220)also updated docs to note that either node or loc (or both) must be supplied. code will now throw clearer message if neither is supplied and will not throw typeerror if node is not supplied.	True	
upgrade: shelljs to ^0.7.5 (fixes #7316) (#7465)	True	
build: bundle espree (fixes eslint/eslint.github.io#546) (#11467)* build: bundle espree (fixes eslint/eslint.github.io#546)* update webpack.config.jsco-authored-by: aladdin-add <weiran.zsd@outlook.com>* chore: add babel-polyfill	False	
sponsors: sync readme with website	True	
docs: add configuration comments in examples (#13738)* docs: add configuration comments in examples* declare var in example* typo	False	
fix: `no-unused-vars` had not shown correct locations for `/*global` (fixes #3617)	True	
fix: export class syntax for `require-jsdoc` rule (fixes #4667)	True	
fix: `no-self-assign` false positive at shorthand (fixes #5371)	False	
fix: remove `ismarkedasused` function name (fixes #4783)	False	
chore: fix incorrect comment in safe-emitter.js (#9605)	False	
chore: minor typo fix (#12112)	False	
docs: update ecmafeatures list (fixes #1942)	False	
0.14.0	False	
chore: add more test cases to space-infix-ops (#10936)	True	
docs: fix rule name in example (#6279)	False	
fix: fix writing config file when `source` is `prompt` (#10422)	True	
chore: update issue templates with new format (#10309)	True	
new: no-useless-rename (fixes #6058) (#6249)	False	
fix: make no-redeclare work with let (fixes #917)	False	
build: package.json and changelog update for 3.7.1	True	
fix: compatibility for node 0.8	True	
fix: no-extra-boolean-cast invalid autofix with yield before negation (#12164)	True	
chore: avoid loose equality assertions (#9415)* chore: avoid loose equality assertionsthis updates the `no-restricted-syntax` configuration to disallow`assert.equal` and `assert.notequal` in favor of `assert.strictequal`and `assert.notstrictequal`. it also fixes a few places where the testswere relying on a loose equality check (e.g. comparing a single-elementarray to a string).* use assert.deepstrictequal instead of assert.deepequal* revert accidental fixture changes	True	
fix: require-await crash on global await (#12571)	False	
docs: add mention of compatible parsers	False	
update: support bigint and dynamic import (refs #11803) (#11983)* upgrade deps* make codepathanalyzer handling importexpression as throwable* fix new-cap rule* fix astutils.getprecedence* fix astutils.isnullliteral* add env.es2020* fix func-call-spacing rule* fix function-paren-newline rule* fix indent rule* fix no-extra-parens rule* upgrade: espree@^6.1.0, eslint-visitor-keys@^1.1.0* chore: ignore tools/internal-rules/node_modules* upgrade: acorn@^7.0.0this avoids a dependency deduplication conflict for developers	True	
chore: incorrect source code test text (#8096)	True	
update: loosens regex rules around intentional fall through comments (fixes #2811)	False	
fix: remove internal property from config generation (fixes #7758) (#7761)	False	
update: improve `max-statements-per-line` message (fixes #6287) (#7044)	False	
fix: `space-before-blocks` to consider classes (fixes #3062)	True	
build: improve `npm run perf` command (fixes #5028)- a performance test for multi files was added. this test is using`eslint@1.10.3` as the test target.- `.eslintrc` of performance tests came to turn all rules on.	True	
fix: dot notation rule failing to catch string template (fixes #9350) (#9357)	True	
breaking: exit code is now error count	False	
bug: open parens in args causes no-spaced-func to triggerfixes #353.	True	
update: improve array-callback-return report message (#13395)* update: improve array-callback-return report (explains why)the array-callback-return rule should explain that a return value is required because the surrounding method requires it. this makes it clear that eg. .filter() expects the passed function to return something, rather than a general expectation of that function.the error messages for expectedatend/inside now read 'method .{{arraymethodname}}() expected a value to be returned at the end of {{name}}.' and 'method .{{arraymethodname}}() expected a return value from {{name}}.'* update lib/rules/array-callback-return.jsco-authored-by: kai cataldo <kai@kaicataldo.com>* update lib/rules/array-callback-return.jsco-authored-by: kai cataldo <kai@kaicataldo.com>* update: improve array-callback-return report (explains why) patch* made tests match proposed new message.* fix: foreach message, .from owner* foreach has a message, and describes why no return value is expected.* present tense ('array.from expects no' vs 'array.from expected no')* added explicit check of the foreach message* fix: cleaner production of full-qyalified method nameco-authored-by: kai cataldo <kai@kaicataldo.com>	True	
build: update sitegen script (closes #1725)	False	
docs: consistent example headings & text pt2 (refs #5446)(#6491)1. ensure each doc has "examples" heading, and that eachoption-specific example pair also has a suitable heading.2. ensure text above examples is consistent as per #5446this pr does not attempt to address issues other thanthose stated above; such issues will be dealt with onsubsequent sweeps of the docs detailed in #6444..note: skipped no-duplicate-imports due to #6455, willcome back to that one at later date.	True	
docs: add 13 as allowed ecma version (fixes #15159) (#15162)* docs: add 13 as allowed ecma version* update language-options.md	False	
new: add no-undefined rule (fixes #1020)	False	
fix: duplicated autofix output for inverted fix ranges (fixes #8116) (#8117)the padded-blocks rule sometimes produces a fix range where the start index of the range is larger than the end index. due to the changes in fcc38db469d987e97b668675bf7822c7c0, when source-code-fixer encountered such a range, it would output the text between the end index and the start index twice. this commit ensures that source-code-fixer behaves the same way as it previously did when it encounters an inverted fix range (it should act as if the start and end indices were equal). in the future, we should also update padded-blocks to avoid producing inverted fix ranges.	True	
4.5.0	False	
docs: clean up description of recommended rules (fixes #4365)	False	
docs: quotes rule - when does \n require backticks (#9135)	False	
sponsors: sync readme with website	True	
new: allow extends to be an array (fixes #2699)	True	
build: fix prefer-reflect rule to not crash site gen build (#7471)	True	